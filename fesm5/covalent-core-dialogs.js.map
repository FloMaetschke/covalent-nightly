{"version":3,"file":"covalent-core-dialogs.js","sources":["ng://@covalent/core/dialogs/dialog.component.ts","ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts","ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts","ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts","ng://@covalent/core/dialogs/dialogs.module.ts","ng://@covalent/core/dialogs/services/dialog.service.ts"],"sourcesContent":["import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({ selector: 'td-dialog-title' })\nexport class TdDialogTitleDirective {}\n\n@Directive({ selector: 'td-dialog-content' })\nexport class TdDialogContentDirective {}\n\n@Directive({ selector: 'td-dialog-actions' })\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class TdDialogComponent implements AfterContentInit {\n  @ContentChildren(TdDialogTitleDirective) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss'],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  styleUrls: ['./prompt-dialog.component.scss'],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input', { static: true }) _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close();\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport {\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n} from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatDialogModule, MatInputModule, MatButtonModule],\n  declarations: [TD_DIALOGS],\n  exports: [TD_DIALOGS],\n  entryComponents: [TD_DIALOGS_ENTRY_COMPONENTS],\n})\nexport class CovalentDialogsModule {}\n","import {\n  Injectable,\n  ViewContainerRef,\n  Provider,\n  SkipSelf,\n  Optional,\n  Inject,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\nimport { DragDrop, DragRef } from '@angular/cdk/drag-drop';\nimport { DOCUMENT } from '@angular/common';\nimport { CovalentDialogsModule } from '../dialogs.module';\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\nexport interface IDraggableConfig<T> {\n  component: ComponentType<T>;\n  config?: MatDialogConfig;\n  // CSS selectors of element(s) inside the component meant to be drag handle(s)\n  dragHandleSelectors?: string[];\n  // Class that will be added to the component signifying drag-ability\n  draggableClass?: string;\n}\n\n@Injectable({\n  providedIn: CovalentDialogsModule,\n})\nexport class TdDialogService {\n  private _renderer2: Renderer2;\n\n  constructor(\n    @Inject(DOCUMENT) private _document: any,\n    private _dialogService: MatDialog,\n    private _dragDrop: DragDrop,\n    private rendererFactory: RendererFactory2,\n  ) {\n    this._renderer2 = rendererFactory.createRenderer(undefined, undefined);\n  }\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdAlertDialogComponent> = this._dialogService.open(\n      TdAlertDialogComponent,\n      dialogConfig,\n    );\n    const alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdConfirmDialogComponent> = this._dialogService.open(\n      TdConfirmDialogComponent,\n      dialogConfig,\n    );\n    const confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdPromptDialogComponent> = this._dialogService.open(\n      TdPromptDialogComponent,\n      dialogConfig,\n    );\n    const promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * Opens a draggable dialog containing the given component.\n   */\n  public openDraggable<T>({\n    component,\n    config,\n    dragHandleSelectors,\n    draggableClass,\n  }: IDraggableConfig<T>): MatDialogRef<T> {\n    const dialogRef: MatDialogRef<T, any> = this._dialogService.open(component, config);\n\n    const CDK_OVERLAY_PANE_SELECTOR: string = '.cdk-overlay-pane';\n    const CDK_OVERLAY_CONTAINER_SELECTOR: string = '.cdk-overlay-container';\n\n    dialogRef.afterOpened().subscribe(() => {\n      const dialogElement: HTMLElement = <HTMLElement>this._document.getElementById(dialogRef.id);\n      const draggableElement: DragRef = this._dragDrop.createDrag(dialogElement);\n\n      if (draggableClass) {\n        const childComponent: Element = dialogElement.firstElementChild;\n        this._renderer2.addClass(childComponent, draggableClass);\n      }\n\n      if (dragHandleSelectors && dragHandleSelectors.length) {\n        const dragHandles: Element[] = dragHandleSelectors.reduce(\n          (acc: Element[], curr: string) => [...acc, ...Array.from(dialogElement.querySelectorAll(curr))],\n          [],\n        );\n        if (dragHandles.length > 0) {\n          draggableElement.withHandles(<HTMLElement[]>dragHandles);\n        }\n      }\n\n      const rootElement: Element = dialogElement.closest(CDK_OVERLAY_PANE_SELECTOR);\n      if (rootElement) {\n        draggableElement.withRootElement(<HTMLElement>rootElement);\n      }\n      const boundaryElement: Element = dialogElement.closest(CDK_OVERLAY_CONTAINER_SELECTOR);\n      if (boundaryElement) {\n        draggableElement.withBoundaryElement(<HTMLElement>boundaryElement);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    const dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n}\n"],"names":[],"mappings":"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"}