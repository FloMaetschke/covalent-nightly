{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@covalent/core/file/directives/file-select.directive.ts","ng://@covalent/core/file/directives/file-drop.directive.ts","ng://@covalent/core/file/file-input/file-input.component.ts","ng://@covalent/core/file/file-upload/file-upload.component.ts","ng://@covalent/core/file/file.module.ts","ng://@covalent/core/file/services/file.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","TdFileSelectDirective","model","_multiple","onFileSelect","EventEmitter","defineProperty","multiple","coerceBooleanProperty","undefined","onChange","event","target","HTMLInputElement","files","length","value","update","emit","Directive","args","selector","NgModel","decorators","type","Optional","Host","Input","Output","HostBinding","HostListener","_TdFileDropMixinBase","mixinDisabled","TdFileDropBase","TdFileDropDirective","_super","_renderer","_element","_this","call","onFileDrop","tslib_1.__extends","disabled","onDrop","dataTransfer","removeClass","nativeElement","_stopEvent","onDragOver","transfer","dropEffect","_typeCheck","types","items","mozItemCount","onDragEnter","addClass","onDragLeave","contains","indexOf","preventDefault","stopPropagation","inputs","Renderer2","ElementRef","TdFileInputLabelDirective","templateRef","viewContainerRef","TemplateRef","ViewContainerRef","TemplatePortalDirective","_changeDetectorRef","_TdFileInputMixinBase","mixinControlValueAccessor","TdFileInputBase","TdFileInputComponent","onSelect","_inputElement","handleSelect","writeValue","clear","setProperty","inputElement","onDisabledChange","v","setDisabledState","isDisabled","Component","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","template","ChangeDetectorRef","ViewChild","static","_TdFileUploadMixinBase","TdFileUploadBase","TdFileUploadComponent","_required","defaultColor","activeColor","cancelColor","onUpload","onCancel","required","uploadPressed","cancel","fileInput","ContentChild","TD_FILE","CovalentFileModule","NgModule","imports","FormsModule","CommonModule","MatIconModule","MatButtonModule","PortalModule","declarations","exports","TdFileService","_http","_progressSubject","Subject","_progressObservable","asObservable","send","url","method","body","_a","_b","headers","params","Error","req","HttpRequest","toUpperCase","reportProgress","HttpHeaders","HttpParams","fromObject","request","pipe","tap","handleEvent","upload","options","Observable","subscriber","xhr","XMLHttpRequest","formData","FormData","file","append","error","onprogress","progress","lengthComputable","Math","round","loaded","total","next","onreadystatechange","readyState","status","response","complete","open","setRequestHeader","key","HttpEventType","Sent","UploadProgress","Response","Injectable","providedIn","HttpClient"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {}\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      let fileInputEl: HTMLInputElement = <HTMLInputElement>event.target;\n      let files: FileList = fileInputEl.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\n      }\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (\n      this.disabled ||\n      (!this._multiple && ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))\n    ) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (\n        ((<any>types).contains && (<any>types).contains('Files')) ||\n        ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)\n      ) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput', { static: true }) _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n  /**\n   * Sets disable to the component. Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ContentChild,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileUploadComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent, { static: false }) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective, { static: false }) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatIconModule, MatButtonModule, PortalModule],\n  declarations: [TD_FILE],\n  exports: [TD_FILE],\n})\nexport class CovalentFileModule {}\n","import { Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent, HttpEventType, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject, Subscriber } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CovalentFileModule } from '../file.module';\n/**\n * @deprecated should be removed in favor of IUploadInit\n * @breaking-change 3.0.0\n */\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: { [key: string]: string };\n  formData?: FormData;\n}\n\nexport interface IUploadExtras {\n  headers?: { [name: string]: string | string[] };\n  params?: { [param: string]: string | string[] };\n}\n\n@Injectable({\n  providedIn: CovalentFileModule,\n})\nexport class TdFileService {\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  /**\n   * Creates a new instance\n   * @param _http the http client instance\n   * @breaking-change 3.0.0 remove 'Optional' decorator once the legay upload method is removed\n   */\n  constructor(@Optional() private readonly _http: HttpClient) {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * Uploads a file to URL.\n   */\n  send(\n    url: string,\n    method: string,\n    body: File | FormData,\n    { headers, params }: IUploadExtras = {},\n  ): Observable<HttpEvent<any>> {\n    if (!this._http) {\n      throw new Error('The HttpClient module needs to be imported at root module level');\n    }\n    const req: HttpRequest<File | FormData> = new HttpRequest(method.toUpperCase(), url, body, {\n      reportProgress: true,\n      headers: new HttpHeaders(headers || {}),\n      params: new HttpParams({ fromObject: params || {} }),\n    });\n    return this._http.request(req).pipe(tap((event: HttpEvent<any>) => this.handleEvent(event)));\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * @deprecated use send instead\n   * @breaking-change 3.0.0\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round((event.loaded / event.total) * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (let key in options.headers) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n\n  private handleEvent<T = any>(event: HttpEvent<T>): void {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        this._progressSubject.next(0);\n        break;\n      case HttpEventType.UploadProgress:\n        this._progressSubject.next(Math.round((100 * event.loaded) / event.total));\n        break;\n      case HttpEventType.Response:\n        this._progressSubject.next(100);\n        break;\n      default:\n        break;\n    }\n  }\n}\n"]}