{
  "version": 3,
  "file": "covalent-core-message.umd.min.js",
  "sources": [
    "ng://@covalent/core/message/out/message.component.ts",
    "ng://@covalent/core/message/out/message.module.ts"
  ],
  "sourcesContent": [
    "import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\n         HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'td-message',\n  template: `<div tdMessageContainer></div>\n<ng-template>\n  <div class=\"td-message-wrapper\">\n    <mat-icon class=\"td-message-icon\">{{icon}}</mat-icon>\n    <div class=\"td-message-labels\">\n      <div *ngIf=\"label\" class=\"td-message-label\">{{label}}</div>\n      <div *ngIf=\"sublabel\" class=\"td-message-sublabel\">{{sublabel}}</div>\n    </div>\n    <ng-content select=\"[td-message-actions]\"></ng-content>\n  </div>\n</ng-template>`,\n  styles: [`:host{display:block}:host .td-message-wrapper{padding:8px 16px;min-height:52px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}:host .td-message-wrapper .td-message-labels{-webkit-box-flex:1;-ms-flex:1;flex:1}.td-message-icon{margin-right:16px}::ng-deep [dir=rtl] .td-message-icon{margin-left:16px;margin-right:0}`],\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdMessageComponent implements AfterViewInit {\n\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): any {\n    return { value: !this._opened, duration: 100 };\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n",
    "import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [\n  TdMessageComponent,\n  TdMessageContainerDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TD_MESSAGE,\n  ],\n  exports: [\n    TD_MESSAGE,\n  ],\n})\nexport class CovalentMessageModule {\n\n}\n"
  ],
  "names": [
    "TdMessageContainerDirective",
    "viewContainer",
    "this",
    "type",
    "Directive",
    "args",
    "selector",
    "ViewContainerRef",
    "TdMessageComponent",
    "_renderer",
    "_changeDetectorRef",
    "_elementRef",
    "_opened",
    "_hidden",
    "_animating",
    "_initialized",
    "icon",
    "addClass",
    "nativeElement",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "value",
    "duration",
    "undefined",
    "_color",
    "set",
    "color",
    "removeClass",
    "markForCheck",
    "opened",
    "open",
    "close",
    "animationDoneListener",
    "_detach",
    "ngAfterViewInit",
    "_this",
    "Promise",
    "resolve",
    "then",
    "_attach",
    "_startAnimationState",
    "toggle",
    "_childElement",
    "createEmbeddedView",
    "_template",
    "clear",
    "Component",
    "template",
    "styles",
    "animations",
    "tdCollapseAnimation",
    "Renderer2",
    "ChangeDetectorRef",
    "ElementRef",
    "ViewChild",
    "TemplateRef",
    "collapsedAnimation",
    "HostBinding",
    "hidden",
    "label",
    "Input",
    "sublabel",
    "HostListener",
    "TD_MESSAGE",
    "CovalentMessageModule",
    "NgModule",
    "imports",
    "CommonModule",
    "MatIconModule",
    "declarations",
    "exports"
  ],
  "mappings": "mjBAAA,IAAAA,EASE,SAAFA,EAAqBC,GAAAC,KAArBD,cAAqBA,iBAJrB,CAAAE,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,8DANZ,CAAAH,KAA4EI,EAAAA,oBA8B5E,IAAAC,EAAA,WA+FE,SAAFA,EAAsBC,EACAC,EACAC,GAFAT,KAAtBO,UAAsBA,EACAP,KAAtBQ,mBAAsBA,EACAR,KAAtBS,YAAsBA,EA9FtBT,KAAAU,SAA6B,EAC7BV,KAAAW,SAA6B,EAC7BX,KAAAY,YAAgC,EAChCZ,KAAAa,cAAkC,EAyClCb,KAAAc,KAAgC,eAmD5Bd,KAAKO,UAAUQ,SAASf,KAAKS,YAAYO,cAAe,qBAnF5DC,OAAAC,eAAMZ,EAANa,UAAA,qBAAA,CAAAC,IAAA,WACI,MAAO,CAAEC,OAAQrB,KAAKU,QAASY,SAAU,sCAO7CL,OAAAC,eAAMZ,EAANa,UAAA,SAAA,CAAAC,IAAA,WACI,OAAOpB,KAAKW,QAAU,OAASY,2CAgCnCN,OAAAC,eAAMZ,EAANa,UAAA,QAAA,CAaAC,IAAE,WACE,OAAOpB,KAAKwB,QAdhBC,IAAA,SAAYC,GACR1B,KAAKO,UAAUoB,YAAY3B,KAAKS,YAAYO,cAAe,OAAShB,KAAKwB,QACzExB,KAAKO,UAAUoB,YAAY3B,KAAKS,YAAYO,cAAe,OAAShB,KAAKwB,OAAS,QAClFxB,KAAKO,UAAUoB,YAAY3B,KAAKS,YAAYO,cAAe,MAAQhB,KAAKwB,OAAS,QACnE,YAAVE,GAAiC,WAAVA,GAAgC,SAAVA,EAC/C1B,KAAKO,UAAUQ,SAASf,KAAKS,YAAYO,cAAe,OAASU,IAEjE1B,KAAKO,UAAUQ,SAASf,KAAKS,YAAYO,cAAe,OAASU,EAAQ,QACzE1B,KAAKO,UAAUQ,SAASf,KAAKS,YAAYO,cAAe,MAAQU,EAAQ,SAE1E1B,KAAKwB,OAASE,EACd1B,KAAKQ,mBAAmBoB,gDAa5BX,OAAAC,eAAMZ,EAANa,UAAA,SAAA,CAWAC,IAAE,WACE,OAAOpB,KAAKU,SAZhBe,IAAA,SAAaI,GACL7B,KAAKa,aACHgB,EACF7B,KAAK8B,OAEL9B,KAAK+B,QAGP/B,KAAKU,QAAUmB,mCAkBnBvB,EAAFa,UAAAa,sBAAE,WACOhC,KAAKU,UACRV,KAAKW,SAAU,EACfX,KAAKiC,WAEPjC,KAAKY,YAAa,EAClBZ,KAAKQ,mBAAmBoB,gBAM1BtB,EAAFa,UAAAe,gBAAE,WAAA,IAAFC,EAAAnC,KACIoC,QAAQC,QAAQd,WAAWe,KAAK,WAC1BH,EAAKzB,SACPyB,EAAKI,UAEPJ,EAAKtB,cAAe,KAQxBP,EAAFa,UAAAW,KAAE,WACO9B,KAAKU,SAAYV,KAAKY,aACzBZ,KAAKU,SAAU,EACfV,KAAKuC,UACLvC,KAAKwC,yBAQTlC,EAAFa,UAAAY,MAAE,WACM/B,KAAKU,UAAYV,KAAKY,aACxBZ,KAAKU,SAAU,EACfV,KAAKwC,yBAOTlC,EAAFa,UAAAsB,OAAE,WACMzC,KAAKU,QACPV,KAAK+B,QAEL/B,KAAK8B,QAODxB,EAAVa,UAAAqB,qBAAU,WACNxC,KAAKY,YAAa,EAClBZ,KAAKW,SAAU,EACfX,KAAKQ,mBAAmBoB,gBAMlBtB,EAAVa,UAAAoB,QAAU,WACNvC,KAAK0C,cAAc3C,cAAc4C,mBAAmB3C,KAAK4C,WACzD5C,KAAKQ,mBAAmBoB,gBAMlBtB,EAAVa,UAAAc,QAAU,WACNjC,KAAK0C,cAAc3C,cAAc8C,QACjC7C,KAAKQ,mBAAmBoB,kBAvL5B,iBAlBA,CAAA3B,KAAC6C,EAAAA,UAAD3C,KAAA,CAAW,CACTC,SAAU,aACV2C,SAAU,saAWVC,OAAQ,CAAC,4pBACTC,WAAY,CACVC,EAAAA,4DA3BJ,CAAAjD,KAAsCkD,EAAAA,WACtC,CAAAlD,KAAoCmD,EAAAA,mBADpC,CAAAnD,KAAiDoD,EAAAA,gCAsCjDX,cAAA,CAAA,CAAAzC,KAAGqD,EAAAA,UAAHnD,KAAA,CAAaL,KACb8C,UAAA,CAAA,CAAA3C,KAAGqD,EAAAA,UAAHnD,KAAA,CAAaoD,EAAAA,eAKbC,mBAAA,CAAA,CAAAvD,KAAGwD,EAAAA,YAAHtD,KAAA,CAAe,iBAQfuD,OAAA,CAAA,CAAAzD,KAAGwD,EAAAA,YAAHtD,KAAA,CAAe,mBAUfwD,MAAA,CAAA,CAAA1D,KAAG2D,EAAAA,MAAHzD,KAAA,CAAS,WAOT0D,SAAA,CAAA,CAAA5D,KAAG2D,EAAAA,MAAHzD,KAAA,CAAS,cAQTW,KAAA,CAAA,CAAAb,KAAG2D,EAAAA,MAAHzD,KAAA,CAAS,UAQTuB,MAAA,CAAA,CAAAzB,KAAG2D,EAAAA,MAAHzD,KAAA,CAAS,WAwBT0B,OAAA,CAAA,CAAA5B,KAAG2D,EAAAA,MAAHzD,KAAA,CAAS,YA0BT6B,sBAAA,CAAA,CAAA/B,KAAG6D,EAAAA,aAAH3D,KAAA,CAAgB,uBCtIhB,IAOM4D,EAA0B,CAC9BzD,EACAR,GAeFkE,EAAA,SAAAA,oBAZA,CAAA/D,KAACgE,EAAAA,SAAD9D,KAAA,CAAU,CACR+D,QAAS,CACPC,EAAAA,aACAC,EAAAA,eAEFC,aAAc,CACZN,GAEFO,QAAS,CACPP"
}
