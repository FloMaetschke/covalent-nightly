{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@covalent/core/paging/paging-bar.component.ts","ng://@covalent/core/paging/paging.module.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-row.directive.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-container.component.ts","ng://@covalent/core/virtual-scroll/virtual-scroll.module.ts","ng://@covalent/core/notifications/notification-count.component.ts","ng://@covalent/core/notifications/notifications.module.ts","ng://@covalent/core/common/forms/auto-trim/auto-trim.directive.ts","ng://@covalent/core/common/directives/fullscreen/fullscreen.directive.ts","ng://@covalent/core/common/pipes/time-ago/time-ago.pipe.ts","ng://@covalent/core/common/pipes/time-difference/time-difference.pipe.ts","ng://@covalent/core/common/pipes/time-until/time-until.pipe.ts","ng://@covalent/core/common/pipes/bytes/bytes.pipe.ts","ng://@covalent/core/common/pipes/decimal-bytes/decimal-bytes.pipe.ts","ng://@covalent/core/common/pipes/digits/digits.pipe.ts","ng://@covalent/core/common/pipes/truncate/truncate.pipe.ts","ng://@covalent/core/common/services/router-path.service.ts","ng://@covalent/core/common/services/icon.service.ts","ng://@covalent/core/common/common.module.ts","ng://@covalent/core/common/animations/rotate/rotate.animation.ts","ng://@covalent/core/common/animations/collapse/collapse.animation.ts","ng://@covalent/core/common/animations/fade/fadeInOut.animation.ts","ng://@covalent/core/common/animations/bounce/bounce.animation.ts","ng://@covalent/core/common/animations/flash/flash.animation.ts","ng://@covalent/core/common/animations/headshake/headshake.animation.ts","ng://@covalent/core/common/animations/jello/jello.animation.ts","ng://@covalent/core/common/animations/pulse/pulse.animation.ts","ng://@covalent/core/common/behaviors/control-value-accesor.mixin.ts","ng://@covalent/core/common/forms/validators/validators.ts","ng://@covalent/core/message/message.component.ts","ng://@covalent/core/message/message.module.ts","ng://@covalent/core/chips/chips.component.ts","ng://@covalent/core/chips/chips.module.ts","ng://@covalent/core/data-table/data-table-row/data-table-row.component.ts","ng://@covalent/core/data-table/directives/data-table-template.directive.ts","ng://@covalent/core/data-table/data-table.component.ts","ng://@covalent/core/data-table/data-table-column/data-table-column.component.ts","ng://@covalent/core/data-table/data-table-cell/data-table-cell.component.ts","ng://@covalent/core/data-table/data-table-table/data-table-table.component.ts","ng://@covalent/core/data-table/data-table.module.ts","ng://@covalent/core/data-table/services/data-table.service.ts","ng://@covalent/core/dialogs/dialog.component.ts","ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts","ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts","ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts","ng://@covalent/core/dialogs/services/dialog.service.ts","ng://@covalent/core/dialogs/dialogs.module.ts","ng://@covalent/core/expansion-panel/expansion-panel.component.ts","ng://@covalent/core/expansion-panel/expansion-panel-group.component.ts","ng://@covalent/core/expansion-panel/expansion-panel.module.ts","ng://@covalent/core/file/directives/file-select.directive.ts","ng://@covalent/core/file/directives/file-drop.directive.ts","ng://@covalent/core/file/file-input/file-input.component.ts","ng://@covalent/core/file/file-upload/file-upload.component.ts","ng://@covalent/core/file/services/file.service.ts","ng://@covalent/core/file/file.module.ts","ng://@covalent/core/json-formatter/json-formatter.component.ts","ng://@covalent/core/json-formatter/json-formatter.module.ts","ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts","ng://@covalent/core/loading/loading.component.ts","ng://@covalent/core/loading/services/loading.factory.ts","ng://@covalent/core/loading/services/loading.service.ts","ng://@covalent/core/loading/directives/loading.directive.ts","ng://@covalent/core/loading/loading.module.ts","ng://@covalent/core/media/services/media.service.ts","ng://@covalent/core/media/directives/media-toggle.directive.ts","ng://@covalent/core/media/media.module.ts","ng://@covalent/core/menu/menu.component.ts","ng://@covalent/core/menu/menu.module.ts","ng://@covalent/core/search/search-input/search-input.component.ts","ng://@covalent/core/search/search-box/search-box.component.ts","ng://@covalent/core/search/search.module.ts","ng://@covalent/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.module.ts","ng://@covalent/core/steps/step.component.ts","ng://@covalent/core/steps/steps.component.ts","ng://@covalent/core/steps/step-header/step-header.component.ts","ng://@covalent/core/steps/step-body/step-body.component.ts","ng://@covalent/core/steps/nav/nav-step-link/nav-step-link.component.ts","ng://@covalent/core/steps/nav/nav-steps-horizontal/nav-steps-horizontal.component.ts","ng://@covalent/core/steps/nav/nav-steps-vertical/nav-steps-vertical.component.ts","ng://@covalent/core/steps/steps.module.ts","ng://@covalent/core/tab-select/tab-option.component.ts","ng://@covalent/core/tab-select/tab-select.component.ts","ng://@covalent/core/tab-select/tab-select.module.ts","ng://@covalent/core/common/functions/clipboard.ts","ng://@covalent/core/common/behaviors/disable-ripple.mixin.ts","ng://@covalent/core/common/behaviors/disabled.mixin.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","TdPagingBarComponent","_dir","_changeDetectorRef","_pageSize","_total","_page","_fromRow","_toRow","_initialized","_pageLinks","_pageLinkCount","_hitEnd","_hitStart","firstLast","initialPage","onChange","EventEmitter","defineProperty","pageLinkCount","coerceNumberProperty","_calculatePageLinks","markForCheck","pageSize","_handleOnChange","total","_calculateRows","Math","ceil","dir","ngOnInit","navigateToPage","page","maxPage","floor","firstPage","prevPage","nextPage","lastPage","isMinPage","isMaxPage","top","actualPageLinkCount","middlePageLinks","x","event","fromRow","toRow","emit","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","Dir","decorators","type","Optional","ChangeDetectorRef","Input","Output","CovalentPagingModule","NgModule","imports","CommonModule","MatIconModule","MatButtonModule","declarations","exports","TdVirtualScrollRowDirective","templateRef","viewContainerRef","_super","tslib_1.__extends","Directive","TemplateRef","ViewContainerRef","TemplatePortalDirective","TdVirtualScrollContainerComponent","_elementRef","_domSanitizer","_renderer","_subs","_bottom","Subject","_totalHeight","_hostHeight","_scrollVerticalOffset","bottom","trackBy","index","item","_data","data","_calculateVirtualRows","_virtualData","_rows","toArray","nativeElement","getBoundingClientRect","height","_offsetTransform","ngAfterViewInit","_this","changes","subscribe","pipe","debounceTime","lastRow","lastIndex","ngAfterViewChecked","newHostHeight","ngOnDestroy","forEach","sub","unsubscribe","handleScroll","element","verticalScroll","scrollTop","rowHeight","refresh","scrollTo","row","scrollToStart","scrollToEnd","totalHeight","TD_VIRTUAL_OFFSET","isFinite","offset","bypassSecurityTrustStyle","slice","Promise","resolve","then","ElementRef","DomSanitizer","Renderer2","ViewChildren","ContentChild","static","HostListener","TD_VIRTUAL_SCROLL","CovalentVirtualScrollModule","Top","Bottom","Center","Before","After","DEFAULT_NOTIFICATION_LIMIT","TdNotificationCountComponent","_notifications","_limit","color","_positionX","positionX","_positionY","positionY","notifications","limit","show","_hasContent","toString","isNaN","ngAfterContentInit","TdNotificationCountPositionX","TdNotificationCountPositionY","content","contentElement","children","textContent","trim","ViewChild","HostBinding","TD_NOTIFICATIONS","CovalentNotificationsModule","TdAutoTrimDirective","_model","onBlur","update","NgModel","Host","TdFullscreenDirective","_document","_el","fullScreenIsActive","fsChangeHandler","srcElement","_getFullScreenElement","toggleFullScreen","exitFullScreen","enterFullScreen","enterFullScreenMap","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","_b","tslib_1.__values","keys","_c","handler","exitFullScreenMap","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","_d","tdFullScreenElementMap","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","props","exportAs","Inject","DOCUMENT","TdTimeAgoPipe","transform","time","reference","Date","ref","getTime","startTime","now","diff","Pipe","name","TdTimeDifferencePipe","start","end","endTime","undefined","days","hours","minutes","seconds","daysFormatted","substring","TdTimeUntilPipe","TdBytesPipe","bytes","precision","parseInt","log","parseFloat","pow","toFixed","TdDecimalBytesPipe","TdDigitsPipe","_locale","_decimalPipe","DecimalPipe","digits","size","LOCALE_ID","TdTruncatePipe","text","truncated","substr","lastIndexOf","RouterPathService","_router","events","filter","RoutesRecognized","pairwise","_previousRoute","urlAfterRedirects","getPreviousRoute","Injectable","Router","IconService","_icons","query","icons","el","toLowerCase","indexOf","TD_DIRECTIVES","TD_VALIDATORS","TD_PIPES","CovalentCommonModule","FormsModule","providers","tdRotateAnimation","trigger","state","style","params","degressStart","degreesEnd","transition","group","animateChild","optional","animate","duration","delay","ease","tdCollapseAnimation","overflow","AUTO_STYLE","tdFadeInOutAnimation","opacity","visibility","easeOnIn","easeOnOut","tdBounceAnimation","keyframes","animationTimingFunction","tdFlashAnimation","tdHeadshakeAnimation","tdJelloAnimation","tdPulseAnimation","noop","CovalentValidators","min","minValue","c","Validators","required","v","actualValue","max","maxValue","numberRequired","Number","TdMessageContainerDirective","viewContainer","TdMessageComponent","_opened","_hidden","_animating","icon","addClass","_color","removeClass","opened","open","close","animationDoneListener","_detach","_attach","_startAnimationState","toggle","_childElement","createEmbeddedView","_template","clear","animations","TD_MESSAGE","CovalentMessageModule","TdChipDirective","TdAutocompleteOptionDirective","_TdChipsMixinBase","mixinControlValueAccessor","mixinDisabled","TdChipsBase","TdChipsComponent","_outsideClickSubs","Subscription","EMPTY","_inputValueChangesSubs","_isMousedown","_length","_stacked","_requireMatch","_inputPosition","_chipAddition","_chipRemoval","_focused","_required","_tabIndex","_touchendDebounce","_internalClick","_internalActivateOption","inputControl","FormControl","debounce","onAdd","onRemove","onInputChange","onChipFocus","onChipBlur","compareWith","o1","o2","_items","items","_setFirstOptionActive","stacked","coerceBooleanProperty","inputPosition","requireMatch","chipAddition","_toggleInput","disabled","chipRemoval","canAddChip","placeholder","focusListener","focus","preventDefault","mousedownListener","timer","toPromise","clickListener","clickTarget","className","stopPropagation","keydownListener","keyCode","TAB","removeFocusedState","ESCAPE","_inputChild","focused","_nativeInput","blur","_closeAutocomplete","valueChanges","_watchOutsideClick","ngDoCheck","_setInternalClick","onDisabledChange","_handleAddChip","selectedOptions","_options","option","active","setInactiveStyles","_autocompleteTrigger","activeOption","addChip","setFocusedState","_openAutocomplete","setValue","findIndex","removeChip","removedValues","splice","_totalChips","_focusChip","_handleChipBlur","_handleChipFocus","_handleFocus","_focusFirstChip","_inputKeydown","UP_ARROW","LEFT_ARROW","DELETE","BACKSPACE","_focusLastChip","RIGHT_ARROW","_chipKeydown","canRemoveChip","DOWN_ARROW","_removeInputDisplay","panelOpen","openPanel","closePanel","_chipsChildren","enable","disable","setActiveStyles","merge","fromEvent","setTimeout","contains","onTouched","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","MatInput","MatAutocompleteTrigger","MatChip","MatOption","CovalentChipsModule","ReactiveFormsModule","MatInputModule","MatChipsModule","MatAutocompleteModule","TdDataTableColumnRowComponent","TdDataTableRowComponent","_selected","selected","TdDataTableTemplateDirective","Ascending","Descending","TdDataTableBase","_TdDataTableMixinBase","TdDataTableComponent","_hostWidth","_resizableColumns","_columnClientX","_onColumnResize","_widths","_onResize","_scrollHorizontalOffset","_onHorizontalScroll","_onVerticalScroll","_rowHeightCache","_selectable","_clickable","_multiple","_allSelected","_indeterminate","_sortable","_sortOrder","TdDataTableSortingOrder","_shiftPreviouslyPressed","_lastSelectedIndex","_firstSelectedIndex","_firstCheckboxValue","_templateMap","Map","onSortChange","onRowSelect","onRowClick","onSelectAll","model","_resizingColumn","selectable","_scrollableDiv","_columns","hasData","k","find","label","cols","resizableColumns","clickable","multiple","sortable","columnName","column","columns","Error","_sortBy","order","sortOrder","toUpperCase","_resizeSubs","asObservable","_calculateWidths","_columnResizeSubs","clientX","_horizontalScrollSubs","horizontalScroll","_verticalScrollSubs","_valueChangesSubs","_templates","set","tdDataTableTemplate","ngAfterContentChecked","newHostWidth_1","width","_rowsChangedSubs","scrollLeft","getColumnWidth","getCellValue","nested","_getNestedValue","getTemplateRef","get","clearModel","_calculateCheckboxState","selectAll","checked","toggledRows","isRowSelected","modelRow","val","rows","select","currentSelected","blockEvent","mouseEvent","shiftKey","firstIndex","_doSelection","rowSelected","disableTextSelection","onselectstart","enableTextSelection","handleRowClick","currentTarget","getAttribute","tagName","handleSort","_rowKeyup","ENTER","SPACE","_handleStartColumnDrag","_handleColumnDrag","xPosition","proposedManualWidth","_colElements","projectedWidth","_handleEndColumnDrag","splitName","split","rowIndex","wasSelected","col","_adjustColumnWidth","_calculateWidth","_adjustColumnWidhts","fixedTotalWidth","flexibleWidths","hidden","recalculateHostWidth","hostWidth","newValue_1","adjustedNumber_1","colWidth","newFlexibleWidths","skipMinWidthProjection","widthOpts","renderedColumns","scrolledRows","rowHeightSum_1","hostHeight","ContentChildren","TdDataTableColumnComponent","numeric","_columnContent","handleClick","isAscending","isDescending","read","TdDataTableCellComponent","_align","align","TdDataTableTableComponent","TD_DATA_TABLE","CovalentDataTableModule","MatCheckboxModule","MatTooltipModule","MatPseudoCheckboxModule","TdDataTableService","filterData","searchTerm","ignoreCase","excludedColumns","key","preItemValue","sortData","sortBy","from","sort","a","compA","compB","direction","pageData","providedIn","TdDialogTitleDirective","TdDialogContentDirective","TdDialogActionsDirective","TdDialogComponent","dialogTitle","dialogContent","dialogActions","TdAlertDialogComponent","_dialogRef","closeButton","MatDialogRef","TdConfirmDialogComponent","cancelButton","acceptButton","cancel","accept","TdPromptDialogComponent","_input","handleInputFocus","TdDialogService","_dialogService","_dragDrop","rendererFactory","_renderer2","createRenderer","component","config","closeAll","openAlert","dialogConfig","_createConfig","dialogRef","alertDialogComponent","componentInstance","title","message","openConfirm","confirmDialogComponent","openPrompt","promptDialogComponent","openDraggable","_a","dragHandleSelectors","draggableClass","afterOpened","dialogElement","getElementById","id","draggableElement","createDrag","childComponent","firstElementChild","dragHandles","reduce","acc","curr","querySelectorAll","withHandles","rootElement","closest","withRootElement","boundaryElement","withBoundaryElement","MatDialogConfig","assign","MatDialog","DragDrop","RendererFactory2","TD_DIALOGS","TD_DIALOGS_ENTRY_COMPONENTS","CovalentDialogsModule","MatDialogModule","entryComponents","TdExpansionPanelHeaderDirective","TdExpansionPanelLabelDirective","TdExpansionPanelSublabelDirective","TdExpansionPanelSummaryComponent","_TdExpansionPanelMixinBase","mixinDisableRipple","TdExpansionPanelBase","TdExpansionPanelComponent","_expand","expanded","collapsed","expand","_setExpand","clickEvent","_onCollapsed","newExpand","_onExpanded","TdExpansionPanelGroupComponent","_multi","_lastOpenedPanels","_destroyed","_stopWatchingPanels","_closeAllExcept","openedPanels","expansionPanels","expansionPanel","numOpenedPanels","_attachListeners","takeUntil","openAll","indexOfPanel","panel","TD_EXPANSION_PANEL","CovalentExpansionPanelModule","MatRippleModule","PortalModule","TdFileSelectDirective","onFileSelect","target","HTMLInputElement","files","_TdFileDropMixinBase","TdFileDropBase","TdFileDropDirective","_element","onFileDrop","onDrop","dataTransfer","_stopEvent","onDragOver","transfer","dropEffect","_typeCheck","types","mozItemCount","onDragEnter","onDragLeave","TdFileInputLabelDirective","_TdFileInputMixinBase","TdFileInputBase","TdFileInputComponent","onSelect","_inputElement","handleSelect","writeValue","setProperty","inputElement","setDisabledState","isDisabled","_TdFileUploadMixinBase","TdFileUploadBase","TdFileUploadComponent","defaultColor","activeColor","cancelColor","onUpload","onCancel","uploadPressed","fileInput","TdFileService","_http","_progressSubject","_progressObservable","send","url","method","body","headers","req","HttpRequest","reportProgress","HttpHeaders","HttpParams","fromObject","request","tap","handleEvent","upload","options","Observable","subscriber","xhr","XMLHttpRequest","formData","FormData","file","append","onprogress","progress","lengthComputable","round","loaded","onreadystatechange","readyState","status","response","complete","setRequestHeader","HttpEventType","Sent","UploadProgress","Response","HttpClient","TD_FILE","CovalentFileModule","TdJsonFormatterComponent","_open","_levelsOpen","levelsOpen","isInteger","elipsis","_key","KEY_MAX_LENGTH","parseChildren","_children","isObject","getType","isArray","hasChildren","getValue","replace","getObjectName","object","date","results","exec","getPreview","previewData","startChar","endChar","PREVIEW_LIMIT","map","obj","previewString","join","ellipsis","PREVIEW_STRING_MAX_LENGTH","CovalentJsonFormatterModule","TdLayoutComponent","mode","sidenavWidth","containerAutosize","sidenav","MatSidenav","_TdLayoutToggleMixinBase","LayoutToggleBase","LayoutToggle","_layout","_hideWhenOpened","_noLayoutMessage","hideWhenOpened","_toggleVisibility","_toggleSubs","_animationStarted","onClick","setStyle","console","warn","TdLayoutToggleDirective","layout","renderer","elementRef","tdLayoutToggle","TdLayoutCloseDirective","tdLayoutClose","TdLayoutOpenDirective","tdLayoutOpen","TdLayoutNavComponent","navigationRoute","handleNavigationClick","routerEnabled","navigateByUrl","TdLayoutNavListComponent","TdLayoutNavListToggleDirective","tdLayoutNavListToggle","TdLayoutNavListCloseDirective","tdLayoutNavListClose","TdLayoutNavListOpenDirective","tdLayoutNavListOpen","TdLayoutCardOverComponent","cardWidth","TdLayoutManageListComponent","TdLayoutManageListToggleDirective","tdLayoutManageListToggle","TdLayoutManageListCloseDirective","tdLayoutManageListClose","TdLayoutManageListOpenDirective","tdLayoutManageListOpen","TdLayoutFooterComponent","TdNavigationDrawerMenuDirective","TdNavigationDrawerToolbarDirective","TdNavigationDrawerComponent","_sanitize","_menuToggled","_drawerMenu","_toolbar","_backgroundImage","backgroundUrl","sanitizedUrl","sanitize","SecurityContext","RESOURCE_URL","STYLE","_closeSubscription","openedChange","toggleMenu","isMenuAvailable","TD_LAYOUTS","CovalentLayoutModule","ScrollDispatchModule","MatSidenavModule","MatToolbarModule","MatCardModule","MatDividerModule","Circular","Linear","Determinate","Indeterminate","Overlay","Replace","FullScreen","None","TD_CIRCLE_DIAMETER","TdLoadingComponent","_animationIn","_animationOut","_mode","LoadingMode","_defaultMode","_value","_circleDiameter","animation","LoadingStyle","LoadingType","isOverlay","_setCircleDiameter","getHeight","isFullScreen","getCircleDiameter","getCircleStrokeWidth","strokeWidth","abs","isCircular","isLinear","animationComplete","fromState","outAnimationCompleted","inAnimationCompleted","startInAnimation","startOutAnimation","diameter","TdLoadingFactory","_componentFactoryResolver","_overlay","_injector","createFullScreenComponent","overlayRef","loadingRef","_initializeContext","loading","observable","distinctUntilChanged","registered","_createOverlay","componentRef","attach","ComponentPortal","_mapOptions","instance","changeDetectorRef","detectChanges","subs_1","destroy","detach","dispose","createOverlayComponent","_createComponent","TemplatePortal","insert","hostView","createReplaceComponent","context","nextElementSibling","scrollHeight","contentRef","subs_2","OverlayConfig","hasBackdrop","positionStrategy","position","global","centerHorizontally","centerVertically","compRef","resolveComponentFactory","subject","times","ComponentFactoryResolver","Injector","LOADING_FACTORY_PROVIDER_FACTORY","parent","componentFactoryResolver","overlay","injector","LOADING_FACTORY_PROVIDER","deps","SkipSelf","useFactory","TdLoadingDirectiveConfig","strategy","LoadingStrategy","TdLoadingConfig","TdLoadingService","_loadingFactory","_context","_timeouts","createComponent","directiveConfig","fullscreenConfig","removeComponent","register","registers","_clearTimeout","resolves","resolveAll","clearTimeout","LOADING_PROVIDER_FACTORY","loadingFactory","LOADING_PROVIDER","$implicit","tdLoading","TD_LOADING_NEXT_ID","TdLoadingDirective","_viewContainerRef","_templateRef","_loadingService","TdLoadingContext","_name","until","_type","stategy","_strategy","_registerComponent","_loadingRef","TD_LOADING","TD_LOADING_ENTRY_COMPONENTS","CovalentLoadingModule","MatProgressBarModule","MatProgressSpinnerModule","OverlayModule","TdMediaService","_ngZone","_resizing","_queryMap","_querySources","_queryObservables","_globalSubscription","runOutsideAngular","window","deregisterQuery","run","matchMedia","matches","registerQuery","BehaviorSubject","broadcast","this_1","_matchMediaTrigger","NgZone","TdMediaToggleDirective","_mediaService","_matches","_attributes","_styles","_classes","_query","attributes","classes","styles","_mediaChange","_subscription","_changeAttributes","_changeClasses","_changeStyles","attr","setAttribute","removeAttribute","removeStyle","TD_MEDIA","CovalentMediaModule","TdMenuComponent","TD_MENU","CovalentMenuModule","MatMenuModule","_TdSearchInputMixinBase","TdSearchInputBase","TdSearchInputComponent","showUnderline","clearIcon","onSearchDebounce","onSearch","onClear","ngControl","skip","_searchTermChanged","handleBlur","handleSearch","clearSearch","display","_TdSearchBoxMixinBase","TdSearchBoxBase","TdSearchBoxComponent","_searchVisible","backIcon","searchIcon","alwaysVisible","searchClicked","handleClear","_searchInput","toggleVisibility","handleSearchDebounce","margin","CovalentSearchModule","TdBreadcrumbComponent","_displayCrumb","_width","separatorIcon","_displayIcon","shouldDisplay","_handleIconClick","host","class","TdBreadcrumbsComponent","_resizeSubscription","_widthSubject","hiddenBreadcrumbs","_calculateVisibility","nativeElementWidth","setCrumbIcons","getComputedStyle","borderLeft","borderRight","marginLeft","marginRight","paddingLeft","paddingRight","_breadcrumbs","breadcrumbArray","breadcrumb","crumbsArray","crumbWidthSum","hiddenCrumbs","displayCrumb","CovalentBreadcrumbsModule","Required","Complete","TdStepLabelDirective","TdStepActionsDirective","TdStepSummaryDirective","_TdStepMixinBase","TdStepBase","TdStepComponent","_active","_state","StepState","onActivated","onDeactivated","_contentPortal","_setActive","_content","isComplete","_onDeactivated","newActive","_onActivated","Vertical","Horizontal","TdStepsComponent","StepMode","onStepChange","steps","_steps","_registerSteps","_deregisterSteps","isHorizontal","isVertical","areStepsActive","step","_onStepSelection","prevStep","event_1","newStep","_deactivateAllBut","activeStep","_subcriptions","subscription","subs","_TdStepHeaderMixinBase","TdStepHeaderBase","TdStepHeaderComponent","apply","isRequired","TdStepBodyComponent","actionsRef","summaryRef","TdNavStepLinkComponent","_handleClick","click","stopImmediatePropagation","[class.td-step-link]","[attr.tabindex]","[attr.disabled]","[class.mat-disabled]","(click)","TdNavStepsHorizontalComponent","_viewportRuler","_separators","_scrollDistance","_scrollDistanceChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","change","of","_configureSteps","updatePagination","_updateStepScrollPosition","_handleKeydown","_scrollHeader","_checkPaginationEnabled","_checkScrollingControls","_getLayoutDirection","translateX","scrollDistance","_stepList","_stepListContainer","_getMaxScrollDistance","scrollDir","offsetWidth","isEnabled","scrollWidth","separator","removeChild","stepsArray","createElement","insertBefore","number","[class.td-step-header-pagination-controls-enabled]","[class.td-step-header-rtl]","ViewportRuler","Directionality","TdNavStepsVerticalComponent","separatorChild","appendChild","TD_STEPS","CovalentStepsModule","_TdTabOptionMixinBase","TdTabOptionBase","TdTabOptionComponent","_TdTabSelectMixinBase","TdTabSelectBase","TdTabSelectComponent","_values","_selectedIndex","_stretchTabs","valueChange","_tabOptions","stretchTabs","_setValue","_refreshValues","selectedIndexChange","selectedIndex","tabOptions","tabOption","CovalentTabSelectModule","MatTabsModule","fakeTextArea","document","success","execCommand","base","initialValue","class_1","_i","_","_subjectValueChanges","registerOnChange","fn","registerOnTouched","_disableRipple","newValue","onDisableRippleChange","_disabled"],"mappings":"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GCAAK,GAAA,WAQE,SAAAA,EAAoBC,GAAAjS,KAAAiS,QAAAA,EAClBjS,KAAKiS,QAAQC,OACV9J,KACC+J,EAAAA,OAAM,SAAEjR,GAAW,OAAAA,aAAakR,EAAAA,mBAChCC,EAAAA,YAEDlK,UAAS,SAAEjH,GACV8Q,EAAkBM,eAAiBpR,EAAE,GAAGqR,oBAWhD,OAHEP,EAAA9R,UAAAsS,iBAAA,WACE,OAAOR,EAAkBM,gBAjBZN,EAAAM,eAAyB,wBAFzCG,EAAAA,sDAJQC,EAAAA,UAyBTV,EA1BA,iBCOA,SAAAW,IAEU3S,KAAA4S,OAAmB,CACzB,eACA,gBACA,cACA,gBACA,kBACA,yBACA,cACA,iBACA,MACA,YACA,UACA,aACA,qBACA,oBACA,gBACA,SACA,QACA,YACA,YACA,WACA,QACA,UACA,eACA,OACA,UACA,aACA,kBACA,yBACA,gBACA,gBACA,eACA,aACA,aACA,iBACA,kBACA,oBACA,sBACA,uBACA,kBACA,cACA,eACA,aACA,aACA,YACA,WACA,YACA,SACA,gBACA,wBACA,eACA,cACA,kBACA,WACA,QACA,YACA,kBACA,sBACA,qBACA,sBACA,gBACA,cACA,WACA,UACA,OACA,WACA,kBACA,aACA,gBACA,eACA,eACA,oBACA,eACA,cACA,eACA,eACA,eACA,aACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,kBACA,iBACA,oBACA,eACA,QACA,aACA,QACA,WACA,SACA,OACA,OACA,WACA,YACA,aACA,cACA,gBACA,aACA,SACA,aACA,eACA,cACA,cACA,SACA,OACA,iBACA,sBACA,oBACA,OACA,QACA,YACA,0BACA,eACA,eACA,gBACA,QACA,QACA,YACA,QACA,iBACA,QACA,eACA,aACA,iBACA,YACA,cACA,eACA,cACA,uBACA,aACA,WACA,UACA,UACA,WACA,sBACA,gBACA,WACA,eACA,cACA,gBACA,gBACA,0BACA,SACA,cACA,OACA,YACA,WACA,WACA,WACA,WACA,YACA,iBACA,gBACA,gBACA,cACA,YACA,aACA,SACA,SACA,cACA,cACA,kBACA,UACA,kBACA,iBACA,aACA,UACA,aACA,UACA,aACA,kBACA,kBACA,iBACA,iBACA,qBACA,iBACA,oBACA,qBACA,kBACA,YACA,MACA,iBACA,qBACA,OACA,SACA,OACA,WACA,SACA,YACA,MACA,OACA,QACA,QACA,YACA,QACA,gBACA,QACA,kBACA,aACA,aACA,aACA,cACA,cACA,cACA,WACA,UACA,WACA,iBACA,iBACA,kBACA,kBACA,gBACA,YACA,OACA,eACA,cACA,WACA,kBACA,WACA,gBACA,cACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,gBACA,iBACA,sBACA,eACA,gBACA,aACA,cACA,cACA,oBACA,iBACA,eACA,eACA,OACA,QACA,aACA,YACA,WACA,SACA,cACA,iBACA,OACA,eACA,gBACA,SACA,cACA,gBACA,iBACA,gBACA,sBACA,uBACA,oBACA,qBACA,cACA,eACA,oBACA,qBACA,oBACA,yBACA,yBACA,gBACA,sBACA,uBACA,uBACA,eACA,eACA,cACA,uBACA,8BACA,8BACA,oBACA,QACA,UACA,aACA,aACA,YACA,aACA,kBACA,YACA,UACA,QACA,UACA,UACA,MACA,YACA,gBACA,UACA,QACA,WACA,QACA,aACA,WACA,UACA,QACA,YACA,aACA,KACA,UACA,SACA,aACA,WACA,UACA,cACA,UACA,UACA,OACA,eACA,eACA,gBACA,UACA,OACA,QACA,kBACA,iBACA,OACA,QACA,QACA,qBACA,gBACA,QACA,0BACA,OACA,eACA,QACA,eACA,iBACA,oBACA,kBACA,oBACA,cACA,eACA,gBACA,oBACA,MACA,WACA,sBACA,sBACA,uBACA,oBACA,qBACA,oBACA,gBACA,kBACA,eACA,iBACA,QACA,gBACA,YACA,WACA,SACA,oBACA,aACA,iBACA,SACA,SACA,eACA,WACA,cACA,OACA,cACA,gBACA,gBACA,OACA,OACA,YACA,UACA,iBACA,gBACA,YACA,YACA,aACA,iBACA,0BACA,eACA,cACA,gBACA,oBACA,sBACA,iBACA,cACA,wBACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,cACA,cACA,aACA,oBACA,kBACA,YACA,iBACA,aACA,gBACA,oBACA,eACA,cACA,qBACA,OACA,YACA,eACA,QACA,UACA,UACA,UACA,UACA,YACA,YACA,OACA,QACA,UACA,OACA,MACA,aACA,qBACA,SACA,OACA,aACA,UACA,MACA,WACA,UACA,MACA,eACA,YACA,YACA,oBACA,OACA,WACA,OACA,aACA,YACA,QACA,QACA,iBACA,aACA,iBACA,mBACA,mBACA,cACA,SACA,gBACA,kBACA,gBACA,aACA,eACA,iBACA,eACA,eACA,MACA,SACA,iBACA,WACA,gBACA,uBACA,qBACA,oBACA,uBACA,cACA,iBACA,kBACA,cACA,YACA,QACA,WACA,UACA,WACA,oBACA,sBACA,oBACA,sBACA,aACA,QACA,sBACA,uBACA,UACA,SACA,iBACA,kBACA,wBACA,oBACA,0BACA,gBACA,aACA,iBACA,iBACA,SACA,aACA,iBACA,aACA,iBACA,QACA,gBACA,0BACA,kBACA,gBACA,eACA,eACA,eACA,eACA,YACA,kBACA,iBACA,gBACA,iBACA,kBACA,QACA,cACA,eACA,gBACA,2BACA,0BACA,0BACA,iBACA,qBACA,WACA,QACA,aACA,qBACA,sBACA,gBACA,oBACA,eACA,WACA,OACA,UACA,oBACA,WACA,QACA,cACA,qBACA,iBACA,QACA,SACA,UACA,gBACA,kBACA,QACA,cACA,QACA,uBACA,yBACA,cACA,UACA,gBACA,SACA,OACA,UACA,SACA,gBACA,wBACA,iBACA,UACA,SACA,aACA,SACA,YACA,YACA,WACA,QACA,YACA,SACA,iBACA,kBACA,UACA,cACA,OACA,wBACA,cACA,eACA,SACA,YACA,OACA,UACA,WACA,SACA,wBACA,uBACA,uBACA,kBACA,UACA,aACA,SACA,WACA,aACA,OACA,WACA,wBACA,0BACA,qBACA,sBACA,gBACA,oBACA,yBACA,2BACA,2BACA,sBACA,wBACA,oBACA,iBACA,iBACA,kBACA,2BACA,iBACA,QACA,OACA,WACA,kBACA,gBACA,UACA,wBACA,8CACA,yBACA,uBACA,sBACA,oBACA,yBACA,kBACA,WACA,iBACA,YACA,gBACA,YACA,aACA,MACA,aACA,SACA,OACA,gBACA,YACA,UACA,gBACA,gBACA,gBACA,aACA,OACA,cACA,YACA,QACA,yBACA,wBACA,yBACA,wBACA,OACA,UACA,QACA,uBACA,aACA,kBACA,QACA,UACA,YACA,qBACA,iBACA,aACA,aACA,YACA,uBACA,gBACA,eACA,OACA,gBACA,eACA,gBACA,oBACA,MACA,iBACA,SACA,iBACA,aACA,YACA,eACA,UACA,cACA,UACA,UACA,WACA,aACA,WACA,iBACA,gBACA,YACA,QACA,WACA,UACA,YACA,MACA,QACA,OACA,WACA,OACA,gBACA,UACA,YACA,YACA,gBACA,gBACA,cACA,OACA,YACA,gBACA,KACA,OACA,cACA,cACA,MACA,gBACA,wBACA,wBACA,qBACA,YACA,gBACA,WACA,eACA,cACA,aACA,gBACA,cACA,aACA,eACA,WACA,gBACA,YACA,cACA,aACA,cACA,YACA,WACA,aACA,iBACA,aACA,YACA,cACA,cACA,aACA,YACA,UACA,WACA,YACA,UACA,QACA,UACA,YACA,kBACA,gBACA,WACA,KACA,MACA,WACA,UACA,OACA,YACA,iBACA,OACA,YACA,uBACA,UACA,YAYJ,OATEpT,OAAAkD,eAAIiQ,EAAAzS,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK4S,wCAGdD,EAAAzS,UAAAiS,OAAA,SAAOU,GACL,OAAO7S,KAAK8S,MAAMX,OAAM,SAAEY,GACxB,OAAOA,EAAGC,cAAcC,QAAQJ,EAAQA,EAAMG,cAAgB,KAAO,yBAlxB1EP,EAAAA,aAqxBDE,KChxBMO,GAA6B,CAACxG,EAAqBM,GAGnDmG,GAA6B,GAa7BC,GAAwB,CAC5BjE,GACAY,GACAW,GACAC,GACAQ,GACAC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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  Optional,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Dir } from '@angular/cdk/bidi';\n\nexport interface IPageChangeEvent {\n  page: number;\n  maxPage: number;\n  pageSize: number;\n  total: number;\n  fromRow: number;\n  toRow: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-paging-bar',\n  templateUrl: './paging-bar.component.html',\n  styleUrls: ['./paging-bar.component.scss'],\n})\nexport class TdPagingBarComponent implements OnInit {\n  private _pageSize: number = 50;\n  private _total: number = 0;\n  private _page: number = 1;\n  private _fromRow: number = 1;\n  private _toRow: number = 1;\n  private _initialized: boolean = false;\n  private _pageLinks: number[] = [];\n  private _pageLinkCount: number = 0;\n  // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n  private _hitEnd: boolean = false;\n  // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n  private _hitStart: boolean = false;\n\n  /**\n   * firstLast?: boolean\n   * Shows or hides the first and last page buttons of the paging bar. Defaults to 'false'\n   */\n  @Input('firstLast') firstLast: boolean = true;\n\n  /**\n   * initialPage?: number\n   * Sets starting page for the paging bar. Defaults to '1'\n   */\n  @Input('initialPage') initialPage: number = 1;\n\n  /**\n   * pageLinkCount?: number\n   * Amount of page navigation links for the paging bar. Defaults to '0'\n   */\n  @Input('pageLinkCount')\n  set pageLinkCount(pageLinkCount: number) {\n    this._pageLinkCount = coerceNumberProperty(pageLinkCount);\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageLinkCount(): number {\n    return this._pageLinkCount;\n  }\n\n  /**\n   * pageSize?: number\n   * Selected page size for the pagination. Defaults 50.\n   */\n  @Input('pageSize')\n  set pageSize(pageSize: number) {\n    this._pageSize = coerceNumberProperty(pageSize);\n    this._page = 1;\n    if (this._initialized) {\n      this._handleOnChange();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  /**\n   * total: number\n   * Total rows for the pagination.\n   */\n  @Input('total')\n  set total(total: number) {\n    this._total = coerceNumberProperty(total);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get total(): number {\n    return this._total;\n  }\n\n  /**\n   * pageLinks: number[]\n   * Returns the pageLinks in an array\n   */\n  get pageLinks(): number[] {\n    return this._pageLinks;\n  }\n\n  /**\n   * range: string\n   * Returns the range of the rows.\n   */\n  get range(): string {\n    return `${!this._toRow ? 0 : this._fromRow}-${this._toRow}`;\n  }\n\n  /**\n   * page: number\n   * Returns the current page.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * page: number\n   * Returns the max page for the current pageSize and total.\n   */\n  get maxPage(): number {\n    return Math.ceil(this._total / this._pageSize);\n  }\n\n  /**\n   * change?: function\n   * Method to be executed when page size changes or any button is clicked in the paging bar.\n   * Emits an [IPageChangeEvent] implemented object.\n   */\n  @Output('change') onChange: EventEmitter<IPageChangeEvent> = new EventEmitter<IPageChangeEvent>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._page = coerceNumberProperty(this.initialPage);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._initialized = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * navigateToPage?: function\n   * Navigates to a specific valid page. Returns 'true' if page is valid, else 'false'.\n   */\n  navigateToPage(page: number): boolean {\n    if (page === 1 || (page >= 1 && page <= this.maxPage)) {\n      this._page = coerceNumberProperty(Math.floor(page));\n      this._handleOnChange();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * firstPage?: function\n   * Navigates to the first page. Returns 'true' if page is valid, else 'false'.\n   */\n  firstPage(): boolean {\n    return this.navigateToPage(1);\n  }\n\n  /**\n   * prevPage?: function\n   * Navigates to the previous page. Returns 'true' if page is valid, else 'false'.\n   */\n  prevPage(): boolean {\n    return this.navigateToPage(this._page - 1);\n  }\n\n  /**\n   * nextPage?: function\n   * Navigates to the next page. Returns 'true' if page is valid, else 'false'.\n   */\n  nextPage(): boolean {\n    return this.navigateToPage(this._page + 1);\n  }\n\n  /**\n   * lastPage?: function\n   * Navigates to the last page. Returns 'true' if page is valid, else 'false'.\n   */\n  lastPage(): boolean {\n    return this.navigateToPage(this.maxPage);\n  }\n\n  isMinPage(): boolean {\n    return this._page <= 1;\n  }\n\n  isMaxPage(): boolean {\n    return this._page >= this.maxPage;\n  }\n\n  private _calculateRows(): void {\n    let top: number = this._pageSize * this._page;\n    this._fromRow = this._pageSize * (this._page - 1) + 1;\n    this._toRow = this._total > top ? top : this._total;\n  }\n\n  /**\n   * _calculatePageLinks?: function\n   * Calculates the page links that should be shown to the user based on the current state of the paginator\n   */\n  private _calculatePageLinks(): void {\n    // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n    if (this.isMaxPage()) {\n      this._hitEnd = true;\n      this._hitStart = false;\n    }\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n    if (this.isMinPage()) {\n      this._hitEnd = false;\n      this._hitStart = true;\n    }\n    // If the pageLinkCount goes above max possible pages based on perpage setting then reset it to maxPage\n    let actualPageLinkCount: number = this.pageLinkCount;\n    if (this.pageLinkCount > this.maxPage) {\n      actualPageLinkCount = this.maxPage;\n    }\n    // reset the pageLinks array\n    this._pageLinks = [];\n    // fill in the array with the pageLinks based on the current selected page\n    let middlePageLinks: number = Math.floor(actualPageLinkCount / 2);\n    for (let x: number = 0; x < actualPageLinkCount; x++) {\n      // don't go past the maxPage in the pageLinks\n      // have to handle even and odd pageLinkCounts differently so can still lead to the next numbers\n      if (\n        (actualPageLinkCount % 2 === 0 && this.page + middlePageLinks > this.maxPage) ||\n        (actualPageLinkCount % 2 !== 0 && this.page + middlePageLinks >= this.maxPage)\n      ) {\n        this._pageLinks[x] = this.maxPage - (actualPageLinkCount - (x + 1));\n        // if the selected page is after the middle then set that page as middle and get the correct balance on left and right\n        // special handling when there are only 2 pageLinks to just drop to next if block so can lead to next numbers when moving to right\n        // when moving to the left then go into this block\n      } else if (\n        (actualPageLinkCount > 2 || (actualPageLinkCount <= 2 && this._hitEnd)) &&\n        this.page - middlePageLinks > 0\n      ) {\n        this._pageLinks[x] = this.page - middlePageLinks + x;\n        // if the selected page is before the middle then set the pages based on the x index leading up to and after selected page\n      } else if (this.page - middlePageLinks <= 0) {\n        this._pageLinks[x] = x + 1;\n        // other wise just set the array in order starting from the selected page\n      } else {\n        this._pageLinks[x] = this.page + x;\n      }\n    }\n  }\n\n  private _handleOnChange(): void {\n    this._calculateRows();\n    this._calculatePageLinks();\n    let event: IPageChangeEvent = {\n      page: this._page,\n      maxPage: this.maxPage,\n      pageSize: this._pageSize,\n      total: this._total,\n      fromRow: this._fromRow,\n      toRow: this._toRow,\n    };\n    this._changeDetectorRef.markForCheck();\n    this.onChange.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdPagingBarComponent } from './paging-bar.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatButtonModule],\n  declarations: [TdPagingBarComponent],\n  exports: [TdPagingBarComponent],\n})\nexport class CovalentPagingModule {}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({ selector: '[tdVirtualScrollRow]' })\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  QueryList,\n  ViewChildren,\n  ElementRef,\n  HostListener,\n  Renderer2,\n  AfterViewChecked,\n  OnDestroy,\n  TrackByFunction,\n} from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\n\nconst TD_VIRTUAL_OFFSET: number = 2;\nconst SCROLL_DEBOUNCE: number = 200;\n\nexport interface ITdVirtualScrollBottomEvent {\n  lastRow: any;\n  lastIndex: number;\n}\n\n@Component({\n  selector: 'td-virtual-scroll-container',\n  styleUrls: ['./virtual-scroll-container.component.scss'],\n  templateUrl: './virtual-scroll-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n  private _subs: Subscription[] = [];\n  private _bottom: Subject<any> = new Subject();\n  private _initialized: boolean = false;\n\n  private _totalHeight: number = 0;\n  private _hostHeight: number = 0;\n  private _scrollVerticalOffset: number = 0;\n  private _offsetTransform: SafeStyle;\n\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  private _data: any[];\n  private _virtualData: any[];\n\n  /**\n   * data: any[]\n   * List of items to virtually iterate on.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    if (this._initialized) {\n      this._calculateVirtualRows();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * bottom: function\n   * Method to be executed when user scrolled to the last item of the list.\n   * An [ITdVirtualScrollBottomEvent] event is emitted\n   */\n  @Output() bottom: EventEmitter<ITdVirtualScrollBottomEvent> = new EventEmitter<ITdVirtualScrollBottomEvent>();\n\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\n\n  @ContentChild(TdVirtualScrollRowDirective, { static: false }) _rowTemplate: TdVirtualScrollRowDirective;\n\n  get rowHeight(): number {\n    if (this._rows && this._rows.toArray()[0]) {\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\n    }\n    return 0;\n  }\n\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _domSanitizer: DomSanitizer,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this._subs.push(\n      this._rows.changes.subscribe(() => {\n        this._calculateVirtualRows();\n      }),\n    );\n    this._initialized = true;\n    this._calculateVirtualRows();\n\n    this._subs.push(\n      this._bottom.pipe(debounceTime(SCROLL_DEBOUNCE)).subscribe(() => {\n        this.bottom.emit({\n          lastRow: this._data[this._data.length - 1],\n          lastIndex: this.toRow,\n        });\n      }),\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    let newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\n    if (this._hostHeight !== newHostHeight) {\n      this._hostHeight = newHostHeight;\n      if (this._initialized) {\n        this._calculateVirtualRows();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * trackBy?: TrackByFunction\n   * This accepts the same trackBy function [ngFor] does.\n   * https://angular.io/api/core/TrackByFunction\n   */\n  @Input('trackBy') trackBy: TrackByFunction<any> = (index: number, item: any) => {\n    return item;\n  };\n\n  @HostListener('scroll', ['$event'])\n  handleScroll(event: Event): void {\n    let element: HTMLElement = <HTMLElement>event.target;\n    if (element) {\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._scrollVerticalOffset = verticalScroll;\n        if (this._initialized) {\n          this._calculateVirtualRows();\n        }\n      }\n      if (this._initialized) {\n        // check to see if bottom was hit to throw the bottom event\n        if (this._data.length * this.rowHeight - (verticalScroll + this._hostHeight) === 0) {\n          this._bottom.next();\n        }\n      }\n    }\n  }\n\n  /**\n   * Method to refresh and recalculate the virtual rows\n   * e.g. after changing the [data] content\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Method to scroll to a specific row of the list.\n   */\n  scrollTo(row: number): void {\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the start of the list.\n   */\n  scrollToStart(): void {\n    this.scrollTo(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the end of the list.\n   */\n  scrollToEnd(): void {\n    this.scrollTo(this.totalHeight / this.rowHeight);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _calculateVirtualRows(): void {\n    if (this._data) {\n      this._totalHeight = this._data.length * this.rowHeight;\n      let fromRow: number = Math.floor(this._scrollVerticalOffset / this.rowHeight) - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n      let range: number = Math.floor(this._hostHeight / this.rowHeight) + TD_VIRTUAL_OFFSET * 2;\n      let toRow: number = range + this.fromRow;\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    if (this._scrollVerticalOffset > TD_VIRTUAL_OFFSET * this.rowHeight) {\n      offset = this.fromRow * this.rowHeight;\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle(\n      'translateY(' + (offset - this.totalHeight) + 'px)',\n    );\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\n\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [TdVirtualScrollRowDirective, TdVirtualScrollContainerComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TD_VIRTUAL_SCROLL],\n  exports: [TD_VIRTUAL_SCROLL],\n})\nexport class CovalentVirtualScrollModule {}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  AfterContentInit,\n} from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\nexport const DEFAULT_NOTIFICATION_LIMIT: number = 99;\n\n@Component({\n  selector: 'td-notification-count',\n  styleUrls: ['./notification-count.component.scss'],\n  templateUrl: './notification-count.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n  private _limit: number = DEFAULT_NOTIFICATION_LIMIT;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content', { static: true }) content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n  /**\n   * limit?: number\n   * Limit for notification count. If the number of notifications is greater than limit, then + will be added. Defaults to 99.\n   */\n  @Input()\n  set limit(limit: number) {\n    this._limit = limit;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > this._limit) {\n      return `${this._limit}+`;\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      let contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [TdNotificationCountComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TD_NOTIFICATIONS],\n  exports: [TD_NOTIFICATIONS],\n})\nexport class CovalentNotificationsModule {}\n","import { Directive } from '@angular/core';\nimport { HostListener, Host, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdAutoTrim]',\n})\nexport class TdAutoTrimDirective {\n  constructor(@Optional() @Host() private _model: NgModel) {}\n\n  /**\n   * Listens to host's (blur) event and trims value.\n   */\n  @HostListener('blur', ['$event'])\n  onBlur(event: Event): void {\n    if (this._model && this._model.value && typeof this._model.value === 'string') {\n      this._model.update.emit(this._model.value.trim());\n    }\n  }\n}\n","import { Directive, HostListener, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\ninterface IFsDocument extends HTMLDocument {\n  fullscreenElement: Element;\n  webkitFullscreenElement: Element;\n  mozFullscreenElement: Element;\n  msFullscreenElement: Element;\n  webkitExitFullscreen: () => void;\n  mozCancelFullScreen: () => void;\n  msExitFullscreen: () => void;\n}\n\n@Directive({\n  selector: '[tdFullScreen]',\n  exportAs: 'tdFullScreen',\n})\nexport class TdFullscreenDirective {\n  fullScreenIsActive: boolean = false;\n  constructor(@Inject(DOCUMENT) private _document: IFsDocument, private _el: ElementRef) {}\n\n  @HostListener('document:fullscreenchange', ['$event'])\n  @HostListener('document:webkitfullscreenchange', ['$event'])\n  @HostListener('document:mozfullscreenchange', ['$event'])\n  @HostListener('document:msfullscreenchange', ['$event'])\n  public fsChangeHandler(event: Event): void {\n    this.fullScreenIsActive = event.srcElement === this._getFullScreenElement();\n  }\n\n  public toggleFullScreen(): void {\n    this._getFullScreenElement() === this._el.nativeElement ? this.exitFullScreen() : this.enterFullScreen();\n  }\n\n  public enterFullScreen(): void {\n    const {\n      _el: { nativeElement },\n    }: TdFullscreenDirective = this;\n    const enterFullScreenMap: object = {\n      requestFullscreen: () => nativeElement.requestFullscreen(), // Chrome\n      webkitRequestFullscreen: () => nativeElement.webkitRequestFullscreen(), // Safari\n      mozRequestFullScreen: () => nativeElement.mozRequestFullScreen(), // Firefox\n      msRequestFullscreen: () => nativeElement.msRequestFullscreen(), // IE\n    };\n\n    for (const handler of Object.keys(enterFullScreenMap)) {\n      if (nativeElement[handler]) {\n        enterFullScreenMap[handler]();\n      }\n    }\n  }\n\n  public exitFullScreen(): void {\n    const {\n      _document,\n      _el: { nativeElement },\n    }: TdFullscreenDirective = this;\n    const exitFullScreenMap: object = {\n      exitFullscreen: () => _document.exitFullscreen(), // Chrome\n      webkitExitFullscreen: () => _document.webkitExitFullscreen(), // Safari\n      mozCancelFullScreen: () => _document.mozCancelFullScreen(), // Firefox\n      msExitFullscreen: () => _document.msExitFullscreen(), // IE\n    };\n\n    for (const handler of Object.keys(exitFullScreenMap)) {\n      if (_document[handler] && this._getFullScreenElement() === nativeElement) {\n        exitFullScreenMap[handler]();\n      }\n    }\n  }\n\n  private _getFullScreenElement(): Element {\n    const { _document }: TdFullscreenDirective = this;\n    const tdFullScreenElementMap: object = {\n      fullscreenElement: () => _document.fullscreenElement, // Chrome, Opera\n      webkitFullscreenElement: () => _document.webkitFullscreenElement, // Safari\n      mozFullscreenElement: () => _document.mozFullscreenElement, // Firefox\n      msFullscreenElement: () => _document.msFullscreenElement, // IE, Edge\n    };\n    for (const props of Object.keys(tdFullScreenElementMap)) {\n      if (_document[props]) {\n        return _document[props];\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TdTimeAgoPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((startTime - time.getTime()) / 1000);\n\n    if (diff < 2) {\n      return '1 second ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' seconds ago';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 minute ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' minutes ago';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 hour ago';\n    }\n    if (diff < 24) {\n      return Math.floor(diff) + ' hours ago';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return '1 day ago';\n    }\n    if (diff < 30) {\n      return Math.floor(diff) + ' days ago';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return '1 month ago';\n    }\n    if (diff < 12) {\n      return Math.floor(diff) + ' months ago';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return '1 year ago';\n    } else {\n      return Math.floor(diff) + ' years ago';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeDifference',\n})\nexport class TdTimeDifferencePipe implements PipeTransform {\n  transform(start: any, end?: any): string {\n    let startTime: Date = new Date(start);\n    let endTime: Date;\n\n    if (end !== undefined) {\n      endTime = new Date(end);\n    } else {\n      endTime = new Date();\n    }\n\n    if (!startTime.getTime() || !endTime.getTime()) {\n      return 'Invalid Date';\n    }\n\n    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\n\n    let days: number = Math.floor(diff / (60 * 60 * 24));\n    diff = diff - days * (60 * 60 * 24);\n\n    let hours: number = Math.floor(diff / (60 * 60));\n    diff = diff - hours * (60 * 60);\n\n    let minutes: number = Math.floor(diff / 60);\n    diff -= minutes * 60;\n\n    let seconds: number = diff;\n\n    let pad: string = '00';\n\n    let daysFormatted: string = '';\n\n    if (days > 0 && days < 2) {\n      daysFormatted = ' day - ';\n    } else if (days > 1) {\n      daysFormatted = ' days - ';\n    }\n\n    return (\n      (days > 0 ? days + daysFormatted : daysFormatted) +\n      pad.substring(0, pad.length - (hours + '').length) +\n      hours +\n      ':' +\n      pad.substring(0, pad.length - (minutes + '').length) +\n      minutes +\n      ':' +\n      pad.substring(0, pad.length - (seconds + '').length) +\n      seconds\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeUntil',\n})\nexport class TdTimeUntilPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((time.getTime() - startTime) / 1000);\n\n    if (diff < 2) {\n      return 'in 1 second';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' seconds';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 minute';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' minutes';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 hour';\n    }\n    if (diff < 24) {\n      return 'in ' + Math.floor(diff) + ' hours';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return 'in 1 day';\n    }\n    if (diff < 30) {\n      return 'in ' + Math.floor(diff) + ' days';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return 'in 1 month';\n    }\n    if (diff < 12) {\n      return 'in ' + Math.floor(diff) + ' months';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return 'in 1 year';\n    } else {\n      return 'in ' + Math.floor(diff) + ' years';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes',\n})\nexport class TdBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1024;\n    let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimalBytes',\n})\nexport class TdDecimalBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'digits',\n})\nexport class TdDigitsPipe implements PipeTransform {\n  private _decimalPipe: DecimalPipe;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {\n    this._decimalPipe = new DecimalPipe(this._locale);\n  }\n\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return the value */\n      return digits;\n    } else if (digits < 1) {\n      return this._decimalPipe.transform(digits.toFixed(precision));\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    let i: number = Math.floor(Math.log(digits) / Math.log(k));\n    let size: string = sizes[i];\n    return (\n      this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '')\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\nexport class TdTruncatePipe implements PipeTransform {\n  transform(text: any, length: number): string {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    // Truncate\n    let truncated: string = text.substr(0, length);\n\n    if (text.length > length) {\n      if (truncated.lastIndexOf(' ') > 0) {\n        truncated = truncated.trim();\n      }\n\n      truncated += 'â¦';\n    }\n\n    return truncated;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized } from '@angular/router';\n\nimport { filter, pairwise } from 'rxjs/operators';\n\n@Injectable()\nexport class RouterPathService {\n  private static _previousRoute: string = '/';\n  constructor(private _router: Router) {\n    this._router.events\n      .pipe(\n        filter((e: any) => e instanceof RoutesRecognized),\n        pairwise(),\n      )\n      .subscribe((e: any[]) => {\n        RouterPathService._previousRoute = e[0].urlAfterRedirects;\n      });\n  }\n\n  /*\n   * Utility function to get the route the user previously went to\n   * good for use in a \"back button\"\n   */\n  getPreviousRoute(): string {\n    return RouterPathService._previousRoute;\n  }\n}\n","/*\n * Copyright (C) 2016-2017 by Teradata Corporation. All rights reserved.\n * TERADATA CORPORATION CONFIDENTIAL AND TRADE SECRET\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IconService {\n  private _icons: string[] = [\n    'access_alarm',\n    'access_alarms',\n    'access_time',\n    'accessibility',\n    'account_balance',\n    'account_balance_wallet',\n    'account_box',\n    'account_circle',\n    'add',\n    'add_alarm',\n    'add_box',\n    'add_circle',\n    'add_circle_outline',\n    'add_shopping_cart',\n    'add_to_photos',\n    'adjust',\n    'alarm',\n    'alarm_add',\n    'alarm_off',\n    'alarm_on',\n    'album',\n    'android',\n    'announcement',\n    'apps',\n    'archive',\n    'arrow_back',\n    'arrow_drop_down',\n    'arrow_drop_down_circle',\n    'arrow_drop_up',\n    'arrow_forward',\n    'aspect_ratio',\n    'assessment',\n    'assignment',\n    'assignment_ind',\n    'assignment_late',\n    'assignment_return',\n    'assignment_returned',\n    'assignment_turned_in',\n    'assistant_photo',\n    'attach_file',\n    'attach_money',\n    'attachment',\n    'audiotrack',\n    'autorenew',\n    'av_timer',\n    'backspace',\n    'backup',\n    'battery_alert',\n    'battery_charging_full',\n    'battery_full',\n    'battery_std',\n    'battery_unknown',\n    'beenhere',\n    'block',\n    'bluetooth',\n    'bluetooth_audio',\n    'bluetooth_connected',\n    'bluetooth_disabled',\n    'bluetooth_searching',\n    'blur_circular',\n    'blur_linear',\n    'blur_off',\n    'blur_on',\n    'book',\n    'bookmark',\n    'bookmark_border',\n    'border_all',\n    'border_bottom',\n    'border_clear',\n    'border_color',\n    'border_horizontal',\n    'border_inner',\n    'border_left',\n    'border_outer',\n    'border_right',\n    'border_style',\n    'border_top',\n    'border_vertical',\n    'brightness_1',\n    'brightness_2',\n    'brightness_3',\n    'brightness_4',\n    'brightness_5',\n    'brightness_6',\n    'brightness_7',\n    'brightness_auto',\n    'brightness_high',\n    'brightness_low',\n    'brightness_medium',\n    'broken_image',\n    'brush',\n    'bug_report',\n    'build',\n    'business',\n    'cached',\n    'cake',\n    'call',\n    'call_end',\n    'call_made',\n    'call_merge',\n    'call_missed',\n    'call_received',\n    'call_split',\n    'camera',\n    'camera_alt',\n    'camera_front',\n    'camera_rear',\n    'camera_roll',\n    'cancel',\n    'cast',\n    'cast_connected',\n    'center_focus_strong',\n    'center_focus_weak',\n    'chat',\n    'check',\n    'check_box',\n    'check_box_outline_blank',\n    'check_circle',\n    'chevron_left',\n    'chevron_right',\n    'class',\n    'clear',\n    'clear_all',\n    'close',\n    'closed_caption',\n    'cloud',\n    'cloud_circle',\n    'cloud_done',\n    'cloud_download',\n    'cloud_off',\n    'cloud_queue',\n    'cloud_upload',\n    'collections',\n    'collections_bookmark',\n    'color_lens',\n    'colorize',\n    'comment',\n    'compare',\n    'computer',\n    'confirmation_number',\n    'contact_phone',\n    'contacts',\n    'content_copy',\n    'content_cut',\n    'content_paste',\n    'control_point',\n    'control_point_duplicate',\n    'create',\n    'credit_card',\n    'crop',\n    'crop_16_9',\n    'crop_3_2',\n    'crop_5_4',\n    'crop_7_5',\n    'crop_din',\n    'crop_free',\n    'crop_landscape',\n    'crop_original',\n    'crop_portrait',\n    'crop_square',\n    'dashboard',\n    'data_usage',\n    'dehaze',\n    'delete',\n    'description',\n    'desktop_mac',\n    'desktop_windows',\n    'details',\n    'developer_board',\n    'developer_mode',\n    'device_hub',\n    'devices',\n    'dialer_sip',\n    'dialpad',\n    'directions',\n    'directions_bike',\n    'directions_boat',\n    'directions_bus',\n    'directions_car',\n    'directions_railway',\n    'directions_run',\n    'directions_subway',\n    'directions_transit',\n    'directions_walk',\n    'disc_full',\n    'dns',\n    'do_not_disturb',\n    'do_not_disturb_alt',\n    'dock',\n    'domain',\n    'done',\n    'done_all',\n    'drafts',\n    'drive_eta',\n    'dvr',\n    'edit',\n    'eject',\n    'email',\n    'equalizer',\n    'error',\n    'error_outline',\n    'event',\n    'event_available',\n    'event_busy',\n    'event_note',\n    'event_seat',\n    'exit_to_app',\n    'expand_less',\n    'expand_more',\n    'explicit',\n    'explore',\n    'exposure',\n    'exposure_neg_1',\n    'exposure_neg_2',\n    'exposure_plus_1',\n    'exposure_plus_2',\n    'exposure_zero',\n    'extension',\n    'face',\n    'fast_forward',\n    'fast_rewind',\n    'favorite',\n    'favorite_border',\n    'feedback',\n    'file_download',\n    'file_upload',\n    'filter',\n    'filter_1',\n    'filter_2',\n    'filter_3',\n    'filter_4',\n    'filter_5',\n    'filter_6',\n    'filter_7',\n    'filter_8',\n    'filter_9',\n    'filter_9_plus',\n    'filter_b_and_w',\n    'filter_center_focus',\n    'filter_drama',\n    'filter_frames',\n    'filter_hdr',\n    'filter_list',\n    'filter_none',\n    'filter_tilt_shift',\n    'filter_vintage',\n    'find_in_page',\n    'find_replace',\n    'flag',\n    'flare',\n    'flash_auto',\n    'flash_off',\n    'flash_on',\n    'flight',\n    'flight_land',\n    'flight_takeoff',\n    'flip',\n    'flip_to_back',\n    'flip_to_front',\n    'folder',\n    'folder_open',\n    'folder_shared',\n    'folder_special',\n    'font_download',\n    'format_align_center',\n    'format_align_justify',\n    'format_align_left',\n    'format_align_right',\n    'format_bold',\n    'format_clear',\n    'format_color_fill',\n    'format_color_reset',\n    'format_color_text',\n    'format_indent_decrease',\n    'format_indent_increase',\n    'format_italic',\n    'format_line_spacing',\n    'format_list_bulleted',\n    'format_list_numbered',\n    'format_paint',\n    'format_quote',\n    'format_size',\n    'format_strikethrough',\n    'format_textdirection_l_to_r',\n    'format_textdirection_r_to_l',\n    'format_underlined',\n    'forum',\n    'forward',\n    'forward_10',\n    'forward_30',\n    'forward_5',\n    'fullscreen',\n    'fullscreen_exit',\n    'functions',\n    'gamepad',\n    'games',\n    'gesture',\n    'get_app',\n    'gif',\n    'gps_fixed',\n    'gps_not_fixed',\n    'gps_off',\n    'grade',\n    'gradient',\n    'grain',\n    'graphic_eq',\n    'grid_off',\n    'grid_on',\n    'group',\n    'group_add',\n    'group_work',\n    'hd',\n    'hdr_off',\n    'hdr_on',\n    'hdr_strong',\n    'hdr_weak',\n    'headset',\n    'headset_mic',\n    'healing',\n    'hearing',\n    'help',\n    'help_outline',\n    'high_quality',\n    'highlight_off',\n    'history',\n    'home',\n    'hotel',\n    'hourglass_empty',\n    'hourglass_full',\n    'http',\n    'https',\n    'image',\n    'image_aspect_ratio',\n    'import_export',\n    'inbox',\n    'indeterminate_check_box',\n    'info',\n    'info_outline',\n    'input',\n    'insert_chart',\n    'insert_comment',\n    'insert_drive_file',\n    'insert_emoticon',\n    'insert_invitation',\n    'insert_link',\n    'insert_photo',\n    'invert_colors',\n    'invert_colors_off',\n    'iso',\n    'keyboard',\n    'keyboard_arrow_down',\n    'keyboard_arrow_left',\n    'keyboard_arrow_right',\n    'keyboard_arrow_up',\n    'keyboard_backspace',\n    'keyboard_capslock',\n    'keyboard_hide',\n    'keyboard_return',\n    'keyboard_tab',\n    'keyboard_voice',\n    'label',\n    'label_outline',\n    'landscape',\n    'language',\n    'laptop',\n    'laptop_chromebook',\n    'laptop_mac',\n    'laptop_windows',\n    'launch',\n    'layers',\n    'layers_clear',\n    'leak_add',\n    'leak_remove',\n    'lens',\n    'library_add',\n    'library_books',\n    'library_music',\n    'link',\n    'list',\n    'live_help',\n    'live_tv',\n    'local_activity',\n    'local_airport',\n    'local_atm',\n    'local_bar',\n    'local_cafe',\n    'local_car_wash',\n    'local_convenience_store',\n    'local_dining',\n    'local_drink',\n    'local_florist',\n    'local_gas_station',\n    'local_grocery_store',\n    'local_hospital',\n    'local_hotel',\n    'local_laundry_service',\n    'local_library',\n    'local_mall',\n    'local_movies',\n    'local_offer',\n    'local_parking',\n    'local_pharmacy',\n    'local_phone',\n    'local_pizza',\n    'local_play',\n    'local_post_office',\n    'local_printshop',\n    'local_see',\n    'local_shipping',\n    'local_taxi',\n    'location_city',\n    'location_disabled',\n    'location_off',\n    'location_on',\n    'location_searching',\n    'lock',\n    'lock_open',\n    'lock_outline',\n    'looks',\n    'looks_3',\n    'looks_4',\n    'looks_5',\n    'looks_6',\n    'looks_one',\n    'looks_two',\n    'loop',\n    'loupe',\n    'loyalty',\n    'mail',\n    'map',\n    'markunread',\n    'markunread_mailbox',\n    'memory',\n    'menu',\n    'merge_type',\n    'message',\n    'mic',\n    'mic_none',\n    'mic_off',\n    'mms',\n    'mode_comment',\n    'mode_edit',\n    'money_off',\n    'monochrome_photos',\n    'mood',\n    'mood_bad',\n    'more',\n    'more_horiz',\n    'more_vert',\n    'mouse',\n    'movie',\n    'movie_creation',\n    'music_note',\n    'my_library_add',\n    'my_library_books',\n    'my_library_music',\n    'my_location',\n    'nature',\n    'nature_people',\n    'navigate_before',\n    'navigate_next',\n    'navigation',\n    'network_cell',\n    'network_locked',\n    'network_wifi',\n    'new_releases',\n    'nfc',\n    'no_sim',\n    'not_interested',\n    'note_add',\n    'notifications',\n    'notifications_active',\n    'notifications_none',\n    'notifications_off',\n    'notifications_paused',\n    'offline_pin',\n    'ondemand_video',\n    'open_in_browser',\n    'open_in_new',\n    'open_with',\n    'pages',\n    'pageview',\n    'palette',\n    'panorama',\n    'panorama_fish_eye',\n    'panorama_horizontal',\n    'panorama_vertical',\n    'panorama_wide_angle',\n    'party_mode',\n    'pause',\n    'pause_circle_filled',\n    'pause_circle_outline',\n    'payment',\n    'people',\n    'people_outline',\n    'perm_camera_mic',\n    'perm_contact_calendar',\n    'perm_data_setting',\n    'perm_device_information',\n    'perm_identity',\n    'perm_media',\n    'perm_phone_msg',\n    'perm_scan_wifi',\n    'person',\n    'person_add',\n    'person_outline',\n    'person_pin',\n    'personal_video',\n    'phone',\n    'phone_android',\n    'phone_bluetooth_speaker',\n    'phone_forwarded',\n    'phone_in_talk',\n    'phone_iphone',\n    'phone_locked',\n    'phone_missed',\n    'phone_paused',\n    'phonelink',\n    'phonelink_erase',\n    'phonelink_lock',\n    'phonelink_off',\n    'phonelink_ring',\n    'phonelink_setup',\n    'photo',\n    'photo_album',\n    'photo_camera',\n    'photo_library',\n    'photo_size_select_actual',\n    'photo_size_select_large',\n    'photo_size_select_small',\n    'picture_as_pdf',\n    'picture_in_picture',\n    'pin_drop',\n    'place',\n    'play_arrow',\n    'play_circle_filled',\n    'play_circle_outline',\n    'play_for_work',\n    'play_shopping_bag',\n    'playlist_add',\n    'plus_one',\n    'poll',\n    'polymer',\n    'portable_wifi_off',\n    'portrait',\n    'power',\n    'power_input',\n    'power_settings_new',\n    'present_to_all',\n    'print',\n    'public',\n    'publish',\n    'query_builder',\n    'question_answer',\n    'queue',\n    'queue_music',\n    'radio',\n    'radio_button_checked',\n    'radio_button_unchecked',\n    'rate_review',\n    'receipt',\n    'recent_actors',\n    'redeem',\n    'redo',\n    'refresh',\n    'remove',\n    'remove_circle',\n    'remove_circle_outline',\n    'remove_red_eye',\n    'reorder',\n    'repeat',\n    'repeat_one',\n    'replay',\n    'replay_10',\n    'replay_30',\n    'replay_5',\n    'reply',\n    'reply_all',\n    'report',\n    'report_problem',\n    'restaurant_menu',\n    'restore',\n    'ring_volume',\n    'room',\n    'rotate_90_degrees_ccw',\n    'rotate_left',\n    'rotate_right',\n    'router',\n    'satellite',\n    'save',\n    'scanner',\n    'schedule',\n    'school',\n    'screen_lock_landscape',\n    'screen_lock_portrait',\n    'screen_lock_rotation',\n    'screen_rotation',\n    'sd_card',\n    'sd_storage',\n    'search',\n    'security',\n    'select_all',\n    'send',\n    'settings',\n    'settings_applications',\n    'settings_backup_restore',\n    'settings_bluetooth',\n    'settings_brightness',\n    'settings_cell',\n    'settings_ethernet',\n    'settings_input_antenna',\n    'settings_input_component',\n    'settings_input_composite',\n    'settings_input_hdmi',\n    'settings_input_svideo',\n    'settings_overscan',\n    'settings_phone',\n    'settings_power',\n    'settings_remote',\n    'settings_system_daydream',\n    'settings_voice',\n    'share',\n    'shop',\n    'shop_two',\n    'shopping_basket',\n    'shopping_cart',\n    'shuffle',\n    'signal_cellular_4_bar',\n    'signal_cellular_connected_no_internet_4_bar',\n    'signal_cellular_no_sim',\n    'signal_cellular_null',\n    'signal_cellular_off',\n    'signal_wifi_4_bar',\n    'signal_wifi_4_bar_lock',\n    'signal_wifi_off',\n    'sim_card',\n    'sim_card_alert',\n    'skip_next',\n    'skip_previous',\n    'slideshow',\n    'smartphone',\n    'sms',\n    'sms_failed',\n    'snooze',\n    'sort',\n    'sort_by_alpha',\n    'space_bar',\n    'speaker',\n    'speaker_group',\n    'speaker_notes',\n    'speaker_phone',\n    'spellcheck',\n    'star',\n    'star_border',\n    'star_half',\n    'stars',\n    'stay_current_landscape',\n    'stay_current_portrait',\n    'stay_primary_landscape',\n    'stay_primary_portrait',\n    'stop',\n    'storage',\n    'store',\n    'store_mall_directory',\n    'straighten',\n    'strikethrough_s',\n    'style',\n    'subject',\n    'subtitles',\n    'supervisor_account',\n    'surround_sound',\n    'swap_calls',\n    'swap_horiz',\n    'swap_vert',\n    'swap_vertical_circle',\n    'switch_camera',\n    'switch_video',\n    'sync',\n    'sync_disabled',\n    'sync_problem',\n    'system_update',\n    'system_update_alt',\n    'tab',\n    'tab_unselected',\n    'tablet',\n    'tablet_android',\n    'tablet_mac',\n    'tag_faces',\n    'tap_and_play',\n    'terrain',\n    'text_format',\n    'textsms',\n    'texture',\n    'theaters',\n    'thumb_down',\n    'thumb_up',\n    'thumbs_up_down',\n    'time_to_leave',\n    'timelapse',\n    'timer',\n    'timer_10',\n    'timer_3',\n    'timer_off',\n    'toc',\n    'today',\n    'toll',\n    'tonality',\n    'toys',\n    'track_changes',\n    'traffic',\n    'transform',\n    'translate',\n    'trending_down',\n    'trending_flat',\n    'trending_up',\n    'tune',\n    'turned_in',\n    'turned_in_not',\n    'tv',\n    'undo',\n    'unfold_less',\n    'unfold_more',\n    'usb',\n    'verified_user',\n    'vertical_align_bottom',\n    'vertical_align_center',\n    'vertical_align_top',\n    'vibration',\n    'video_library',\n    'videocam',\n    'videocam_off',\n    'view_agenda',\n    'view_array',\n    'view_carousel',\n    'view_column',\n    'view_comfy',\n    'view_compact',\n    'view_day',\n    'view_headline',\n    'view_list',\n    'view_module',\n    'view_quilt',\n    'view_stream',\n    'view_week',\n    'vignette',\n    'visibility',\n    'visibility_off',\n    'voice_chat',\n    'voicemail',\n    'volume_down',\n    'volume_mute',\n    'volume_off',\n    'volume_up',\n    'vpn_key',\n    'vpn_lock',\n    'wallpaper',\n    'warning',\n    'watch',\n    'wb_auto',\n    'wb_cloudy',\n    'wb_incandescent',\n    'wb_iridescent',\n    'wb_sunny',\n    'wc',\n    'web',\n    'whatshot',\n    'widgets',\n    'wifi',\n    'wifi_lock',\n    'wifi_tethering',\n    'work',\n    'wrap_text',\n    'youtube_searched_for',\n    'zoom_in',\n    'zoom_out',\n  ];\n\n  get icons(): string[] {\n    return this._icons;\n  }\n\n  filter(query: string): string[] {\n    return this.icons.filter((el: string) => {\n      return el.toLowerCase().indexOf(query ? query.toLowerCase() : '') > -1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * Directives\n */\nimport { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';\nimport { TdFullscreenDirective } from './directives/fullscreen/fullscreen.directive';\n\nconst TD_DIRECTIVES: Type<any>[] = [TdAutoTrimDirective, TdFullscreenDirective];\n\n// Validators\nconst TD_VALIDATORS: Type<any>[] = [];\n\n/**\n * PIPES\n */\nimport { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';\nimport { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';\nimport { TdTimeUntilPipe } from './pipes/time-until/time-until.pipe';\nimport { TdBytesPipe } from './pipes/bytes/bytes.pipe';\nimport { TdDecimalBytesPipe } from './pipes/decimal-bytes/decimal-bytes.pipe';\nimport { TdDigitsPipe } from './pipes/digits/digits.pipe';\nimport { TdTruncatePipe } from './pipes/truncate/truncate.pipe';\n\nconst TD_PIPES: Type<any>[] = [\n  TdTimeAgoPipe,\n  TdTimeDifferencePipe,\n  TdTimeUntilPipe,\n  TdBytesPipe,\n  TdDecimalBytesPipe,\n  TdDigitsPipe,\n  TdTruncatePipe,\n];\n\n/**\n * Services\n */\n\nimport { RouterPathService } from './services/router-path.service';\nimport { IconService } from './services/icon.service';\n\n@NgModule({\n  imports: [FormsModule, CommonModule],\n  declarations: [TD_DIRECTIVES, TD_PIPES, TD_VALIDATORS],\n  exports: [FormsModule, CommonModule, TD_DIRECTIVES, TD_PIPES, TD_VALIDATORS],\n  providers: [RouterPathService, IconService],\n})\nexport class CovalentCommonModule {}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\n\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IRotateAnimation extends IAnimationOptions {\n  degrees?: number;\n  ease?: string;\n}\n\n/**\n * const tdRotateAnimation\n *\n * Parameter Options:\n * * degressStart: Degrees of rotation that the dom object will end up in during the \"false\" state\n * * degreesEnd: Degrees of rotation that the dom object will end up in during the \"true\" state\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerates and decelerates. Defaults to ease-in.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a rotation animation.\n *\n * usage: [@tdRotate]=\"{ value: true | false, params: { degreesEnd: 90 }}\"\n */\n\nexport const tdRotateAnimation: AnimationTriggerMetadata = trigger('tdRotate', [\n  state(\n    '0',\n    style({\n      transform: 'rotate({{ degressStart }}deg)',\n    }),\n    { params: { degressStart: 0 } },\n  ),\n  state(\n    '1',\n    style({\n      transform: 'rotate({{ degreesEnd }}deg)',\n    }),\n    { params: { degreesEnd: 180 } },\n  ),\n  transition(\n    '0 <=> 1',\n    [group([query('@*', animateChild(), { optional: true }), animate('{{ duration }}ms {{ delay }}ms {{ ease }}')])],\n    { params: { duration: 250, delay: '0', ease: 'ease-in' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface ICollapseAnimation extends IAnimationOptions {\n  easeOnClose?: string;\n  easeOnOpen?: string;\n}\n\n/**\n * const tdCollapseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnClose: Animation accelerates and decelerates when closing. Defaults to ease-in.\n * * easeOnOpen: Animation accelerates and decelerates when opening. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a collapse/expand animation.\n *\n * usage: [@tdCollapse]=\"{ value: true | false, params: { duration: 500 }}\"\n */\nexport const tdCollapseAnimation: AnimationTriggerMetadata = trigger('tdCollapse', [\n  state(\n    '1',\n    style({\n      height: '0',\n      overflow: 'hidden',\n    }),\n  ),\n  state(\n    '0',\n    style({\n      height: AUTO_STYLE,\n      overflow: AUTO_STYLE,\n    }),\n  ),\n  transition(\n    '0 => 1',\n    [\n      style({\n        overflow: 'hidden',\n        height: AUTO_STYLE,\n      }),\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          style({\n            height: '0',\n            overflow: 'hidden',\n          }),\n        ),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', ease: 'ease-in' } },\n  ),\n  transition(\n    '1 => 0',\n    [\n      style({\n        height: '0',\n        overflow: 'hidden',\n      }),\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          style({\n            overflow: 'hidden',\n            height: AUTO_STYLE,\n          }),\n        ),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IFadeInOutAnimation extends IAnimationOptions {\n  easeOnIn?: string;\n  easeOnOut?: string;\n}\n\n/**\n * const tdFadeInOutAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnIn: Animation accelerates and decelerates when fading in. Defaults to ease-in.\n * * easeOnOut: Animation accelerates and decelerates when fading out. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a fade animation.\n *\n * usage: [@tdFadeInOut]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger('tdFadeInOut', [\n  state(\n    '0',\n    style({\n      opacity: '0',\n      visibility: 'hidden',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      opacity: AUTO_STYLE,\n      visibility: AUTO_STYLE,\n    }),\n  ),\n  transition(\n    '0 => 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' } },\n  ),\n  transition(\n    '1 => 0',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdBounceAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a bounce animation.\n *\n * usage: [@tdBounce]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdBounceAnimation: AnimationTriggerMetadata = trigger('tdBounce', [\n  state(\n    '0',\n    style({\n      transform: 'translate3d(0, 0, 0)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'translate3d(0, 0, 0)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.2,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -30px, 0)',\n              offset: 0.4,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -30px, 0)',\n              offset: 0.43,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.53,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -15px, 0)',\n              offset: 0.7,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.8,\n            }),\n            style({ transform: 'translate3d(0, -4px, 0)', offset: 0.9 }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 1.0,\n            }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdFlashAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a flash animation.\n *\n * usage: [@tdFlash]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFlashAnimation: AnimationTriggerMetadata = trigger('tdFlash', [\n  state(\n    '0',\n    style({\n      opacity: 1,\n    }),\n  ),\n  state(\n    '1',\n    style({\n      opacity: 1,\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ opacity: 1, offset: 0 }),\n            style({ opacity: 0, offset: 0.25 }),\n            style({ opacity: 1, offset: 0.5 }),\n            style({ opacity: 0, offset: 0.75 }),\n            style({ opacity: 1, offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdHeadshakeAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a headshake animation.\n *\n * usage: [@tdHeadshake]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger('tdHeadshake', [\n  state(\n    '0',\n    style({\n      transform: 'translateX(0)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'translateX(0)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'translateX(0)', offset: 0 }),\n            style({ transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065 }),\n            style({ transform: 'translateX(5px) rotateY(7deg)', offset: 0.185 }),\n            style({ transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315 }),\n            style({ transform: 'translateX(2px) rotateY(3deg)', offset: 0.435 }),\n            style({ transform: 'translateX(0)', offset: 0.5 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdJelloAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a jello animation.\n *\n * usage: [@tdJello]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdJelloAnimation: AnimationTriggerMetadata = trigger('tdJello', [\n  state(\n    '0',\n    style({\n      transform: 'none',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'none',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'none', offset: 0 }),\n            style({ transform: 'none', offset: 0.011 }),\n            style({ transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222 }),\n            style({ transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333 }),\n            style({ transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444 }),\n            style({ transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555 }),\n            style({ transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666 }),\n            style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777 }),\n            style({ transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdPulseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a pulse animation.\n *\n * usage: [@tdPulse]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdPulseAnimation: AnimationTriggerMetadata = trigger('tdPulse', [\n  state(\n    '0',\n    style({\n      transform: 'scale3d(1, 1, 1)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'scale3d(1, 1, 1)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),\n            style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),\n            style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import { ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport { Observable, Subject } from 'rxjs';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport interface IControlValueAccessor extends ControlValueAccessor {\n  value: any;\n  valueChanges: Observable<any>;\n  onChange: (_: any) => any;\n  onTouched: () => any;\n}\n\nexport interface IHasChangeDetectorRef {\n  _changeDetectorRef: ChangeDetectorRef;\n}\n\n/** Mixin to augment a component with ngModel support. */\nexport function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>(\n  base: T,\n  initialValue?: any,\n): Constructor<IControlValueAccessor> & T {\n  return class extends base {\n    private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;\n    private _subjectValueChanges: Subject<any>;\n    valueChanges: Observable<any>;\n\n    constructor(...args: any[]) {\n      super(...args);\n      this._subjectValueChanges = new Subject<any>();\n      this.valueChanges = this._subjectValueChanges.asObservable();\n    }\n\n    set value(v: any) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n        this._changeDetectorRef.markForCheck();\n        this._subjectValueChanges.next(v);\n      }\n    }\n    get value(): any {\n      return this._value;\n    }\n\n    writeValue(value: any): void {\n      this.value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n    }\n\n    onChange = (_: any) => noop;\n    onTouched = () => noop;\n  };\n}\n","import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CovalentValidators {\n  static min(minValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {\n      if (!!Validators.required(c) || (!minValue && minValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v < minValue ? { min: { minValue: minValue, actualValue: v } } : undefined;\n    };\n    return func;\n  }\n\n  static max(maxValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {\n      if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v > maxValue ? { max: { maxValue: maxValue, actualValue: v } } : undefined;\n    };\n    return func;\n  }\n\n  static numberRequired(c: AbstractControl): { [key: string]: any } {\n    return Number.isNaN(c.value) ? { required: true } : undefined;\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Renderer2,\n  ElementRef,\n  AfterViewInit,\n  ViewContainerRef,\n  TemplateRef,\n  ViewChild,\n  HostBinding,\n  HostListener,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) {}\n}\n\n@Component({\n  selector: 'td-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [tdCollapseAnimation],\n})\nexport class TdMessageComponent implements AfterViewInit {\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective, { static: true }) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef, { static: false }) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): any {\n    return { value: !this._opened, duration: 100 };\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n  ) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [TdMessageComponent, TdMessageContainerDirective];\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TD_MESSAGE],\n  exports: [TD_MESSAGE],\n})\nexport class CovalentMessageModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  forwardRef,\n  DoCheck,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnInit,\n  HostListener,\n  ElementRef,\n  Optional,\n  Inject,\n  Directive,\n  TemplateRef,\n  ViewContainerRef,\n  ContentChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterViewInit,\n  OnDestroy,\n  HostBinding,\n  Renderer2,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  ESCAPE,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  DELETE,\n  BACKSPACE,\n  ENTER,\n  SPACE,\n  TAB,\n  HOME,\n} from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable, Subscription, timer, merge, fromEvent } from 'rxjs';\nimport { filter, debounceTime } from 'rxjs/operators';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdChipsComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./chips.component.scss'],\n  templateUrl: './chips.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase\n  implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n  private _outsideClickSubs: Subscription = Subscription.EMPTY;\n  private _inputValueChangesSubs: Subscription = Subscription.EMPTY;\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _required: boolean = false;\n  private _tabIndex: number = 0;\n  private _touchendDebounce: number = 100;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input', { static: true }) _nativeInput: ElementRef;\n  @ViewChild(MatInput, { static: true }) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger, { static: true }) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective, { static: false }) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective, { static: false })\n  _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * required?: boolean\n   * Value is set to true if at least one chip is needed\n   * Defaults to false\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * returns the display placeholder\n   */\n  get displayPlaceHolder(): string {\n    if (!this.canAddChip) {\n      return '';\n    }\n    return this._required ? `${this.placeholder} *` : this.placeholder;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input('debounce') debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output('add') onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output('remove') onRemove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output('inputChange') onInputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output('chipFocus') onChipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output('chipBlur') onChipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * compareWith? function\n   * Function used to check whether a chip value already exists.\n   * Defaults to strict equality comparison ===\n   */\n  @Input('compareWith') compareWith: (o1: any, o2: any) => boolean = (o1: any, o2: any) => {\n    return o1 === o2;\n  };\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n    // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    timer()\n      .toPromise()\n      .then(() => {\n        this._isMousedown = false;\n      });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement || clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        timer()\n          .toPromise()\n          .then(() => {\n            this.removeFocusedState();\n          });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  ngOnInit(): void {\n    this._inputValueChangesSubs = this.inputControl.valueChanges\n      .pipe(debounceTime(this.debounce))\n      .subscribe((value: string) => {\n        this.onInputChange.emit(value ? value : '');\n      });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._outsideClickSubs.unsubscribe();\n    this._inputValueChangesSubs.unsubscribe();\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      let selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n\n    this._closeAutocomplete();\n    timer(this.debounce)\n      .toPromise()\n      .then(() => {\n        this.setFocusedState();\n        this._setFirstOptionActive();\n        this._openAutocomplete();\n      });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.findIndex((item: any) => this.compareWith(item, value)) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.onAdd.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    let removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === this._totalChips - 1 && index === 0) {\n      this._inputChild.focus();\n    } else if (index < this._totalChips - 1) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.onRemove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.onChipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.onChipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          let length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n          this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === this._totalChips - 1) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < this._totalChips - 1) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    let chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      timer()\n        .toPromise()\n        .then(() => {\n          if (this.focused && this._options && this._options.length > 0) {\n            // clean up of previously active options\n            this._options.toArray().forEach((option: MatOption) => {\n              option.setInactiveStyles();\n            });\n            // set the first one as active\n            this._options.toArray()[0].setActiveStyles();\n            this._internalActivateOption = true;\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      this._outsideClickSubs = merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n        .pipe(\n          debounceTime(this._touchendDebounce),\n          filter((event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return (\n              this.focused &&\n              clickTarget !== this._elementRef.nativeElement &&\n              !this._elementRef.nativeElement.contains(clickTarget) &&\n              !this._internalClick\n            );\n          }),\n        )\n        .subscribe(() => {\n          if (this.focused) {\n            this._autocompleteTrigger.closePanel();\n            this.removeFocusedState();\n            this.onTouched();\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n    }\n    return undefined;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [ReactiveFormsModule, CommonModule, MatInputModule, MatIconModule, MatChipsModule, MatAutocompleteModule],\n  declarations: [TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective],\n  exports: [TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective],\n})\nexport class CovalentChipsModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  Renderer2,\n  ElementRef,\n  ContentChildren,\n  QueryList,\n  HostListener,\n} from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styleUrls: ['./data-table-row.component.scss'],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableColumnRowComponent {\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styleUrls: ['./data-table-row.component.scss'],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableRowComponent {\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click')\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({ selector: '[tdDataTableTemplate]ng-template' })\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\n  @Input() tdDataTableTemplate: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  OnDestroy,\n  AfterViewInit,\n  ContentChildren,\n  TemplateRef,\n  AfterContentInit,\n  QueryList,\n  Inject,\n  Optional,\n  ViewChildren,\n  ElementRef,\n  OnInit,\n  AfterContentChecked,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\n\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\nimport {\n  ITdDataTableSortChangeEvent,\n  TdDataTableColumnComponent,\n} from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport enum TdDataTableSortingOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface ITdDataTableColumnWidth {\n  min?: number;\n  max?: number;\n}\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n  sortable?: boolean;\n  hidden?: boolean;\n  filter?: boolean;\n  width?: ITdDataTableColumnWidth | number;\n}\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n  index: number;\n}\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\nexport interface ITdDataTableRowClickEvent {\n  row: any;\n  index: number;\n}\n\nexport interface IInternalColumnWidth {\n  value: number;\n  limit: boolean;\n  index: number;\n  min?: boolean;\n  max?: boolean;\n}\n\n/**\n * Constant to set the rows offset before and after the viewport\n */\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n/**\n * Constant to set default row height if none is provided\n */\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\n\nexport class TdDataTableBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdDataTableComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-data-table',\n  styleUrls: ['./data-table.component.scss'],\n  templateUrl: './data-table.component.html',\n  inputs: ['value'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent extends _TdDataTableMixinBase\n  implements IControlValueAccessor, OnInit, AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\n  /** responsive width calculations */\n  private _resizeSubs: Subscription;\n  private _rowsChangedSubs: Subscription;\n  private _hostWidth: number = 0;\n\n  /** manually resizable columns */\n  private _resizableColumns: boolean = false;\n  private _columnClientX: number = 0;\n  private _columnResizeSubs: Subscription;\n  private _resizingColumn: number;\n  private _onColumnResize: Subject<number> = new Subject<number>();\n\n  get resizingColumn(): number {\n    return this._resizingColumn;\n  }\n\n  get hostWidth(): number {\n    // if the checkboxes are rendered, we need to remove their width\n    // from the total width to calculate properly\n    if (this.selectable) {\n      return this._hostWidth - 42;\n    }\n    return this._hostWidth;\n  }\n\n  private _widths: IInternalColumnWidth[] = [];\n  private _onResize: Subject<void> = new Subject<void>();\n\n  /** column header reposition and viewpoort */\n  private _verticalScrollSubs: Subscription;\n  private _horizontalScrollSubs: Subscription;\n  private _scrollHorizontalOffset: number = 0;\n\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\n\n  // Array of cached row heights to allow dynamic row heights\n  private _rowHeightCache: number[] = [];\n  // Total pseudo height of all the elements\n  private _totalHeight: number = 0;\n  // Total host height for the viewport\n  private _hostHeight: number = 0;\n  // Scrolled vertical pixels\n  private _scrollVerticalOffset: number = 0;\n  // Style to move the content a certain offset depending on scrolled offset\n  private _offsetTransform: SafeStyle;\n\n  // Variables that set from and to which rows will be rendered\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  /**\n   * Returns the offset style with a proper calculation on how much it should move\n   * over the y axis of the total height\n   */\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  /**\n   * Returns the assumed total height of the rows\n   */\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  /**\n   * Returns the initial row to render in the viewport\n   */\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  /**\n   * Returns the last row to render in the viewport\n   */\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  private _valueChangesSubs: Subscription;\n  /** internal attributes */\n  private _data: any[];\n  // data virtually iterated by component\n  private _virtualData: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _clickable: boolean = false;\n  private _multiple: boolean = true;\n  private _allSelected: boolean = false;\n  private _indeterminate: boolean = false;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** shift select */\n  private _shiftPreviouslyPressed: boolean = false;\n  private _lastSelectedIndex: number = -1;\n  private _firstSelectedIndex: number = -1;\n  private _firstCheckboxValue: boolean = false;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective) _templates: QueryList<TdDataTableTemplateDirective>;\n\n  @ViewChild('scrollableDiv', { static: true }) _scrollableDiv: ElementRef;\n\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\n\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\n\n  /**\n   * Returns scroll position to reposition column headers\n   */\n  get columnsLeftScroll(): number {\n    return this._scrollHorizontalOffset * -1;\n  }\n\n  /**\n   * Returns true if all values are selected.\n   */\n  get allSelected(): boolean {\n    return this._allSelected;\n  }\n\n  /**\n   * Returns true if all values are not deselected\n   * and at least one is.\n   */\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    this._rowHeightCache = [];\n    Promise.resolve().then(() => {\n      this.refresh();\n      // scroll back to the top if the data has changed\n      this._scrollableDiv.nativeElement.scrollTop = 0;\n    });\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      let row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * resizableColumns?: boolean\n   * Enables manual column resize.\n   * Defaults to 'false'\n   */\n  @Input('resizableColumns')\n  set resizableColumns(resizableColumns: boolean) {\n    this._resizableColumns = coerceBooleanProperty(resizableColumns);\n  }\n  get resizableColumns(): boolean {\n    return this._resizableColumns;\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(selectable: boolean) {\n    this._selectable = coerceBooleanProperty(selectable);\n  }\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  /**\n   * clickable?: boolean\n   * Enables row click events, hover.\n   * Defaults to 'false'\n   */\n  @Input('clickable')\n  set clickable(clickable: boolean) {\n    this._clickable = coerceBooleanProperty(clickable);\n  }\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: boolean) {\n    this._sortable = coerceBooleanProperty(sortable);\n  }\n  get sortable(): boolean {\n    return this._sortable;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n  get sortByColumn(): ITdDataTableColumn {\n    return this._sortBy;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ? TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n  get sortOrderEnum(): TdDataTableSortingOrder {\n    return this._sortOrder;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> = new EventEmitter<\n    ITdDataTableSortChangeEvent\n  >();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output('rowSelect') onRowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * rowClick?: function\n   * Event emitted when a row is clicked.\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\n   */\n  @Output('rowClick') onRowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<\n    ITdDataTableRowClickEvent\n  >();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output('selectAll') onSelectAll: EventEmitter<ITdDataTableSelectAllEvent> = new EventEmitter<\n    ITdDataTableSelectAllEvent\n  >();\n\n  constructor(\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    private _elementRef: ElementRef,\n    private _domSanitizer: DomSanitizer,\n    _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * compareWith?: function(row, model): boolean\n   * Allows custom comparison between row and model to see if row is selected or not\n   * Default comparation is by reference\n   */\n  @Input('compareWith') compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\n    return row === model;\n  };\n\n  /**\n   * Initialize observable for resize and scroll events\n   */\n  ngOnInit(): void {\n    // initialize observable for resize calculations\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\n      if (this._rows) {\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\n        });\n      }\n      this._calculateWidths();\n      this._calculateVirtualRows();\n    });\n\n    // initialize observable for column resize calculations\n    this._columnResizeSubs = this._onColumnResize\n      .asObservable()\n      .pipe(debounceTime(0))\n      .subscribe((clientX: number) => {\n        this._columnClientX = clientX;\n        this._calculateWidths();\n        this._changeDetectorRef.markForCheck();\n      });\n    // initialize observable for scroll column header reposition\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable().subscribe((horizontalScroll: number) => {\n      this._scrollHorizontalOffset = horizontalScroll;\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for virtual scroll rendering\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable().subscribe((verticalScroll: number) => {\n      this._scrollVerticalOffset = verticalScroll;\n      this._calculateVirtualRows();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (let i: number = 0; i < this._templates.toArray().length; i++) {\n      this._templateMap.set(this._templates.toArray()[i].tdDataTableTemplate, this._templates.toArray()[i].templateRef);\n    }\n  }\n\n  /**\n   * Checks hosts native elements widths to see if it has changed (resize check)\n   */\n  ngAfterContentChecked(): void {\n    // check if the scroll has been reset when element is hidden\n    if (this._scrollVerticalOffset - this._scrollableDiv.nativeElement.scrollTop > 5) {\n      // scroll back to the top if element has been reset\n      this._onVerticalScroll.next(0);\n    }\n    if (this._elementRef.nativeElement) {\n      let newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\n      // if the width has changed then we throw a resize event.\n      if (this._hostWidth !== newHostWidth) {\n        setTimeout(() => {\n          this._hostWidth = newHostWidth;\n          this._onResize.next();\n        }, 0);\n      }\n    }\n    if (this._scrollableDiv.nativeElement) {\n      let newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n      // if the height of the viewport has changed, then we mark for check\n      if (this._hostHeight !== newHostHeight) {\n        this._hostHeight = newHostHeight;\n        this._calculateVirtualRows();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Registers to an observable that checks if all rows have been rendered\n   * so we can start calculating the widths\n   */\n  ngAfterViewInit(): void {\n    this._rowsChangedSubs = this._rows.changes.pipe(debounceTime(0)).subscribe(() => {\n      this._onResize.next();\n    });\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Unsubscribes observables when data table is destroyed\n   */\n  ngOnDestroy(): void {\n    if (this._resizeSubs) {\n      this._resizeSubs.unsubscribe();\n    }\n    if (this._columnResizeSubs) {\n      this._columnResizeSubs.unsubscribe();\n    }\n    if (this._horizontalScrollSubs) {\n      this._horizontalScrollSubs.unsubscribe();\n    }\n    if (this._verticalScrollSubs) {\n      this._verticalScrollSubs.unsubscribe();\n    }\n    if (this._rowsChangedSubs) {\n      this._rowsChangedSubs.unsubscribe();\n    }\n    if (this._valueChangesSubs) {\n      this._valueChangesSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * Method that gets executed every time there is a scroll event\n   * Calls the scroll observable\n   */\n  handleScroll(event: Event): void {\n    let element: HTMLElement = <HTMLElement>event.target;\n    if (element) {\n      let horizontalScroll: number = element.scrollLeft;\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\n        this._onHorizontalScroll.next(horizontalScroll);\n      }\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._onVerticalScroll.next(verticalScroll);\n      }\n    }\n  }\n\n  /**\n   * Returns the width needed for the columns via index\n   */\n  getColumnWidth(index: number): number {\n    if (this._widths[index]) {\n      return this._widths[index].value;\n    }\n    return undefined;\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n  getTemplateRef(name: string): TemplateRef<any> {\n    return this._templateMap.get(name);\n  }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this.value.splice(0, this.value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n    this._calculateWidths();\n    this._calculateCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  selectAll(checked: boolean): void {\n    let toggledRows: any[] = [];\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this.value.push(row);\n          // checking which ones are being toggled\n          toggledRows.push(row);\n        }\n      });\n      this._allSelected = true;\n      this._indeterminate = true;\n    } else {\n      this._data.forEach((row: any) => {\n        // checking which ones are being toggled\n        if (this.isRowSelected(row)) {\n          toggledRows.push(row);\n          let modelRow: any = this.value.filter((val: any) => {\n            return this.compareWith(row, val);\n          })[0];\n          let index: number = this.value.indexOf(modelRow);\n          if (index > -1) {\n            this.value.splice(index, 1);\n          }\n        }\n      });\n      this._allSelected = false;\n      this._indeterminate = false;\n    }\n    this.onSelectAll.emit({ rows: toggledRows, selected: checked });\n    this.onChange(this.value);\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // compare items by [compareWith] function\n    return this.value\n      ? this.value.filter((val: any) => {\n          return this.compareWith(row, val);\n        }).length > 0\n      : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n   * handles cntrl clicks and shift clicks for multi-select\n   */\n  select(row: any, event: Event, currentSelected: number): void {\n    if (this.selectable) {\n      this.blockEvent(event);\n      // Check to see if Shift key is selected and need to select everything in between\n      let mouseEvent: MouseEvent = event as MouseEvent;\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n        let firstIndex: number = currentSelected;\n        let lastIndex: number = this._lastSelectedIndex;\n        if (currentSelected > this._lastSelectedIndex) {\n          firstIndex = this._lastSelectedIndex;\n          lastIndex = currentSelected;\n        }\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n        // else the checkboxes clicked are all after the initial one\n        if (\n          (this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n          (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)\n        ) {\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            if (this._firstSelectedIndex !== i) {\n              this._doSelection(this._data[i], i);\n            }\n          }\n        } else if (this._firstSelectedIndex > currentSelected || this._firstSelectedIndex < currentSelected) {\n          // change indexes depending on where the next checkbox is selected (before or after)\n          if (this._firstSelectedIndex > currentSelected) {\n            lastIndex--;\n          } else if (this._firstSelectedIndex < currentSelected) {\n            firstIndex++;\n          }\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            let rowSelected: boolean = this.isRowSelected(this._data[i]);\n            // if row is selected and first checkbox was selected\n            // or if row was unselected and first checkbox was unselected\n            // we ignore the toggle\n            if ((this._firstCheckboxValue && !rowSelected) || (!this._firstCheckboxValue && rowSelected)) {\n              this._doSelection(this._data[i], i);\n            } else if (this._shiftPreviouslyPressed) {\n              // else if the checkbox selected was in the middle of the last selection and the first selection\n              // then we undo the selections\n              if (\n                (currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex)\n              ) {\n                this._doSelection(this._data[i], i);\n              }\n            }\n          }\n        }\n        this._shiftPreviouslyPressed = true;\n        // if shift wasnt pressed, then we take the element checked as the first row\n        // incase the next click uses shift\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\n        this._shiftPreviouslyPressed = false;\n        this._firstSelectedIndex = currentSelected;\n      }\n      this._lastSelectedIndex = currentSelected;\n    }\n  }\n\n  /**\n   * Overrides the onselectstart method of the document so other text on the page\n   * doesn't get selected when doing shift selections.\n   */\n  disableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = function(): boolean {\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Resets the original onselectstart method.\n   */\n  enableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = undefined;\n    }\n  }\n\n  /**\n   * emits the onRowClickEvent when a row is clicked\n   * if clickable is true and selectable is false then select the row\n   */\n  handleRowClick(row: any, index: number, event: Event): void {\n    if (this.clickable) {\n      // ignoring linting rules here because attribute it actually null or not there\n      // can't check for undefined\n      const srcElement: any = event.srcElement || event.currentTarget;\n      let element: HTMLElement = event.target as HTMLElement;\n      /* tslint:disable-next-line */\n      if (srcElement.getAttribute('stopRowClick') === null && element.tagName.toLowerCase() !== 'mat-pseudo-checkbox') {\n        this.onRowClick.emit({\n          row: row,\n          index: index,\n        });\n      }\n    }\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder =\n        this._sortOrder === TdDataTableSortingOrder.Ascending\n          ? TdDataTableSortingOrder.Descending\n          : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Handle all keyup events when focusing a data table row\n   */\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        /** if user presses enter or space, the row should be selected */\n        if (this.selectable) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case UP_ARROW:\n        /**\n         * if users presses the up arrow, we focus the prev row\n         * unless its the first row\n         */\n        if (index > 0) {\n          this._rows.toArray()[index - 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case DOWN_ARROW:\n        /**\n         * if users presses the down arrow, we focus the next row\n         * unless its the last row\n         */\n        if (index < this._rows.toArray().length - 1) {\n          this._rows.toArray()[index + 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Sets column index of the dragged column and initial clientX of column\n   */\n  _handleStartColumnDrag(index: number, event: MouseEvent): void {\n    this._columnClientX = event.clientX;\n    this._resizingColumn = index;\n  }\n\n  /**\n   * Calculates new width depending on new clientX of dragger column\n   */\n  _handleColumnDrag(event: MouseEvent | DragEvent): void {\n    // check if there was been a separator clicked for resize\n    if (this._resizingColumn !== undefined && event.clientX > 0) {\n      let xPosition: number = event.clientX;\n      // checks if the separator is being moved to try and resize the column, else dont do anything\n      if (xPosition > 0 && this._columnClientX > 0 && xPosition - this._columnClientX !== 0) {\n        // calculate the new width depending if making the column bigger or smaller\n        let proposedManualWidth: number = this._widths[this._resizingColumn].value + (xPosition - this._columnClientX);\n        // if the proposed new width is less than the projected min width of the column, use projected min width\n        if (proposedManualWidth < this._colElements.toArray()[this._resizingColumn].projectedWidth) {\n          proposedManualWidth = this._colElements.toArray()[this._resizingColumn].projectedWidth;\n        }\n        this.columns[this._resizingColumn].width = proposedManualWidth;\n        // update new x position for the resized column\n        this._onColumnResize.next(xPosition);\n      }\n    }\n  }\n\n  /**\n   * Ends dragged flags\n   */\n  _handleEndColumnDrag(): void {\n    this._columnClientX = undefined;\n    this._resizingColumn = undefined;\n  }\n\n  /**\n   * Method to prevent the default events\n   */\n  blockEvent(event: Event): void {\n    event.preventDefault();\n  }\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      let splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n  /**\n   * Does the actual Row Selection\n   */\n  private _doSelection(row: any, rowIndex: number): boolean {\n    let wasSelected: boolean = this.isRowSelected(row);\n    if (!wasSelected) {\n      if (!this._multiple) {\n        this.clearModel();\n      }\n      this.value.push(row);\n    } else {\n      // compare items by [compareWith] function\n      row = this.value.filter((val: any) => {\n        return this.compareWith(row, val);\n      })[0];\n      let index: number = this.value.indexOf(row);\n      if (index > -1) {\n        this.value.splice(index, 1);\n      }\n    }\n    this._calculateCheckboxState();\n    this.onRowSelect.emit({ row: row, index: rowIndex, selected: !wasSelected });\n    this.onChange(this.value);\n    return !wasSelected;\n  }\n\n  /**\n   * Calculate all the state of all checkboxes\n   */\n  private _calculateCheckboxState(): void {\n    if (this._data) {\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\n      this._indeterminate = false;\n      for (let row of this._data) {\n        if (!this.isRowSelected(row)) {\n          continue;\n        }\n        this._indeterminate = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Calculates the widths for columns and cells depending on content\n   */\n  private _calculateWidths(): void {\n    if (this._colElements && this._colElements.length) {\n      this._widths = [];\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\n        this._adjustColumnWidth(index, this._calculateWidth());\n      });\n      this._adjustColumnWidhts();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Adjusts columns after calculation to see if they need to be recalculated.\n   */\n  private _adjustColumnWidhts(): void {\n    let fixedTotalWidth: number = 0;\n    // get the number of total columns that have flexible widths (not fixed or hidden)\n    let flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\n      if (this.columns[index].hidden) {\n        return false;\n      }\n      if (width.limit || width.max || width.min) {\n        fixedTotalWidth += width.value;\n      }\n      return !width.limit && !width.max && !width.min;\n    }).length;\n    // calculate how much pixes are left that could be spread across\n    // the flexible columns\n    let recalculateHostWidth: number = 0;\n    if (fixedTotalWidth < this.hostWidth) {\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n    }\n    // if we have flexible columns and pixels to spare on them\n    // we try and spread the pixels across them\n    if (flexibleWidths && recalculateHostWidth) {\n      let newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\n      let adjustedNumber: number = 0;\n      // adjust the column widths with the spread pixels\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\n        if (\n          (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue) ||\n          (this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue) ||\n          !this._widths[colWidth.index].limit\n        ) {\n          this._adjustColumnWidth(colWidth.index, newValue);\n          adjustedNumber++;\n        }\n      });\n      // if there are still columns that need to be recalculated, we start over\n      let newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\n        return !width.limit && !width.max;\n      }).length;\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\n        this._adjustColumnWidhts();\n      }\n    }\n  }\n\n  /**\n   * Adjusts a single column to see if it can be recalculated\n   */\n  private _adjustColumnWidth(index: number, value: number): void {\n    this._widths[index] = {\n      value: value,\n      index: index,\n      limit: false,\n      min: false,\n      max: false,\n    };\n    // flag to see if we need to skip the min width projection\n    // depending if a width or min width has been provided\n    let skipMinWidthProjection: boolean = false;\n    if (this.columns[index]) {\n      // if the provided width has min/max, then we check to see if we need to set it\n      if (typeof this.columns[index].width === 'object') {\n        let widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\n        // if the column width is less than the configured min, we override it\n        skipMinWidthProjection = widthOpts && !!widthOpts.min;\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\n          this._widths[index].value = widthOpts.min;\n          this._widths[index].min = true;\n          // if the column width is more than the configured max, we override it\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n          this._widths[index].value = widthOpts.max;\n          this._widths[index].max = true;\n        }\n        // if it has a fixed width, then we just set it\n      } else if (typeof this.columns[index].width === 'number') {\n        this._widths[index].value = <number>this.columns[index].width;\n        skipMinWidthProjection = this._widths[index].limit = true;\n      }\n    }\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\n    if (!skipMinWidthProjection && this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n      this._widths[index].min = true;\n      this._widths[index].limit = false;\n    }\n  }\n\n  /**\n   * Generic method to calculate column width\n   */\n  private _calculateWidth(): number {\n    let renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\n    return Math.floor(this.hostWidth / renderedColumns.length);\n  }\n\n  /**\n   * Method to calculate the rows to be rendered in the viewport\n   */\n  private _calculateVirtualRows(): void {\n    let scrolledRows: number = 0;\n    if (this._data) {\n      this._totalHeight = 0;\n      let rowHeightSum: number = 0;\n      // loop through all rows to see if we have their height cached\n      // and sum them all to calculate the total height\n      this._data.forEach((d: any, i: number) => {\n        // iterate through all rows at first and assume all\n        // rows are the same height as the first one\n        if (!this._rowHeightCache[i]) {\n          this._rowHeightCache[i] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n        }\n        rowHeightSum += this._rowHeightCache[i];\n        // check how many rows have been scrolled\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\n          scrolledRows++;\n        }\n      });\n      this._totalHeight = rowHeightSum;\n      // set the initial row to be rendered taking into account the row offset\n      let fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n\n      let hostHeight: number = this._hostHeight;\n      let index: number = 0;\n      // calculate how many rows can fit in the viewport\n      while (hostHeight > 0) {\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\n        index++;\n      }\n      // set the last row to be rendered taking into account the row offset\n      let range: number = index - 1 + TD_VIRTUAL_OFFSET * 2;\n      let toRow: number = range + this.fromRow;\n      // if last row is greater than the total length, then we use the total length\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    // calculate the proper offset depending on how many rows have been scrolled\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\n      for (let index: number = 0; index < this.fromRow; index++) {\n        offset += this._rowHeightCache[index];\n      }\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle(\n      'translateY(' + (offset - this.totalHeight) + 'px)',\n    );\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Renderer2,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  ViewChild,\n} from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.scss'],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', { read: ElementRef, static: true }) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input('name') name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable') sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input('active') active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ? TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> = new EventEmitter<\n    ITdDataTableSortChangeEvent\n  >();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click')\n  handleClick(): void {\n    if (this.sortable) {\n      this.onSortChange.emit({ name: this.name, order: this._sortOrder });\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n}\n","import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\n\nexport type TdDataTableCellAlign = 'start' | 'center' | 'end';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td[td-data-table-cell]',\n  styleUrls: ['./data-table-cell.component.scss'],\n  templateUrl: './data-table-cell.component.html',\n})\nexport class TdDataTableCellComponent {\n  private _align: TdDataTableCellAlign;\n\n  /**\n   * numeric?: boolean\n   * Makes cell follow the numeric data-table specs.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * align?: 'start' | 'center' | 'end'\n   * Makes cell content align on demand\n   * Defaults to 'left', overrides numeric\n   */\n  @Input()\n  set align(align: TdDataTableCellAlign) {\n    this._align = align;\n  }\n  get align(): TdDataTableCellAlign {\n    return this._align;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n  }\n}\n","import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'table[td-data-table]',\n  styleUrls: ['./data-table-table.component.scss'],\n  templateUrl: './data-table-table.component.html',\n})\nexport class TdDataTableTableComponent {\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nimport { TdDataTableComponent } from './data-table.component';\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nconst TD_DATA_TABLE: Type<any>[] = [\n  TdDataTableComponent,\n  TdDataTableTemplateDirective,\n\n  TdDataTableColumnComponent,\n  TdDataTableCellComponent,\n  TdDataTableRowComponent,\n  TdDataTableColumnRowComponent,\n  TdDataTableTableComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, MatTooltipModule, MatIconModule, MatPseudoCheckboxModule],\n  declarations: [TD_DATA_TABLE],\n  exports: [TD_DATA_TABLE],\n})\nexport class CovalentDataTableModule {}\n","import { Injectable } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TdDataTableService {\n  /**\n   * params:\n   * - data: any[]\n   * - searchTerm: string\n   * - ignoreCase: boolean = false\n   * - excludedColumns: string[] = []\n   *\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n   */\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\n    let filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n    if (filter) {\n      data = data.filter((item: any) => {\n        const res: any = Object.keys(item).find((key: string) => {\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n            const preItemValue: string = '' + item[key];\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n            return itemValue.indexOf(filter) > -1;\n          }\n        });\n        return !(typeof res === 'undefined');\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - sortBy: string\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n   *\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n   */\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\n    if (sortBy) {\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n      data.sort((a: any, b: any) => {\n        let compA: any = a[sortBy];\n        let compB: any = b[sortBy];\n        let direction: number = 0;\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n        } else {\n          if (compA < compB) {\n            direction = -1;\n          } else if (compA > compB) {\n            direction = 1;\n          }\n        }\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - fromRow: number\n   * - toRow: : number\n   *\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n   */\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\n    if (fromRow >= 1) {\n      data = data.slice(fromRow - 1, toRow);\n    }\n    return data;\n  }\n}\n","import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({ selector: 'td-dialog-title' })\nexport class TdDialogTitleDirective {}\n\n@Directive({ selector: 'td-dialog-content' })\nexport class TdDialogContentDirective {}\n\n@Directive({ selector: 'td-dialog-actions' })\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class TdDialogComponent implements AfterContentInit {\n  @ContentChildren(TdDialogTitleDirective) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss'],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  styleUrls: ['./prompt-dialog.component.scss'],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input', { static: true }) _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close(undefined);\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n","import {\n  Injectable,\n  ViewContainerRef,\n  Provider,\n  SkipSelf,\n  Optional,\n  Inject,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\nimport { DragDrop, DragRef } from '@angular/cdk/drag-drop';\nimport { DOCUMENT } from '@angular/common';\n\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\nexport interface IDraggableConfig<T> {\n  component: ComponentType<T>;\n  config?: MatDialogConfig;\n  // CSS selectors of element(s) inside the component meant to be drag handle(s)\n  dragHandleSelectors?: string[];\n  // Class that will be added to the component signifying drag-ability\n  draggableClass?: string;\n}\n\n@Injectable()\nexport class TdDialogService {\n  private _renderer2: Renderer2;\n\n  constructor(\n    @Inject(DOCUMENT) private _document: any,\n    private _dialogService: MatDialog,\n    private _dragDrop: DragDrop,\n    private rendererFactory: RendererFactory2,\n  ) {\n    this._renderer2 = rendererFactory.createRenderer(undefined, undefined);\n  }\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdAlertDialogComponent> = this._dialogService.open(\n      TdAlertDialogComponent,\n      dialogConfig,\n    );\n    let alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdConfirmDialogComponent> = this._dialogService.open(\n      TdConfirmDialogComponent,\n      dialogConfig,\n    );\n    let confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdPromptDialogComponent> = this._dialogService.open(\n      TdPromptDialogComponent,\n      dialogConfig,\n    );\n    let promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * Opens a draggable dialog containing the given component.\n   */\n  public openDraggable<T>({\n    component,\n    config,\n    dragHandleSelectors,\n    draggableClass,\n  }: IDraggableConfig<T>): MatDialogRef<T> {\n    const dialogRef: MatDialogRef<T, any> = this._dialogService.open(component, config);\n\n    const CDK_OVERLAY_PANE_SELECTOR: string = '.cdk-overlay-pane';\n    const CDK_OVERLAY_CONTAINER_SELECTOR: string = '.cdk-overlay-container';\n\n    dialogRef.afterOpened().subscribe(() => {\n      const dialogElement: HTMLElement = <HTMLElement>this._document.getElementById(dialogRef.id);\n      const draggableElement: DragRef = this._dragDrop.createDrag(dialogElement);\n\n      if (draggableClass) {\n        const childComponent: Element = dialogElement.firstElementChild;\n        this._renderer2.addClass(childComponent, draggableClass);\n      }\n\n      if (dragHandleSelectors && dragHandleSelectors.length) {\n        const dragHandles: Element[] = dragHandleSelectors.reduce(\n          (acc: Element[], curr: string) => [...acc, ...Array.from(dialogElement.querySelectorAll(curr))],\n          [],\n        );\n        if (dragHandles.length > 0) {\n          draggableElement.withHandles(<HTMLElement[]>dragHandles);\n        }\n      }\n\n      const rootElement: Element = dialogElement.closest(CDK_OVERLAY_PANE_SELECTOR);\n      if (rootElement) {\n        draggableElement.withRootElement(<HTMLElement>rootElement);\n      }\n      const boundaryElement: Element = dialogElement.closest(CDK_OVERLAY_CONTAINER_SELECTOR);\n      if (boundaryElement) {\n        draggableElement.withBoundaryElement(<HTMLElement>boundaryElement);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    let dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport {\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n} from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\nimport { TdDialogService } from './services/dialog.service';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatDialogModule, MatInputModule, MatButtonModule],\n  declarations: [TD_DIALOGS],\n  exports: [TD_DIALOGS],\n  providers: [TdDialogService],\n  entryComponents: [TD_DIALOGS_ENTRY_COMPONENTS],\n})\nexport class CovalentDialogsModule {}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n  ContentChild,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  tdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  tdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styleUrls: ['./expansion-panel.component.scss'],\n  templateUrl: './expansion-panel.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  animations: [tdCollapseAnimation, tdRotateAnimation],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective, { static: false })\n  expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective, { static: false }) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective, { static: false })\n  expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit(undefined);\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit(undefined);\n  }\n}\n","import {\n  Component,\n  Renderer2,\n  ElementRef,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { TdExpansionPanelComponent } from './expansion-panel.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styleUrls: ['./expansion-panel-group.component.scss'],\n  templateUrl: './expansion-panel-group.component.html',\n})\nexport class TdExpansionPanelGroupComponent implements AfterContentInit, OnDestroy {\n  private _multi: boolean = false;\n\n  private _lastOpenedPanels: TdExpansionPanelComponent[] = [];\n\n  private _destroyed: Subject<boolean> = new Subject<boolean>();\n  private _stopWatchingPanels: Subject<boolean> = new Subject<boolean>();\n\n  /**\n   * multi?: boolean\n   * Sets whether multiple panels can be opened at a given time.\n   * Set to false for accordion mode.\n   * Defaults to false.\n   */\n  @Input('multi')\n  set multi(multi: boolean) {\n    this._multi = coerceBooleanProperty(multi);\n    if (this._multi === false && this._lastOpenedPanels.length > 0) {\n      this._closeAllExcept(this._lastOpenedPanels[this._lastOpenedPanels.length - 1]);\n    }\n  }\n\n  @ContentChildren(TdExpansionPanelComponent) expansionPanels: QueryList<TdExpansionPanelComponent>;\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel-group');\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next(true);\n    this._destroyed.unsubscribe();\n    this._stopWatchingPanels.next(true);\n    this._stopWatchingPanels.unsubscribe();\n  }\n\n  public ngAfterContentInit(): void {\n    if (!this._multi) {\n      const openedPanels: TdExpansionPanelComponent[] = this.expansionPanels.filter(\n        (expansionPanel: TdExpansionPanelComponent) => expansionPanel.expand,\n      );\n      const numOpenedPanels: number = openedPanels.length;\n      if (numOpenedPanels > 1) {\n        this._closeAllExcept(openedPanels[numOpenedPanels - 1]);\n      }\n    }\n\n    this._attachListeners(this.expansionPanels);\n\n    this.expansionPanels.changes\n      .pipe(takeUntil(this._destroyed))\n      .subscribe((expansionPanels: QueryList<TdExpansionPanelComponent>) => {\n        this._stopWatchingPanels.next(true);\n        this._stopWatchingPanels.unsubscribe();\n        this._stopWatchingPanels = new Subject<boolean>();\n        this._attachListeners(expansionPanels);\n      });\n  }\n\n  /**\n   * Opens all expansion panels, only if multi set set to true.\n   */\n  public openAll(): void {\n    if (this._multi) {\n      this.expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n        expansionPanel.open();\n      });\n    }\n  }\n\n  /**\n   * Closes all expansion panels\n   */\n  public closeAll(): void {\n    this.expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.close();\n    });\n  }\n\n  private _attachListeners(expansionPanels: QueryList<TdExpansionPanelComponent>): void {\n    this._lastOpenedPanels = [];\n    expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.expanded.pipe(takeUntil(this._stopWatchingPanels)).subscribe(() => {\n        const indexOfPanel: number = this._lastOpenedPanels.indexOf(expansionPanel);\n        if (indexOfPanel !== -1) {\n          this._lastOpenedPanels.splice(indexOfPanel, 1);\n        }\n        this._lastOpenedPanels.push(expansionPanel);\n\n        if (!this._multi) {\n          this._closeAllExcept(expansionPanel);\n        }\n      });\n\n      expansionPanel.collapsed.pipe(takeUntil(this._stopWatchingPanels)).subscribe(() => {\n        const indexOfPanel: number = this._lastOpenedPanels.indexOf(expansionPanel);\n        if (indexOfPanel !== -1) {\n          this._lastOpenedPanels.splice(indexOfPanel, 1);\n        }\n      });\n    });\n  }\n\n  private _closeAllExcept(expansionPanel: TdExpansionPanelComponent): void {\n    this.expansionPanels.forEach((panel: TdExpansionPanelComponent) => {\n      if (panel !== expansionPanel) {\n        panel.close();\n      }\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport {\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n} from './expansion-panel.component';\nimport { TdExpansionPanelGroupComponent } from './expansion-panel-group.component';\n\nconst TD_EXPANSION_PANEL: Type<any>[] = [\n  TdExpansionPanelGroupComponent,\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatRippleModule, MatIconModule, PortalModule],\n  declarations: [TD_EXPANSION_PANEL],\n  exports: [TD_EXPANSION_PANEL],\n})\nexport class CovalentExpansionPanelModule {}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {}\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      let fileInputEl: HTMLInputElement = <HTMLInputElement>event.target;\n      let files: FileList = fileInputEl.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\n      }\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (\n      this.disabled ||\n      (!this._multiple && ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))\n    ) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (\n        ((<any>types).contains && (<any>types).contains('Files')) ||\n        ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)\n      ) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput', { static: true }) _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n  /**\n   * Sets disable to the component. Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ContentChild,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileUploadComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent, { static: false }) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective, { static: false }) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent, HttpEventType, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject, Subscriber } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/**\n * @deprecated should be removed in favor of IUploadInit\n * @breaking-change 3.0.0\n */\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: { [key: string]: string };\n  formData?: FormData;\n}\n\nexport interface IUploadExtras {\n  headers?: { [name: string]: string | string[] };\n  params?: { [param: string]: string | string[] };\n}\n\n@Injectable()\nexport class TdFileService {\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  /**\n   * Creates a new instance\n   * @param _http the http client instance\n   * @breaking-change 3.0.0 remove 'Optional' decorator once the legay upload method is removed\n   */\n  constructor(@Optional() private readonly _http: HttpClient) {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * Uploads a file to URL.\n   */\n  send(\n    url: string,\n    method: string,\n    body: File | FormData,\n    { headers, params }: IUploadExtras = {},\n  ): Observable<HttpEvent<any>> {\n    if (!this._http) {\n      throw new Error('The HttpClient module needs to be imported at root module level');\n    }\n    const req: HttpRequest<File | FormData> = new HttpRequest(method.toUpperCase(), url, body, {\n      reportProgress: true,\n      headers: new HttpHeaders(headers || {}),\n      params: new HttpParams({ fromObject: params || {} }),\n    });\n    return this._http.request(req).pipe(tap((event: HttpEvent<any>) => this.handleEvent(event)));\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * @deprecated use send instead\n   * @breaking-change 3.0.0\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round((event.loaded / event.total) * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (let key in options.headers) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n\n  private handleEvent<T = any>(event: HttpEvent<T>): void {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        this._progressSubject.next(0);\n        break;\n      case HttpEventType.UploadProgress:\n        this._progressSubject.next(Math.round((100 * event.loaded) / event.total));\n        break;\n      case HttpEventType.Response:\n        this._progressSubject.next(100);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\nimport { TdFileService } from './services/file.service';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatIconModule, MatButtonModule, PortalModule],\n  declarations: [TD_FILE],\n  exports: [TD_FILE],\n  providers: [TdFileService],\n})\nexport class CovalentFileModule {}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styleUrls: ['./json-formatter.component.scss'],\n  templateUrl: './json-formatter.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdJsonFormatterComponent {\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    let elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? 'â¦' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, @Optional() private _dir: Dir) {}\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    let type: string = this.getType(value);\n    if (type === 'undefined' || type === 'null') {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return (\n        value\n          .toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{â¦}'\n      );\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      let date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]') {\n        if (!Number.isNaN(date.getTime())) {\n          return 'date';\n        }\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    let object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n      return 'Object';\n    }\n    let funcNameRegex: RegExp = /function (.{1,})\\(/;\n    let results: RegExpExecArray = funcNameRegex.exec(object.constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      let previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      let previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    let previewString: string = previewData.join(', ');\n    let ellipsis: string =\n      previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n      previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH\n        ? 'â¦'\n        : '';\n    return (\n      startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) + ellipsis + endChar\n    );\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (let key in this._data) {\n        this._children.push(key);\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [CommonModule, MatTooltipModule, MatIconModule],\n  declarations: [TdJsonFormatterComponent],\n  exports: [TdJsonFormatterComponent],\n})\nexport class CovalentJsonFormatterModule {}\n","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss'],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase {}\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable, private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n  @Input('tdLayoutToggle')\n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  @Input('tdLayoutClose')\n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n  @Input('tdLayoutOpen')\n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss'],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss'],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutNavListToggle')\n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutNavListClose')\n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutNavListOpen')\n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss'],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input('cardTitle') cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input('cardSubtitle') cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input('cardWidth') cardWidth: number = 70;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss'],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutManageListToggle')\n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutManageListClose')\n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutManageListOpen')\n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss'],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: string\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ContentChildren,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  Inject,\n  QueryList,\n  SecurityContext,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss'],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective) _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective) _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input('sidenavTitle') sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * avatar?: string\n   *\n   * avatar url to be displayed before the title\n   * If [icon] or [logo] are set, then this will not be shown.\n   */\n  @Input('avatar') avatar: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input('color') color: string;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      let sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input('name') name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input('email') email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n    @Optional() private _router: Router,\n    private _sanitize: DomSanitizer,\n  ) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollDispatchModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [TD_LAYOUTS],\n  exports: [TD_LAYOUTS],\n})\nexport class CovalentLayoutModule {}\n","import {\n  Component,\n  ViewChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  DoCheck,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Observable, Subject } from 'rxjs';\n\nexport enum LoadingType {\n  Circular = 'circular',\n  Linear = 'linear',\n}\n\nexport enum LoadingMode {\n  Determinate = 'determinate',\n  Indeterminate = 'indeterminate',\n}\n\nexport enum LoadingStrategy {\n  Overlay = 'overlay',\n  Replace = 'replace',\n}\n\nexport enum LoadingStyle {\n  FullScreen = 'fullscreen',\n  Overlay = 'overlay',\n  None = 'none',\n}\n\nimport { tdFadeInOutAnimation } from '@covalent/core/common';\n\nexport const TD_CIRCLE_DIAMETER: number = 100;\n\n@Component({\n  selector: 'td-loading',\n  styleUrls: ['./loading.component.scss'],\n  templateUrl: './loading.component.html',\n  animations: [tdFadeInOutAnimation],\n})\nexport class TdLoadingComponent implements DoCheck {\n  private _animationIn: Subject<any> = new Subject<any>();\n  private _animationOut: Subject<any> = new Subject<any>();\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\n  private _value: number = 0;\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\n\n  /**\n   * Flag for animation\n   */\n  animation: boolean = false;\n\n  /**\n   * Content injected into loading component.\n   */\n  content: TemplatePortal<any>;\n\n  /**\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\n   */\n  set mode(mode: LoadingMode) {\n    this._defaultMode = mode;\n  }\n  get mode(): LoadingMode {\n    return this._mode;\n  }\n\n  /**\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\n   */\n  set value(value: number) {\n    this._value = value;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  style: LoadingStyle = LoadingStyle.None;\n\n  /**\n   * height: number\n   * Sets height of [TdLoadingComponent].\n   */\n  height: number;\n\n  /**\n   * type: LoadingType\n   * Sets type of [TdLoadingComponent] rendered.\n   */\n  type: LoadingType = LoadingType.Circular;\n\n  /**\n   * color: primary' | 'accent' | 'warn'\n   * Sets theme color of [TdLoadingComponent] rendered.\n   */\n  color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck(): void {\n    // When overlay is used and the host width has a value greater than 1px\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\n    if (this.isOverlay() && this._hostHeight() > 1) {\n      if (this.animation) {\n        this._setCircleDiameter();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  getHeight(): string {\n    // Ignore height if style is `overlay` or `fullscreen`.\n    // Add height if child elements have a height and style is `none`, else return default height.\n    if (this.isOverlay() || this.isFullScreen()) {\n      return undefined;\n    } else {\n      return this.height ? `${this.height}px` : '150px';\n    }\n  }\n\n  getCircleDiameter(): number {\n    return this._circleDiameter;\n  }\n\n  getCircleStrokeWidth(): number {\n    // we calculate the stroke width by setting it as 10% of its diameter\n    let strokeWidth: number = this.getCircleDiameter() / 10;\n    return Math.abs(strokeWidth);\n  }\n\n  isCircular(): boolean {\n    return this.type === LoadingType.Circular;\n  }\n\n  isLinear(): boolean {\n    return this.type === LoadingType.Linear;\n  }\n\n  isFullScreen(): boolean {\n    return this.style === LoadingStyle.FullScreen;\n  }\n\n  isOverlay(): boolean {\n    return this.style === LoadingStyle.Overlay;\n  }\n\n  animationComplete(event: AnimationEvent): void {\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\n    if (!event.fromState) {\n      this.inAnimationCompleted();\n    } else {\n      this.outAnimationCompleted();\n    }\n  }\n\n  inAnimationCompleted(): void {\n    this._animationIn.next(undefined);\n  }\n\n  outAnimationCompleted(): void {\n    /* little hack to reset the loader value and animation before removing it from DOM\n     * else, the loader will appear with prev value when its registered again\n     * and will do an animation going prev value to 0.\n     */\n    this.value = 0;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    this._animationOut.next(undefined);\n  }\n\n  /**\n   * Starts in animation and returns an observable for completition event.\n   */\n  startInAnimation(): Observable<any> {\n    /* need to switch back to the selected mode, so we have saved it in another variable\n     *  and then recover it. (issue with protractor)\n     */\n    this._mode = this._defaultMode;\n    // Set values before the animations starts\n    this._setCircleDiameter();\n    // Check for changes for `OnPush` change detection\n    this.animation = true;\n    this._changeDetectorRef.markForCheck();\n    return this._animationIn.asObservable();\n  }\n\n  /**\n   * Starts out animation and returns an observable for completition event.\n   */\n  startOutAnimation(): Observable<any> {\n    this.animation = false;\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\n     * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\n     */\n    this._mode = LoadingMode.Determinate;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    return this._animationOut.asObservable();\n  }\n\n  /**\n   * Calculate the proper diameter for the circle and set it\n   */\n  private _setCircleDiameter(): void {\n    // we set a default diameter of 100 since this is the default in material\n    let diameter: number = TD_CIRCLE_DIAMETER;\n    // if height is provided, then we take that as diameter\n    if (this.height) {\n      diameter = this.height;\n      // else if its not provided, then we take the host height\n    } else if (this.height === undefined) {\n      diameter = this._hostHeight();\n    }\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\n      this._circleDiameter = Math.floor(diameter);\n    } else {\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\n    }\n  }\n\n  /**\n   * Returns the host height of the loading component\n   */\n  private _hostHeight(): number {\n    if (<HTMLElement>this._elementRef.nativeElement) {\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return 0;\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ChangeDetectorRef,\n  Provider,\n  SkipSelf,\n  Optional,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingStyle } from '../loading.component';\nimport { ITdLoadingConfig } from './loading.service';\n\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\n  height?: number;\n  style?: LoadingStyle;\n}\n\nexport interface ILoadingRef {\n  observable: Observable<any>;\n  componentRef: ComponentRef<any>;\n  subject?: Subject<any>;\n  times?: number;\n}\n\n/**\n * NOTE: @internal usage only.\n */\n@Injectable()\nexport class TdLoadingFactory {\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _overlay: Overlay,\n    private _injector: Injector,\n  ) {}\n\n  /**\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\n   * into it. Leveraging the state and configuration from it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\n    let loadingRef: ILoadingRef = this._initializeContext();\n    let loading: boolean = false;\n    let overlayRef: OverlayRef;\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        overlayRef = this._createOverlay();\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\n        this._mapOptions(options, loadingRef.componentRef.instance);\n        loadingRef.componentRef.instance.startInAnimation();\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          loadingRef.componentRef.destroy();\n          overlayRef.detach();\n          overlayRef.dispose();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\n   * perfectly when overlaying it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createOverlayComponent(\n    options: ITdLoadingConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<Object>,\n  ): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\n    viewContainerRef.clear();\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        loadingRef.componentRef.instance.startOutAnimation();\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Replaces the template with the loading component depending if it was registered or resolved.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createReplaceComponent(\n    options: ITdLoadingConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<Object>,\n    context: TdLoadingContext,\n  ): ILoadingRef {\n    let nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling\n      ? nativeElement.nextElementSibling.scrollHeight\n      : undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    // passing context so when the template is attached, we can keep the reference of the variables\n    let contentRef: EmbeddedViewRef<Object> = viewContainerRef.createEmbeddedView(templateRef, context);\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        // detach the content and attach the loader if loader is there\n        let index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\n        if (index < 0) {\n          viewContainerRef.detach(viewContainerRef.indexOf(contentRef));\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n        }\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          // detach loader and attach the content if content is there\n          let index: number = viewContainerRef.indexOf(contentRef);\n          if (index < 0) {\n            viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\n            viewContainerRef.insert(contentRef, 0);\n          }\n          /**\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\n           * with \"OnPush\" change detection\n           */\n          contentRef.detectChanges();\n          contentRef.markForCheck();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a fullscreen overlay for the loading usage.\n   */\n  private _createOverlay(): OverlayRef {\n    let state: OverlayConfig = new OverlayConfig();\n    state.hasBackdrop = false;\n    state.positionStrategy = this._overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n    return this._overlay.create(state);\n  }\n\n  /**\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\n   */\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\n    let compRef: ILoadingRef = this._initializeContext();\n    compRef.componentRef = this._componentFactoryResolver\n      .resolveComponentFactory(TdLoadingComponent)\n      .create(this._injector);\n    this._mapOptions(options, compRef.componentRef.instance);\n    return compRef;\n  }\n\n  /**\n   * Initialize context for loading component.\n   */\n  private _initializeContext(): ILoadingRef {\n    let subject: Subject<any> = new Subject<any>();\n    return {\n      observable: subject.asObservable(),\n      subject: subject,\n      componentRef: undefined,\n      times: 0,\n    };\n  }\n\n  /**\n   * Maps configuration to the loading component instance.\n   */\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\n    instance.style = options.style;\n    if (options.type !== undefined) {\n      instance.type = options.type;\n    }\n    if (options.height !== undefined) {\n      instance.height = options.height;\n    }\n    if (options.mode !== undefined) {\n      instance.mode = options.mode;\n    }\n    if (options.color !== undefined) {\n      instance.color = options.color;\n    }\n  }\n}\n\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\n  parent: TdLoadingFactory,\n  componentFactoryResolver: ComponentFactoryResolver,\n  overlay: Overlay,\n  injector: Injector,\n): TdLoadingFactory {\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\n}\n\nexport const LOADING_FACTORY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingFactory,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\n\nexport interface ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n}\n\nexport class TdLoadingConfig implements ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n\n  constructor(config: ITdLoadingConfig) {\n    this.name = config.name;\n    if (!this.name) {\n      throw Error('Name is required for [TdLoading] configuration.');\n    }\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\n    this.type = config.type ? config.type : LoadingType.Circular;\n    this.color = config.color ? config.color : 'primary';\n  }\n}\n\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\n  strategy?: LoadingStrategy;\n}\n\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\n  name: string;\n  type: LoadingType;\n  mode: LoadingMode;\n  strategy: LoadingStrategy;\n\n  constructor(config: ITdLoadingDirectiveConfig) {\n    super(config);\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\n  }\n}\n\n@Injectable()\nexport class TdLoadingService {\n  private _context: { [key: string]: ILoadingRef } = {};\n  private _timeouts: { [key: string]: any } = {};\n\n  constructor(private _loadingFactory: TdLoadingFactory) {\n    this.create({\n      name: 'td-loading-main',\n    });\n  }\n\n  /**\n   * params:\n   * - config: ILoadingDirectiveConfig\n   * - viewContainerRef: ViewContainerRef\n   * - templateRef: TemplateRef<Object>\n   *\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\n   * Replaces the templateRef with the mask when a request is registered on it.\n   *\n   * NOTE: @internal usage only.\n   */\n  createComponent(\n    config: ITdLoadingDirectiveConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<Object>,\n    context: TdLoadingContext,\n  ): ILoadingRef {\n    let directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\n    if (this._context[directiveConfig.name]) {\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\n    }\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(\n        directiveConfig,\n        viewContainerRef,\n        templateRef,\n      );\n    } else {\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(\n        directiveConfig,\n        viewContainerRef,\n        templateRef,\n        context,\n      );\n    }\n    return this._context[directiveConfig.name];\n  }\n\n  /**\n   * params:\n   * - config: ITdLoadingConfig\n   *\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\n   * Only displayed when the mask has a request registered on it.\n   */\n  public create(config: ITdLoadingConfig): void {\n    let fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\n    this.removeComponent(fullscreenConfig.name);\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\n  }\n\n  /**\n   * params:\n   * - name: string\n   *\n   * Removes `loading` component from service context.\n   */\n  public removeComponent(name: string): void {\n    if (this._context[name]) {\n      this._context[name].subject.unsubscribe();\n      if (this._context[name].componentRef) {\n        this._context[name].componentRef.destroy();\n      }\n      this._context[name] = undefined;\n      delete this._context[name];\n    }\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - registers?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass registers argument to set a number of register calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.register()\n   */\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\n    // try registering into the service if the loading component has been instanciated or if it exists.\n    if (this._context[name]) {\n      registers = registers < 1 ? 1 : registers;\n      this._context[name].times += registers;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    } else {\n      // if it doesnt exist, set a timeout so its registered after change detection happens\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\n      if (!this._timeouts[name]) {\n        this._timeouts[name] = setTimeout(() => {\n          this.register(name, registers);\n        });\n      } else {\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\n        this._clearTimeout(name);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - resolves?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass resolves argument to set a number of resolve calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolve()\n   */\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      resolves = resolves < 1 ? 1 : resolves;\n      if (this._context[name].times > 0) {\n        let times: number = this._context[name].times;\n        times -= resolves;\n        this._context[name].times = times < 0 ? 0 : times;\n      }\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * returns: true if successful\n   *\n   * Resolves all request for the loading mask referenced by the name parameter.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolveAll()\n   */\n  public resolveAll(name: string = 'td-loading-main'): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      this._context[name].times = 0;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - value: number\n   * returns: true if successful\n   *\n   * Set value on a loading mask referenced by the name parameter.\n   * Usage only available if its mode is 'determinate' and if loading is showing.\n   */\n  public setValue(name: string, value: number): boolean {\n    if (this._context[name]) {\n      let instance: TdLoadingComponent = this._context[name].componentRef.instance;\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\n        instance.value = value;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Clears timeout linked to the name.\n   * @param name Name of the loading component to be cleared\n   */\n  private _clearTimeout(name: string): void {\n    clearTimeout(this._timeouts[name]);\n    delete this._timeouts[name];\n  }\n}\n\nexport function LOADING_PROVIDER_FACTORY(parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\n  return parent || new TdLoadingService(loadingFactory);\n}\n\nexport const LOADING_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingService,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\n  useFactory: LOADING_PROVIDER_FACTORY,\n};\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\n\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\nimport { TdLoadingService } from '../services/loading.service';\nimport { ILoadingRef } from '../services/loading.factory';\n\n/**\n * Context class for variable reference\n */\nexport class TdLoadingContext {\n  public $implicit: any = undefined;\n  public tdLoading: any = undefined;\n}\n\n// Constant for generation of the id for the next component\nlet TD_LOADING_NEXT_ID: number = 0;\n\n@Directive({\n  selector: '[tdLoading]',\n})\nexport class TdLoadingDirective implements OnInit, OnDestroy {\n  private _context: TdLoadingContext = new TdLoadingContext();\n  private _type: LoadingType;\n  private _mode: LoadingMode;\n  private _strategy: LoadingStrategy;\n  private _name: string;\n  private _loadingRef: ILoadingRef;\n\n  /**\n   * tdLoading: string\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\n   */\n  @Input('tdLoading')\n  set name(name: string) {\n    if (!this._name) {\n      if (name) {\n        this._name = name;\n      }\n    }\n  }\n\n  /**\n   * tdLoadingUntil?: any\n   * If its null, undefined or false it will be used to register requests to the mask.\n   * Else if its any value that can be resolved as true, it will resolve the mask.\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\n   */\n  @Input('tdLoadingUntil')\n  set until(until: any) {\n    if (!this._name) {\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\n    }\n    this._context.$implicit = this._context.tdLoading = until;\n    if (!until) {\n      this._loadingService.register(this._name);\n    } else {\n      this._loadingService.resolveAll(this._name);\n    }\n  }\n\n  /**\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\n   * Sets the type of loading mask depending on value.\n   * Defaults to [LoadingType.Circular | 'circular'].\n   */\n  @Input('tdLoadingType')\n  set type(type: LoadingType) {\n    switch (type) {\n      case LoadingType.Linear:\n        this._type = LoadingType.Linear;\n        break;\n      default:\n        this._type = LoadingType.Circular;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\n   * Sets the mode of loading mask depending on value.\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\n   */\n  @Input('tdLoadingMode')\n  set mode(mode: LoadingMode) {\n    switch (mode) {\n      case LoadingMode.Determinate:\n        this._mode = LoadingMode.Determinate;\n        break;\n      default:\n        this._mode = LoadingMode.Indeterminate;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\n   * Sets the strategy of loading mask depending on value.\n   * Defaults to [LoadingMode.Replace | 'replace'].\n   */\n  @Input('tdLoadingStrategy')\n  set strategy(stategy: LoadingStrategy) {\n    switch (stategy) {\n      case LoadingStrategy.Overlay:\n        this._strategy = LoadingStrategy.Overlay;\n        break;\n      default:\n        this._strategy = LoadingStrategy.Replace;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the loading component. Defaults to \"primary\"\n   */\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _templateRef: TemplateRef<TdLoadingContext>,\n    private _loadingService: TdLoadingService,\n  ) {}\n\n  /**\n   * Registers component in the DOM, so it will be available when calling resolve/register.\n   */\n  ngOnInit(): void {\n    this._registerComponent();\n  }\n\n  /**\n   * Remove component when directive is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._loadingService.removeComponent(this._name);\n    this._loadingRef = undefined;\n  }\n\n  /**\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\n   */\n  private _registerComponent(): void {\n    if (!this._name) {\n      throw new Error('Name is needed to register loading directive');\n    }\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\n    if (!this._loadingRef) {\n      this._loadingRef = this._loadingService.createComponent(\n        {\n          name: this._name,\n          type: this._type,\n          mode: this._mode,\n          color: this.color,\n          strategy: this._strategy,\n        },\n        this._viewContainerRef,\n        this._templateRef,\n        this._context,\n      );\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\nimport { TdLoadingDirective } from './directives/loading.directive';\nimport { TdLoadingComponent } from './loading.component';\n\nconst TD_LOADING: Type<any>[] = [TdLoadingComponent, TdLoadingDirective];\n\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [TdLoadingComponent];\n\n@NgModule({\n  imports: [CommonModule, MatProgressBarModule, MatProgressSpinnerModule, OverlayModule, PortalModule],\n  declarations: [TD_LOADING],\n  exports: [TD_LOADING],\n  providers: [LOADING_FACTORY_PROVIDER, LOADING_PROVIDER],\n  entryComponents: [TD_LOADING_ENTRY_COMPONENTS],\n})\nexport class CovalentLoadingModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TdMediaService {\n  private _resizing: boolean = false;\n  private _globalSubscription: Subscription;\n  private _queryMap: Map<string, string> = new Map<string, string>();\n  private _querySources: { [key: string]: BehaviorSubject<boolean> } = {};\n  private _queryObservables: { [key: string]: Observable<boolean> } = {};\n\n  constructor(private _ngZone: NgZone) {\n    this._queryMap.set('xs', '(max-width: 599px)');\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\n    this._queryMap.set('xl', '(min-width: 1920px)');\n    this._queryMap.set('landscape', '(orientation: landscape)');\n    this._queryMap.set('portrait', '(orientation: portrait)');\n    this._queryMap.set('print', 'print');\n\n    this._resizing = false;\n    // we make sure that the resize checking happend outside of Angular since it happens often\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window, 'resize').subscribe(() => {\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\n        if (!this._resizing) {\n          this._resizing = true;\n          setTimeout(() => {\n            this._onResize();\n            this._resizing = false;\n          }, 100);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deregisters a query so its stops being notified or used.\n   */\n  deregisterQuery(query: string): void {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    this._querySources[query].unsubscribe();\n    delete this._querySources[query];\n    delete this._queryObservables[query];\n  }\n\n  /**\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\n   */\n  public query(query: string): boolean {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    return this._ngZone.run(() => {\n      return matchMedia(query).matches;\n    });\n  }\n\n  /**\n   * Registers a media query and returns an [Observable] that will re-evaluate and\n   * return if the given media query matches on window resize.\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\n   */\n  public registerQuery(query: string): Observable<boolean> {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    if (!this._querySources[query]) {\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\n      this._queryObservables[query] = this._querySources[query].asObservable();\n    }\n    return this._queryObservables[query];\n  }\n\n  /**\n   * Trigger a match media event on all subscribed observables.\n   */\n  public broadcast(): void {\n    this._onResize();\n  }\n\n  private _onResize(): void {\n    for (let query in this._querySources) {\n      this._ngZone.run(() => {\n        this._matchMediaTrigger(query);\n      });\n    }\n  }\n\n  private _matchMediaTrigger(query: string): void {\n    this._querySources[query].next(matchMedia(query).matches);\n  }\n}\n","import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: { [key: string]: string } = {};\n  private _styles: { [key: string]: string } = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) {}\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (let attr in this._attributes) {\n      if (this._matches) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\n      }\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      if (this._matches) {\n        this._renderer.addClass(this._elementRef.nativeElement, className);\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\n      }\n    });\n  }\n\n  private _changeStyles(): void {\n    for (let style in this._styles) {\n      if (this._matches) {\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\n      } else {\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\n      }\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { TdMediaToggleDirective } from './directives/media-toggle.directive';\n\nconst TD_MEDIA: Type<any>[] = [TdMediaToggleDirective];\n\n@NgModule({\n  declarations: [TD_MEDIA],\n  exports: [TD_MEDIA],\n})\nexport class CovalentMediaModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class TdMenuComponent {}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdMenuComponent } from './menu.component';\n\nconst TD_MENU: Type<any>[] = [TdMenuComponent];\n\n@NgModule({\n  imports: [CommonModule, MatMenuModule, MatDividerModule],\n  declarations: [TD_MENU],\n  exports: [TD_MENU],\n})\nexport class CovalentMenuModule {}\n","import {\n  Component,\n  ViewChild,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  Optional,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Dir } from '@angular/cdk/bidi';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\n\nimport { debounceTime, skip } from 'rxjs/operators';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchInputMixinBase = mixinControlValueAccessor(TdSearchInputBase);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdSearchInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('searchState', [\n      state(\n        'hide-left',\n        style({\n          transform: 'translateX(-150%)',\n          display: 'none',\n        }),\n      ),\n      state(\n        'hide-right',\n        style({\n          transform: 'translateX(150%)',\n          display: 'none',\n        }),\n      ),\n      state(\n        'show',\n        style({\n          transform: 'translateX(0%)',\n          display: 'block',\n        }),\n      ),\n      transition('* => show', animate('200ms ease-in')),\n      transition('show => *', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchInputComponent extends _TdSearchInputMixinBase implements IControlValueAccessor, OnInit {\n  @ViewChild(MatInput, { static: true }) _input: MatInput;\n\n  /**\n   * appearance?: MatFormFieldAppearance\n   * Appearance style for the underlying input component.\n   */\n  @Input('appearance') appearance: MatFormFieldAppearance;\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._input.ngControl.valueChanges\n      .pipe(\n        debounceTime(this.debounce),\n        skip(1), // skip first change when value is set to undefined\n      )\n      .subscribe((value: string) => {\n        this._searchTermChanged(value);\n      });\n  }\n\n  /**\n   * Method to focus to underlying input.\n   */\n  focus(): void {\n    this._input.focus();\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n\n  stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  handleSearch(event: Event): void {\n    this.stopPropagation(event);\n    this.onSearch.emit(this.value);\n  }\n\n  /**\n   * Method to clear the underlying input.\n   */\n  clearSearch(): void {\n    this.value = '';\n    this._changeDetectorRef.markForCheck();\n    this.onClear.emit(undefined);\n  }\n\n  private _searchTermChanged(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';\n\nimport { TdSearchInputComponent } from '../search-input/search-input.component';\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchBoxBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdSearchBoxComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('inputState', [\n      state(\n        '0',\n        style({\n          width: '0%',\n          margin: '0px',\n        }),\n      ),\n      state(\n        '1',\n        style({\n          width: '100%',\n          margin: AUTO_STYLE,\n        }),\n      ),\n      transition('0 => 1', animate('200ms ease-in')),\n      transition('1 => 0', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {\n  private _searchVisible: boolean = false;\n  @ViewChild(TdSearchInputComponent, { static: true }) _searchInput: TdSearchInputComponent;\n\n  get searchVisible(): boolean {\n    return this._searchVisible;\n  }\n\n  /**\n   * backIcon?: string\n   * The icon used to close the search toggle, only shown when [alwaysVisible] is false.\n   * Defaults to 'search' icon.\n   */\n  @Input('backIcon') backIcon: string = 'search';\n\n  /**\n   * searchIcon?: string\n   * The icon used to open/focus the search toggle.\n   * Defaults to 'search' icon.\n   */\n  @Input('searchIcon') searchIcon: string = 'search';\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * alwaysVisible?: boolean\n   * Sets if the input should always be visible. Defaults to 'false'.\n   */\n  @Input('alwaysVisible') alwaysVisible: boolean = false;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when the search icon is clicked.\n   */\n  searchClicked(): void {\n    if (!this.alwaysVisible && this._searchVisible) {\n      this.value = '';\n      this.handleClear();\n    } else if (this.alwaysVisible || !this._searchVisible) {\n      this._searchInput.focus();\n    }\n    this.toggleVisibility();\n  }\n\n  toggleVisibility(): void {\n    this._searchVisible = !this._searchVisible;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  handleSearchDebounce(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n  handleSearch(value: string): void {\n    this.onSearch.emit(value);\n  }\n\n  handleClear(): void {\n    this.onClear.emit(undefined);\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdSearchInputComponent } from './search-input/search-input.component';\nimport { TdSearchBoxComponent } from './search-box/search-box.component';\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatInputModule, MatIconModule, MatButtonModule],\n  declarations: [TdSearchInputComponent, TdSearchBoxComponent],\n  exports: [TdSearchInputComponent, TdSearchBoxComponent],\n})\nexport class CovalentSearchModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  separatorIcon: string = 'chevron_right';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input('separatorIcon') separatorIcon: string = 'chevron_right';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(debounceTime(10)),\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private _calculateVisibility(): void {\n    let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    let hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      let breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if (crumbWidthSum + breadcrumb.width > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n  exports: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n})\nexport class CovalentBreadcrumbsModule {}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ContentChild,\n  OnInit,\n} from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective, TemplatePortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nexport enum StepState {\n  None = 'none',\n  Required = 'required',\n  Complete = 'complete',\n}\n\n@Directive({\n  selector: '[td-step-label]ng-template',\n})\nexport class TdStepLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-actions]ng-template',\n})\nexport class TdStepActionsDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-summary]ng-template',\n})\nexport class TdStepSummaryDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdStepBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepMixinBase = mixinDisableRipple(mixinDisabled(TdStepBase));\n\n@Component({\n  selector: 'td-step',\n  inputs: ['disabled', 'disableRipple'],\n  templateUrl: './step.component.html',\n})\nexport class TdStepComponent extends _TdStepMixinBase implements OnInit, ICanDisable, ICanDisableRipple {\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  private _contentPortal: TemplatePortal<any>;\n  get stepContent(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef, { static: true }) _content: TemplateRef<any>;\n  @ContentChild(TdStepLabelDirective, { static: false }) stepLabel: TdStepLabelDirective;\n  @ContentChild(TdStepActionsDirective, { static: false }) stepActions: TdStepActionsDirective;\n  @ContentChild(TdStepSummaryDirective, { static: false }) stepSummary: TdStepSummaryDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdStepComponent] header.\n   * Defaults to 'Step #'\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdStepComponent] header.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles [TdStepComponent] between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._setActive(coerceBooleanProperty(active));\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of [TdStepComponent] depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * activated?: function\n   * Event emitted when [TdStepComponent] is activated.\n   */\n  @Output('activated') onActivated: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * deactivated?: function\n   * Event emitted when [TdStepComponent] is deactivated.\n   */\n  @Output('deactivated') onDeactivated: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n  /**\n   * Toggle active state of [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setActive(!this._active);\n  }\n\n  /**\n   * Opens [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setActive(true);\n  }\n\n  /**\n   * Closes [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setActive(false);\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this._state === StepState.Complete;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._active) {\n      this._active = false;\n      this._onDeactivated();\n    }\n  }\n\n  /**\n   * Method to change active state internally and emit the [onActivated] event if 'true' or [onDeactivated]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   * returns true if successfully changed state\n   */\n  private _setActive(newActive: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._active !== newActive) {\n      this._active = newActive;\n      if (newActive) {\n        this._onActivated();\n      } else {\n        this._onDeactivated();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onActivated(): void {\n    this.onActivated.emit(undefined);\n  }\n\n  private _onDeactivated(): void {\n    this.onDeactivated.emit(undefined);\n  }\n}\n","import { Component, Input, Output } from '@angular/core';\nimport { OnDestroy, AfterContentInit } from '@angular/core';\nimport { EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdStepComponent } from './step.component';\n\nexport interface IStepChangeEvent {\n  newStep: TdStepComponent;\n  prevStep: TdStepComponent;\n}\n\nexport enum StepMode {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\n@Component({\n  selector: 'td-steps',\n  styleUrls: ['./steps.component.scss'],\n  templateUrl: './steps.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps',\n  },\n})\nexport class TdStepsComponent implements OnDestroy, AfterContentInit {\n  private _subcriptions: Subscription[];\n  private _mode: StepMode = StepMode.Vertical;\n  private _steps: QueryList<TdStepComponent>;\n\n  @ContentChildren(TdStepComponent)\n  set stepsContent(steps: QueryList<TdStepComponent>) {\n    if (steps) {\n      this._steps = steps;\n      this._registerSteps();\n    }\n  }\n\n  get steps(): TdStepComponent[] {\n    return this._steps.toArray();\n  }\n  prevStep: TdStepComponent;\n\n  /**\n   * mode?: StepMode or [\"vertical\" | \"horizontal\"]\n   * Defines if the mode of the [TdStepsComponent].  Defaults to [StepMode.Vertical | \"vertical\"]\n   */\n  @Input('mode')\n  set mode(mode: StepMode) {\n    switch (mode) {\n      case StepMode.Horizontal:\n        this._mode = StepMode.Horizontal;\n        break;\n      default:\n        this._mode = StepMode.Vertical;\n    }\n  }\n  get mode(): StepMode {\n    return this._mode;\n  }\n\n  /**\n   * stepChange?: function\n   * Method to be executed when [onStepChange] event is emitted.\n   * Emits an [IStepChangeEvent] implemented object.\n   */\n  @Output('stepChange') onStepChange: EventEmitter<IStepChangeEvent> = new EventEmitter<IStepChangeEvent>();\n\n  /**\n   * Executed after content is initialized, loops through any [TdStepComponent] children elements,\n   * assigns them a number and subscribes as an observer to their [onActivated] event.\n   */\n  ngAfterContentInit(): void {\n    this._registerSteps();\n  }\n\n  /**\n   * Unsubscribes from [TdStepComponent] children elements when component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._deregisterSteps();\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Horizontal | 'horizontal'], else 'false'.\n   */\n  isHorizontal(): boolean {\n    return this._mode === StepMode.Horizontal;\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Vertical | 'vertical'], else 'false'.\n   */\n  isVertical(): boolean {\n    return this._mode === StepMode.Vertical;\n  }\n\n  areStepsActive(): boolean {\n    return (\n      this._steps.filter((step: TdStepComponent) => {\n        return step.active;\n      }).length > 0\n    );\n  }\n\n  /**\n   * Wraps previous and new [TdStepComponent] numbers in an object that implements [IStepChangeEvent]\n   * and emits [onStepChange] event.\n   */\n  private _onStepSelection(step: TdStepComponent): void {\n    if (this.prevStep !== step) {\n      let prevStep: TdStepComponent = this.prevStep;\n      this.prevStep = step;\n      let event: IStepChangeEvent = {\n        newStep: step,\n        prevStep: prevStep,\n      };\n      this._deactivateAllBut(step);\n      this.onStepChange.emit(event);\n    }\n  }\n\n  /**\n   * Loops through [TdStepComponent] children elements and deactivates them ignoring the one passed as an argument.\n   */\n  private _deactivateAllBut(activeStep: TdStepComponent): void {\n    this._steps\n      .filter((step: TdStepComponent) => step !== activeStep)\n      .forEach((step: TdStepComponent) => {\n        step.active = false;\n      });\n  }\n\n  private _registerSteps(): void {\n    this._subcriptions = [];\n    this._steps.toArray().forEach((step: TdStepComponent) => {\n      let subscription: Subscription = step.onActivated.asObservable().subscribe(() => {\n        this._onStepSelection(step);\n      });\n      this._subcriptions.push(subscription);\n    });\n  }\n\n  private _deregisterSteps(): void {\n    if (this._subcriptions) {\n      this._subcriptions.forEach((subs: Subscription) => {\n        subs.unsubscribe();\n      });\n      this._subcriptions = undefined;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nimport { StepState } from '../step.component';\n\nexport class TdStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdStepHeaderBase));\n\n@Component({\n  selector: 'td-step-header',\n  inputs: ['disabled', 'disableRipple'],\n  styleUrls: ['./step-header.component.scss'],\n  templateUrl: './step-header.component.html',\n})\nexport class TdStepHeaderComponent extends _TdStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n  /**\n   * Number assigned to [TdStepHeaderComponent].\n   */\n  @Input('number') number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * tabIndex?: number\n   * tabIndex of the step header for a11y\n   */\n  @Input('tabIndex') tabIndex: number;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\nimport { StepState } from '../step.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  selector: 'td-step-body',\n  styleUrls: ['./step-body.component.scss'],\n  templateUrl: './step-body.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdStepBodyComponent {\n  @ViewChild('contentRef', { read: ElementRef, static: true }) contentRef: ElementRef;\n\n  get hasContent(): boolean {\n    return (\n      this.contentRef &&\n      (this.contentRef.nativeElement.children.length > 0 || !!this.contentRef.nativeElement.textContent.trim())\n    );\n  }\n\n  @ViewChild('actionsRef', { read: ElementRef, static: true }) actionsRef: ElementRef;\n\n  get hasActions(): boolean {\n    return (\n      this.actionsRef &&\n      (this.actionsRef.nativeElement.children.length > 0 || !!this.actionsRef.nativeElement.textContent.trim())\n    );\n  }\n\n  @ViewChild('summaryRef', { read: ElementRef, static: true }) summaryRef: ElementRef;\n\n  get hasSummary(): boolean {\n    return (\n      this.summaryRef &&\n      (this.summaryRef.nativeElement.children.length > 0 || !!this.summaryRef.nativeElement.textContent.trim())\n    );\n  }\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on body.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of body.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n}\n","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, ElementRef } from '@angular/core';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, ICanDisableRipple } from '@covalent/core/common';\nimport { _TdStepMixinBase, StepState } from '../../step.component';\n\n@Component({\n  selector: '[td-step-link],[tdStepLink]',\n  styleUrls: ['./nav-step-link.component.scss'],\n  templateUrl: './nav-step-link.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    '[class.td-step-link]': 'true',\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[class.mat-disabled]': 'disabled || null',\n    '(click)': '_handleClick($event)',\n  },\n})\nexport class TdNavStepLinkComponent extends _TdStepMixinBase implements ICanDisable, ICanDisableRipple {\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  // Number to display in step header\n  number: number;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of component depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * label?: string\n   * Label to display in step header\n   * Defaults to empty\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sublabel to display in step header\n   * Defaults to empty\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles component between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._active = coerceBooleanProperty(active);\n    this._changeDetectorRef.markForCheck();\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * tabIndex?: number\n   * tabIndex for component\n   */\n  @Input('tabIndex') tabIndex: number;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, public elementRef: ElementRef) {\n    super();\n  }\n\n  _handleClick(click: Event): void {\n    if (this.disabled) {\n      click.preventDefault();\n      click.stopImmediatePropagation();\n    }\n  }\n}\n","import {\n  Component,\n  Optional,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  AfterContentChecked,\n  ChangeDetectorRef,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\n\nimport { Subject, merge, of } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][horizontal]',\n  styleUrls: ['./nav-steps-horizontal.component.scss'],\n  templateUrl: './nav-steps-horizontal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-horizontal',\n    '[class.td-step-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.td-step-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class TdNavStepsHorizontalComponent implements AfterContentChecked, AfterContentInit, OnDestroy {\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  private _widthSubject: Subject<number> = new Subject<number>();\n\n  private _scrollDistance: number = 0;\n  private _scrollDistanceChanged: boolean = false;\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls: boolean = false;\n\n  /** Whether the step list can be scrolled more towards the end. */\n  _disableScrollAfter: boolean = true;\n\n  /** Whether the step list can be scrolled more towards the beginning. */\n  _disableScrollBefore: boolean = true;\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepListContainer', { static: true }) _stepListContainer: ElementRef;\n  @ViewChild('stepList', { static: true }) _stepList: ElementRef;\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewportRuler: ViewportRuler,\n    @Optional() private _dir: Directionality,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterContentInit(): void {\n    merge(\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n      this._viewportRuler.change(150),\n      this._dir ? this._dir.change : of(undefined),\n      this._steps.changes,\n    )\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._configureSteps();\n        this.updatePagination();\n        this._changeDetectorRef.markForCheck();\n      });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentChecked(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n    if (this._scrollDistanceChanged) {\n      this._updateStepScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Listen to right and left key events to move the the viewport.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._scrollHeader('before');\n        event.preventDefault();\n        break;\n      case RIGHT_ARROW:\n        this._scrollHeader('after');\n        event.preventDefault();\n        break;\n      default:\n      // do something\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   */\n  updatePagination(): void {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateStepScrollPosition();\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the step list that will cause the list to scroll. */\n  _updateStepScrollPosition(): void {\n    const translateX: number = this._getLayoutDirection() === 'ltr' ? -this.scrollDistance : this.scrollDistance;\n    // Move step list the amount of pixels scrolled\n    this._stepList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off.\n    if (this._getLayoutDirection() === 'ltr') {\n      this._stepListContainer.nativeElement.scrollLeft = 0;\n    } else {\n      this._stepListContainer.nativeElement.scrollLeft = this._getMaxScrollDistance();\n    }\n  }\n\n  /** Sets the distance in pixels that the step header should be transformed in the X-axis. */\n  get scrollDistance(): number {\n    return this._scrollDistance;\n  }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the step list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively).\n   */\n  _scrollHeader(scrollDir: ScrollDirection): void {\n    // Move the scroll distance one-half the length of the step list's viewport.\n    this.scrollDistance += ((scrollDir === 'before' ? -1 : 1) * this._stepListContainer.nativeElement.offsetWidth) / 2;\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * step list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   */\n  _checkPaginationEnabled(): void {\n    const isEnabled: boolean = this._stepList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   */\n  _checkScrollingControls(): void {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance === 0;\n    this._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the step list container and step header container.\n   */\n  _getMaxScrollDistance(): number {\n    return this._stepList.nativeElement.scrollWidth - this._stepListContainer.nativeElement.offsetWidth || 0;\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    let stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        let separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-horizontal-line');\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ElementRef,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][vertical]',\n  styleUrls: ['./nav-steps-vertical.component.scss'],\n  templateUrl: './nav-steps-vertical.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-vertical',\n  },\n})\nexport class TdNavStepsVerticalComponent implements AfterContentInit, OnDestroy {\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepList', { static: true }) _stepList: ElementRef;\n\n  constructor(private _renderer: Renderer2, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._configureSteps();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    let stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        let separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-vertical-line-wrapper');\n        let separatorChild: any = this._renderer.createElement('div');\n        this._renderer.addClass(separatorChild, 'td-vertical-line');\n        this._renderer.appendChild(separator, separatorChild);\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\n\n// Steps\nimport { TdStepsComponent } from './steps.component';\nimport { TdStepHeaderComponent } from './step-header/step-header.component';\nimport { TdStepBodyComponent } from './step-body/step-body.component';\nimport {\n  TdStepComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n} from './step.component';\n\n// Nav Steps\nimport { TdNavStepsHorizontalComponent } from './nav/nav-steps-horizontal/nav-steps-horizontal.component';\nimport { TdNavStepsVerticalComponent } from './nav/nav-steps-vertical/nav-steps-vertical.component';\nimport { TdNavStepLinkComponent } from './nav/nav-step-link/nav-step-link.component';\n\nconst TD_STEPS: Type<any>[] = [\n  TdStepsComponent,\n  TdStepComponent,\n  TdStepHeaderComponent,\n  TdStepBodyComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n  TdNavStepsHorizontalComponent,\n  TdNavStepsVerticalComponent,\n  TdNavStepLinkComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, PortalModule, ScrollDispatchModule, CovalentCommonModule],\n  declarations: [TD_STEPS],\n  exports: [TD_STEPS],\n})\nexport class CovalentStepsModule {}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { mixinDisabled, ICanDisable } from '@covalent/core/common';\n\nexport class TdTabOptionBase {\n  constructor(public _viewContainerRef: ViewContainerRef, public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabOptionMixinBase = mixinDisabled(TdTabOptionBase);\n\n@Component({\n  selector: 'td-tab-option',\n  templateUrl: './tab-option.component.html',\n  styleUrls: ['./tab-option.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  inputs: ['disabled'],\n})\nexport class TdTabOptionComponent extends _TdTabOptionMixinBase implements ICanDisable, OnInit {\n  private _contentPortal: TemplatePortal<any>;\n  get content(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef, { static: true }) _content: TemplateRef<any>;\n\n  /**\n   * Value to which the option will be binded to.\n   */\n  @Input('value') value: any;\n\n  constructor(_viewContainerRef: ViewContainerRef, _changeDetectorRef: ChangeDetectorRef) {\n    super(_viewContainerRef, _changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  AfterContentInit,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  ICanDisable,\n  mixinDisabled,\n  IControlValueAccessor,\n  mixinControlValueAccessor,\n  ICanDisableRipple,\n  mixinDisableRipple,\n} from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdTabOptionComponent } from './tab-option.component';\n\nexport class TdTabSelectBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabSelectMixinBase = mixinControlValueAccessor(mixinDisabled(mixinDisableRipple(TdTabSelectBase)));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdTabSelectComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-tab-select',\n  templateUrl: './tab-select.component.html',\n  styleUrls: ['./tab-select.component.scss'],\n  /* tslint:disable-next-line */\n  inputs: ['value', 'disabled', 'disableRipple'],\n})\nexport class TdTabSelectComponent extends _TdTabSelectMixinBase\n  implements IControlValueAccessor, ICanDisable, ICanDisableRipple, OnInit, AfterContentInit, OnDestroy {\n  private _subs: Subscription[] = [];\n\n  private _values: any[] = [];\n  private _selectedIndex: number = 0;\n  private _stretchTabs: boolean = false;\n\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Gets all tab option children\n   */\n  @ContentChildren(TdTabOptionComponent) readonly _tabOptions: QueryList<TdTabOptionComponent>;\n\n  get tabOptions(): TdTabOptionComponent[] {\n    return this._tabOptions ? this._tabOptions.toArray() : undefined;\n  }\n\n  /**\n   * Makes the tabs stretch to fit the parent container.\n   */\n  @Input('stretchTabs')\n  set stretchTabs(stretchTabs: boolean) {\n    this._stretchTabs = coerceBooleanProperty(stretchTabs);\n  }\n  get stretchTabs(): boolean {\n    return this._stretchTabs;\n  }\n\n  /**\n   * Color of the tab group.\n   */\n  @Input('color') color: ThemePalette;\n\n  /**\n   * Background color of the tab group.\n   */\n  @Input('backgroundColor') backgroundColor: ThemePalette;\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // subscribe to check if value changes and update the selectedIndex internally.\n    this._subs.push(\n      this.valueChanges.subscribe((value: any) => {\n        this._setValue(value);\n      }),\n    );\n  }\n\n  ngAfterContentInit(): void {\n    // subscribe to listen to any tab changes.\n    this._refreshValues();\n    this._subs.push(\n      this._tabOptions.changes.subscribe(() => {\n        this._refreshValues();\n      }),\n    );\n    // initialize value\n    Promise.resolve().then(() => {\n      this._setValue(this.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs && this._subs.length) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * Method executed when user selects a different tab\n   * This updates the new selectedIndex and infers what value should be mapped to.\n   */\n  selectedIndexChange(selectedIndex: number): void {\n    this._selectedIndex = selectedIndex;\n    let value: any = this._values[selectedIndex];\n    this.value = value;\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  /**\n   * Refresh the values array whenever the number of tabs gets updated\n   */\n  private _refreshValues(): void {\n    this._values = this.tabOptions.map((tabOption: TdTabOptionComponent) => {\n      return tabOption.value;\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Try to set value depending if its part of our options\n   * else set the value of the first tab.\n   */\n  private _setValue(value: any): void {\n    let index: number = this._values.indexOf(value);\n    if (index > -1) {\n      this._selectedIndex = index;\n    } else {\n      this.value = this._values.length ? this._values[0] : undefined;\n      this._selectedIndex = 0;\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TdTabSelectComponent } from './tab-select.component';\nimport { TdTabOptionComponent } from './tab-option.component';\n\n@NgModule({\n  declarations: [TdTabSelectComponent, TdTabOptionComponent], // directives, components, and pipes owned by this NgModule\n  imports: [\n    /** Angular Modules */\n    CommonModule,\n    FormsModule,\n    /** Material Modules */\n    PortalModule,\n    MatTabsModule,\n  ], // modules needed to run this module\n  exports: [TdTabSelectComponent, TdTabOptionComponent],\n})\nexport class CovalentTabSelectModule {}\n","/**\n * Utility function to facilitate assigning a text value\n * to the system clipboard.\n * Note: The copy will succeed only if this method is performed\n * as a result of a user action (eg. user clicks a button in\n * the UI). Due to browser security restrictions, this method\n * will not succeed if executed strictly programmatically.\n *\n * @param value text value to be assigned to clipboard.\n * @returns boolean indicating success/failure of copy operation.\n */\nexport function copyToClipboard(value: string): boolean {\n  // Create a temporary textarea element and append to DOM\n  const fakeTextArea: HTMLTextAreaElement = document.createElement('textarea');\n  document.body.appendChild(fakeTextArea);\n\n  // Assign value to be copied to clipboard\n  fakeTextArea.value = value;\n  fakeTextArea.select();\n\n  // Copy to clipboard\n  const success: boolean = document.execCommand('copy');\n\n  // Remove temporary textarea\n  document.body.removeChild(fakeTextArea);\n\n  // Return boolean indicating if exec command succeeded\n  return success;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisableRipple {\n  disableRipple: boolean;\n  onDisableRippleChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disableRipple(): boolean {\n      return this._disableRipple;\n    }\n    set disableRipple(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disableRipple !== newValue) {\n        this._disableRipple = newValue;\n        this.onDisableRippleChange(this._disableRipple);\n      }\n    }\n\n    onDisableRippleChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisable {\n  disabled: boolean;\n  onDisabledChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disabled(): boolean {\n      return this._disabled;\n    }\n    set disabled(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.onDisabledChange(this._disabled);\n      }\n    }\n\n    onDisabledChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n"]}