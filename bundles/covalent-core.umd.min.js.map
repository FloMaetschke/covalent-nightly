{"version":3,"sources":["ng://@covalent/core/paging/paging-bar.component.ts","ng://@covalent/core/paging/paging.module.ts","node_modules/tslib/tslib.es6.js","ng://@covalent/core/virtual-scroll/virtual-scroll-row.directive.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-container.component.ts","ng://@covalent/core/virtual-scroll/virtual-scroll.module.ts","ng://@covalent/core/notifications/notification-count.component.ts","ng://@covalent/core/notifications/notifications.module.ts","ng://@covalent/core/common/forms/auto-trim/auto-trim.directive.ts","ng://@covalent/core/common/pipes/time-ago/time-ago.pipe.ts","ng://@covalent/core/common/pipes/time-difference/time-difference.pipe.ts","ng://@covalent/core/common/pipes/time-until/time-until.pipe.ts","ng://@covalent/core/common/pipes/bytes/bytes.pipe.ts","ng://@covalent/core/common/pipes/decimal-bytes/decimal-bytes.pipe.ts","ng://@covalent/core/common/pipes/digits/digits.pipe.ts","ng://@covalent/core/common/pipes/truncate/truncate.pipe.ts","ng://@covalent/core/common/services/router-path.service.ts","ng://@covalent/core/common/services/icon.service.ts","ng://@covalent/core/common/common.module.ts","ng://@covalent/core/common/behaviors/control-value-accesor.mixin.ts","ng://@covalent/core/common/animations/rotate/rotate.animation.ts","ng://@covalent/core/common/animations/collapse/collapse.animation.ts","ng://@covalent/core/common/animations/fade/fadeInOut.animation.ts","ng://@covalent/core/common/animations/bounce/bounce.animation.ts","ng://@covalent/core/common/animations/flash/flash.animation.ts","ng://@covalent/core/common/animations/headshake/headshake.animation.ts","ng://@covalent/core/common/animations/jello/jello.animation.ts","ng://@covalent/core/common/animations/pulse/pulse.animation.ts","ng://@covalent/core/common/forms/validators/validators.ts","ng://@covalent/core/message/message.component.ts","ng://@covalent/core/message/message.module.ts","ng://@covalent/core/chips/chips.component.ts","ng://@covalent/core/chips/chips.module.ts","ng://@covalent/core/data-table/data-table-row/data-table-row.component.ts","ng://@covalent/core/data-table/directives/data-table-template.directive.ts","ng://@covalent/core/data-table/data-table.component.ts","ng://@covalent/core/data-table/data-table-column/data-table-column.component.ts","ng://@covalent/core/data-table/data-table-cell/data-table-cell.component.ts","ng://@covalent/core/data-table/data-table-table/data-table-table.component.ts","ng://@covalent/core/data-table/services/data-table.service.ts","ng://@covalent/core/data-table/data-table.module.ts","ng://@covalent/core/dialogs/dialog.component.ts","ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts","ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts","ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts","ng://@covalent/core/dialogs/services/dialog.service.ts","ng://@covalent/core/dialogs/dialogs.module.ts","ng://@covalent/core/expansion-panel/expansion-panel.component.ts","ng://@covalent/core/expansion-panel/expansion-panel-group.component.ts","ng://@covalent/core/expansion-panel/expansion-panel.module.ts","ng://@covalent/core/file/directives/file-select.directive.ts","ng://@covalent/core/file/directives/file-drop.directive.ts","ng://@covalent/core/file/file-input/file-input.component.ts","ng://@covalent/core/file/file-upload/file-upload.component.ts","ng://@covalent/core/file/services/file.service.ts","ng://@covalent/core/file/file.module.ts","ng://@covalent/core/json-formatter/json-formatter.component.ts","ng://@covalent/core/json-formatter/json-formatter.module.ts","ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts","ng://@covalent/core/loading/loading.component.ts","ng://@covalent/core/loading/services/loading.factory.ts","ng://@covalent/core/loading/services/loading.service.ts","ng://@covalent/core/loading/directives/loading.directive.ts","ng://@covalent/core/loading/loading.module.ts","ng://@covalent/core/media/services/media.service.ts","ng://@covalent/core/media/directives/media-toggle.directive.ts","ng://@covalent/core/media/media.module.ts","ng://@covalent/core/menu/menu.component.ts","ng://@covalent/core/menu/menu.module.ts","ng://@covalent/core/search/search-input/search-input.component.ts","ng://@covalent/core/search/search-box/search-box.component.ts","ng://@covalent/core/search/search.module.ts","ng://@covalent/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.module.ts","ng://@covalent/core/steps/step.component.ts","ng://@covalent/core/steps/steps.component.ts","ng://@covalent/core/steps/step-header/step-header.component.ts","ng://@covalent/core/steps/step-body/step-body.component.ts","ng://@covalent/core/steps/nav/nav-step-link/nav-step-link.component.ts","ng://@covalent/core/steps/nav/nav-steps-horizontal/nav-steps-horizontal.component.ts","ng://@covalent/core/steps/nav/nav-steps-vertical/nav-steps-vertical.component.ts","ng://@covalent/core/steps/steps.module.ts","ng://@covalent/core/tab-select/tab-option.component.ts","ng://@covalent/core/tab-select/tab-select.component.ts","ng://@covalent/core/tab-select/tab-select.module.ts","ng://@covalent/core/common/behaviors/disabled.mixin.ts","ng://@covalent/core/common/behaviors/disable-ripple.mixin.ts"],"names":["TdPagingBarComponent","Object","defineProperty","prototype","this","_pageLinkCount","pageLinkCount","coerceNumberProperty","_calculatePageLinks","_changeDetectorRef","markForCheck","_pageSize","pageSize","_page","_initialized","_handleOnChange","_total","total","_calculateRows","_pageLinks","_toRow","_fromRow","Math","ceil","_dir","dir","ngOnInit","initialPage","navigateToPage","page","maxPage","floor","firstPage","prevPage","nextPage","lastPage","isMinPage","isMaxPage","top","_hitEnd","_hitStart","actualPageLinkCount","middlePageLinks","x","event","fromRow","toRow","onChange","emit","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","Dir","decorators","type","Optional","ChangeDetectorRef","Input","Output","firstLast","EventEmitter","CovalentPagingModule","NgModule","imports","CommonModule","MatIconModule","MatButtonModule","declarations","exports","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","tslib_1.__extends","TemplatePortalDirective","Directive","TemplateRef","ViewContainerRef","TdVirtualScrollRowDirective","templateRef","viewContainerRef","_super","TdVirtualScrollContainerComponent","_data","data","_calculateVirtualRows","_virtualData","_rows","toArray","nativeElement","getBoundingClientRect","height","_totalHeight","_offsetTransform","ngAfterViewInit","_this","_subs","changes","subscribe","_bottom","pipe","debounceTime","bottom","lastRow","lastIndex","ngAfterViewChecked","newHostHeight","_elementRef","_hostHeight","ngOnDestroy","forEach","sub","unsubscribe","handleScroll","element","verticalScroll","scrollTop","_scrollVerticalOffset","rowHeight","refresh","scrollTo","row","scrollToStart","scrollToEnd","totalHeight","isFinite","offset","_domSanitizer","bypassSecurityTrustStyle","slice","Promise","resolve","then","ElementRef","DomSanitizer","Renderer2","ViewChildren","ContentChild","HostListener","_renderer","Subject","trackBy","index","item","TD_VIRTUAL_SCROLL","CovalentVirtualScrollModule","Top","Bottom","Center","Before","After","TdNotificationCountComponent","_positionX","positionX","_positionY","positionY","notifications","_notifications","limit","_limit","show","_hasContent","toString","isNaN","ngAfterContentInit","TdNotificationCountPositionX","TdNotificationCountPositionY","content","contentElement","children","textContent","trim","ViewChild","HostBinding","color","TD_NOTIFICATIONS","CovalentNotificationsModule","TdAutoTrimDirective","onBlur","_model","update","NgModel","Host","TdTimeAgoPipe","transform","time","reference","Date","ref","getTime","startTime","now","diff","Pipe","name","TdTimeDifferencePipe","start","end","endTime","undefined","days","hours","minutes","seconds","pad","daysFormatted","substring","TdTimeUntilPipe","TdBytesPipe","bytes","precision","parseInt","log","parseFloat","pow","toFixed","TdDecimalBytesPipe","TdDigitsPipe","digits","_decimalPipe","size","Inject","LOCALE_ID","_locale","DecimalPipe","TdTruncatePipe","text","truncated","substr","lastIndexOf","RouterPathService","getPreviousRoute","_previousRoute","Injectable","Router","_router","events","filter","RoutesRecognized","pairwise","urlAfterRedirects","IconService","_icons","query","icons","el","toLowerCase","indexOf","TD_FORMS","TD_VALIDATORS","TD_PIPES","FormsModule","providers","CovalentCommonModule","noop","tdRotateAnimation","trigger","state","style","params","degressStart","degreesEnd","transition","group","animateChild","optional","animate","duration","delay","ease","tdCollapseAnimation","overflow","AUTO_STYLE","tdFadeInOutAnimation","opacity","visibility","easeOnIn","easeOnOut","tdBounceAnimation","keyframes","animationTimingFunction","tdFlashAnimation","tdHeadshakeAnimation","tdJelloAnimation","tdPulseAnimation","CovalentValidators","min","minValue","c","Validators","required","v","actualValue","max","maxValue","numberRequired","Number","TdMessageContainerDirective","viewContainer","TdMessageComponent","_opened","_hidden","_color","removeClass","addClass","opened","open","close","animationDoneListener","_detach","_animating","_attach","_startAnimationState","toggle","_childElement","createEmbeddedView","_template","clear","animations","icon","TD_MESSAGE","CovalentMessageModule","TdChipDirective","TdAutocompleteOptionDirective","_TdChipsMixinBase","mixinControlValueAccessor","mixinDisabled","TdChipsBase","TdChipsComponent","_focused","_items","items","_setFirstOptionActive","_stacked","stacked","coerceBooleanProperty","_inputPosition","inputPosition","_requireMatch","requireMatch","_required","_chipAddition","chipAddition","_toggleInput","disabled","_chipRemoval","chipRemoval","canAddChip","placeholder","_tabIndex","focusListener","_isMousedown","focus","preventDefault","mousedownListener","timer","toPromise","clickListener","clickTarget","className","stopPropagation","keydownListener","keyCode","TAB","removeFocusedState","ESCAPE","_inputChild","focused","_nativeInput","blur","_closeAutocomplete","_inputValueChangesSubs","inputControl","valueChanges","debounce","onInputChange","_watchOutsideClick","ngDoCheck","_length","_outsideClickSubs","_setInternalClick","_internalClick","onDisabledChange","_handleAddChip","selectedOptions","_options","option","active","setInactiveStyles","_autocompleteTrigger","activeOption","addChip","setFocusedState","_openAutocomplete","setValue","findIndex","compareWith","onAdd","removeChip","removedValues","splice","_totalChips","_focusChip","onRemove","_handleChipBlur","onChipBlur","_handleChipFocus","onChipFocus","_handleFocus","_focusFirstChip","_inputKeydown","UP_ARROW","_internalActivateOption","LEFT_ARROW","DELETE","BACKSPACE","_focusLastChip","RIGHT_ARROW","_chipKeydown","canRemoveChip","DOWN_ARROW","_removeInputDisplay","panelOpen","openPanel","closePanel","_chipsChildren","enable","disable","setActiveStyles","_document","merge","fromEvent","_touchendDebounce","setTimeout","contains","onTouched","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","DOCUMENT","MatInput","MatAutocompleteTrigger","MatChip","MatOption","Subscription","EMPTY","FormControl","o1","o2","CovalentChipsModule","ReactiveFormsModule","MatInputModule","MatChipsModule","MatAutocompleteModule","TdDataTableColumnRowComponent","TdDataTableRowComponent","_selected","selected","TdDataTableTemplateDirective","TdDataTableBase","Ascending","Descending","_TdDataTableMixinBase","TdDataTableComponent","_resizingColumn","selectable","_hostWidth","_scrollHorizontalOffset","_allSelected","_indeterminate","_rowHeightCache","_scrollableDiv","_columns","hasData","keys","k","find","label","cols","_resizableColumns","resizableColumns","_selectable","_clickable","clickable","_multiple","multiple","_sortable","sortable","columnName","column","columns","Error","_sortBy","order","sortOrder","toUpperCase","_sortOrder","TdDataTableSortingOrder","_resizeSubs","_onResize","asObservable","_calculateWidths","_columnResizeSubs","_onColumnResize","clientX","_columnClientX","_horizontalScrollSubs","_onHorizontalScroll","horizontalScroll","_verticalScrollSubs","_onVerticalScroll","_valueChangesSubs","_templates","_templateMap","set","tdDataTableTemplate","ngAfterContentChecked","newHostWidth_1","width","_rowsChangedSubs","scrollLeft","getColumnWidth","_widths","getCellValue","nested","_getNestedValue","getTemplateRef","get","clearModel","_calculateCheckboxState","selectAll","checked","toggledRows","isRowSelected","modelRow","val","onSelectAll","rows","select","currentSelected","blockEvent","mouseEvent","shiftKey","_lastSelectedIndex","firstIndex","_firstSelectedIndex","_doSelection","rowSelected","_firstCheckboxValue","_shiftPreviouslyPressed","disableTextSelection","onselectstart","enableTextSelection","handleRowClick","srcElement","currentTarget","getAttribute","tagName","onRowClick","handleSort","onSortChange","_rowKeyup","ENTER","SPACE","_handleStartColumnDrag","_handleColumnDrag","xPosition","proposedManualWidth","_colElements","projectedWidth","_handleEndColumnDrag","splitName","split","rowIndex","wasSelected","onRowSelect","_b","__values","tslib_1.__values","_c","col","_adjustColumnWidth","_calculateWidth","_adjustColumnWidhts","fixedTotalWidth","flexibleWidths","hidden","recalculateHostWidth","hostWidth","newValue_1","adjustedNumber_1","colWidth","newFlexibleWidths","skipMinWidthProjection","widthOpts","renderedColumns","scrolledRows","rowHeightSum_1","hostHeight","ContentChildren","Map","model","TdDataTableColumnComponent","_columnContent","numeric","handleClick","isAscending","isDescending","read","TdDataTableCellComponent","_align","align","TdDataTableTableComponent","TdDataTableService","filterData","searchTerm","ignoreCase","excludedColumns","key","preItemValue","sortData","sortBy","from","sort","a","compA","compB","direction","pageData","DATA_TABLE_PROVIDER_FACTORY","parent","DATA_TABLE_PROVIDER","deps","SkipSelf","useFactory","TD_DATA_TABLE","CovalentDataTableModule","MatCheckboxModule","MatTooltipModule","MatPseudoCheckboxModule","TdDialogTitleDirective","TdDialogContentDirective","TdDialogActionsDirective","TdDialogComponent","dialogTitle","dialogContent","dialogActions","TdAlertDialogComponent","_dialogRef","MatDialogRef","closeButton","TdConfirmDialogComponent","cancel","accept","cancelButton","acceptButton","TdPromptDialogComponent","_input","handleInputFocus","TdDialogService","component","config","_dialogService","closeAll","openAlert","dialogConfig","_createConfig","dialogRef","alertDialogComponent","componentInstance","title","message","openConfirm","confirmDialogComponent","openPrompt","promptDialogComponent","MatDialogConfig","assign","MatDialog","TD_DIALOGS","TD_DIALOGS_ENTRY_COMPONENTS","CovalentDialogsModule","MatDialogModule","entryComponents","TdExpansionPanelHeaderDirective","TdExpansionPanelLabelDirective","TdExpansionPanelSublabelDirective","TdExpansionPanelSummaryComponent","_TdExpansionPanelMixinBase","mixinDisableRipple","TdExpansionPanelBase","TdExpansionPanelComponent","_expand","expand","_setExpand","clickEvent","_onCollapsed","newExpand","_onExpanded","expanded","collapsed","TdExpansionPanelGroupComponent","_multi","_lastOpenedPanels","_closeAllExcept","_destroyed","_stopWatchingPanels","openedPanels","expansionPanels","expansionPanel","numOpenedPanels","_attachListeners","takeUntil","openAll","indexOfPanel","panel","TD_EXPANSION_PANEL","CovalentExpansionPanelModule","MatRippleModule","PortalModule","TdFileSelectDirective","target","HTMLInputElement","files","onFileSelect","_TdFileDropMixinBase","TdFileDropBase","TdFileDropDirective","onDrop","dataTransfer","onFileDrop","_element","_stopEvent","onDragOver","transfer","dropEffect","_typeCheck","types","mozItemCount","onDragEnter","onDragLeave","TdFileInputLabelDirective","_TdFileInputMixinBase","TdFileInputBase","TdFileInputComponent","_inputElement","handleSelect","writeValue","onSelect","setProperty","inputElement","setDisabledState","isDisabled","_TdFileUploadMixinBase","TdFileUploadBase","TdFileUploadComponent","uploadPressed","onUpload","onCancel","fileInput","defaultColor","activeColor","cancelColor","TdFileService","_progressObservable","upload","options","Observable","subscriber","xhr","XMLHttpRequest","formData","FormData","file","append","onprogress","progress","lengthComputable","round","loaded","_progressSubject","onreadystatechange","readyState","status","response","complete","method","url","setRequestHeader","headers","send","TD_FILE","CovalentFileModule","TdJsonFormatterComponent","_levelsOpen","levelsOpen","isInteger","_open","elipsis","_key","KEY_MAX_LENGTH","parseChildren","_children","isObject","getType","isArray","hasChildren","getValue","replace","getObjectName","object","date","results","exec","getPreview","previewData","startChar","endChar","PREVIEW_LIMIT","map","obj","previewString","join","ellipsis","PREVIEW_STRING_MAX_LENGTH","CovalentJsonFormatterModule","TdLayoutComponent","mode","sidenav","MatSidenav","sidenavWidth","containerAutosize","_TdLayoutToggleMixinBase","LayoutToggleBase","LayoutToggle","hideWhenOpened","_hideWhenOpened","_toggleVisibility","_layout","_toggleSubs","_animationStarted","onClick","_noLayoutMessage","setStyle","console","warn","TdLayoutToggleDirective","tdLayoutToggle","layout","renderer","elementRef","TdLayoutCloseDirective","tdLayoutClose","TdLayoutOpenDirective","tdLayoutOpen","TdLayoutNavComponent","navigationRoute","handleNavigationClick","routerEnabled","navigateByUrl","TdLayoutNavListComponent","TdLayoutNavListToggleDirective","tdLayoutNavListToggle","TdLayoutNavListCloseDirective","tdLayoutNavListClose","TdLayoutNavListOpenDirective","tdLayoutNavListOpen","TdLayoutCardOverComponent","cardWidth","TdLayoutManageListComponent","TdLayoutManageListToggleDirective","tdLayoutManageListToggle","TdLayoutManageListCloseDirective","tdLayoutManageListClose","TdLayoutManageListOpenDirective","tdLayoutManageListOpen","TdLayoutFooterComponent","TdNavigationDrawerMenuDirective","TdNavigationDrawerToolbarDirective","TdNavigationDrawerComponent","_menuToggled","_drawerMenu","_toolbar","_backgroundImage","backgroundUrl","sanitizedUrl","_sanitize","sanitize","SecurityContext","RESOURCE_URL","STYLE","_closeSubscription","openedChange","toggleMenu","isMenuAvailable","TD_LAYOUTS","CovalentLayoutModule","ScrollDispatchModule","MatSidenavModule","MatToolbarModule","MatCardModule","MatDividerModule","Circular","Linear","Determinate","Indeterminate","Overlay","Replace","FullScreen","None","TdLoadingComponent","_mode","_defaultMode","_value","isOverlay","animation","_setCircleDiameter","getHeight","isFullScreen","getCircleDiameter","_circleDiameter","getCircleStrokeWidth","strokeWidth","abs","isCircular","LoadingType","isLinear","LoadingStyle","animationComplete","fromState","outAnimationCompleted","inAnimationCompleted","_animationIn","_animationOut","startInAnimation","startOutAnimation","LoadingMode","diameter","TdLoadingFactory","createFullScreenComponent","overlayRef","loadingRef","_initializeContext","loading","observable","distinctUntilChanged","registered","_createOverlay","componentRef","attach","ComponentPortal","_mapOptions","instance","changeDetectorRef","detectChanges","subs_1","destroy","detach","dispose","createOverlayComponent","_createComponent","TemplatePortal","insert","hostView","createReplaceComponent","context","nextElementSibling","scrollHeight","contentRef","subs_2","OverlayConfig","hasBackdrop","positionStrategy","_overlay","position","global","centerHorizontally","centerVertically","compRef","_componentFactoryResolver","resolveComponentFactory","_injector","subject","times","ComponentFactoryResolver","Injector","LOADING_FACTORY_PROVIDER_FACTORY","componentFactoryResolver","overlay","injector","LOADING_FACTORY_PROVIDER","TdLoadingConfig","TdLoadingDirectiveConfig","strategy","LoadingStrategy","TdLoadingService","createComponent","directiveConfig","_context","_loadingFactory","fullscreenConfig","removeComponent","register","registers","_timeouts","_clearTimeout","resolves","resolveAll","clearTimeout","LOADING_PROVIDER_FACTORY","loadingFactory","LOADING_PROVIDER","TdLoadingContext","$implicit","tdLoading","TD_LOADING_NEXT_ID","TdLoadingDirective","_name","until","_loadingService","_type","stategy","_strategy","_registerComponent","_loadingRef","_viewContainerRef","_templateRef","TD_LOADING","TD_LOADING_ENTRY_COMPONENTS","CovalentLoadingModule","MatProgressBarModule","MatProgressSpinnerModule","OverlayModule","TdMediaService","deregisterQuery","_queryMap","_querySources","_queryObservables","_ngZone","run","matchMedia","matches","registerQuery","BehaviorSubject","broadcast","this_1","_matchMediaTrigger","NgZone","_resizing","_globalSubscription","runOutsideAngular","window","MEDIA_PROVIDER_FACTORY","ngZone","MEDIA_PROVIDER","TdMediaToggleDirective","_query","attributes","_attributes","classes","_classes","styles","_styles","_mediaChange","_mediaService","_subscription","_matches","_changeAttributes","_changeClasses","_changeStyles","attr","setAttribute","removeAttribute","removeStyle","TD_MEDIA","CovalentMediaModule","TdMenuComponent","TD_MENU","CovalentMenuModule","MatMenuModule","_TdSearchInputMixinBase","TdSearchInputBase","TdSearchInputComponent","ngControl","skip","_searchTermChanged","handleBlur","handleSearch","onSearch","clearSearch","onClear","onSearchDebounce","display","showUnderline","clearIcon","_TdSearchBoxMixinBase","TdSearchBoxBase","TdSearchBoxComponent","_searchVisible","searchClicked","alwaysVisible","handleClear","_searchInput","toggleVisibility","handleSearchDebounce","margin","backIcon","searchIcon","CovalentSearchModule","TdBreadcrumbComponent","_displayCrumb","shouldDisplay","_width","_handleIconClick","host","class","separatorIcon","_displayIcon","TdBreadcrumbsComponent","_resizeSubscription","_widthSubject","_calculateVisibility","nativeElementWidth","setCrumbIcons","getComputedStyle","borderLeft","borderRight","marginLeft","marginRight","paddingLeft","paddingRight","_breadcrumbs","breadcrumbArray","breadcrumb","crumbsArray","crumbWidthSum","hiddenCrumbs","displayCrumb","hiddenBreadcrumbs","CovalentBreadcrumbsModule","Required","Complete","TdStepLabelDirective","TdStepActionsDirective","TdStepSummaryDirective","_TdStepMixinBase","TdStepBase","TdStepComponent","_contentPortal","_active","_setActive","_state","StepState","_content","isComplete","_onDeactivated","newActive","_onActivated","onActivated","onDeactivated","Vertical","Horizontal","TdStepsComponent","steps","_steps","_registerSteps","StepMode","_deregisterSteps","isHorizontal","isVertical","areStepsActive","step","_onStepSelection","prevStep","event_1","newStep","_deactivateAllBut","onStepChange","activeStep","_subcriptions","subscription","subs","_TdStepHeaderMixinBase","TdStepHeaderBase","TdStepHeaderComponent","isRequired","apply","TdStepBodyComponent","actionsRef","summaryRef","TdNavStepLinkComponent","_handleClick","click","stopImmediatePropagation","[class.td-step-link]","[attr.tabindex]","[attr.disabled]","[class.mat-disabled]","(click)","TdNavStepsHorizontalComponent","_viewportRuler","change","of","_configureSteps","updatePagination","_scrollDistanceChanged","_updateStepScrollPosition","_handleKeydown","_scrollHeader","_checkPaginationEnabled","_checkScrollingControls","_getLayoutDirection","translateX","scrollDistance","_stepList","_stepListContainer","_getMaxScrollDistance","_scrollDistance","scrollDir","offsetWidth","isEnabled","scrollWidth","_showPaginationControls","_disableScrollBefore","_disableScrollAfter","_separators","separator","removeChild","stepsArray","createElement","insertBefore","number","[class.td-step-header-pagination-controls-enabled]","[class.td-step-header-rtl]","ViewportRuler","Directionality","TdNavStepsVerticalComponent","separatorChild","appendChild","TD_STEPS","CovalentStepsModule","_TdTabOptionMixinBase","TdTabOptionBase","TdTabOptionComponent","_TdTabSelectMixinBase","TdTabSelectBase","TdTabSelectComponent","_selectedIndex","_tabOptions","_stretchTabs","stretchTabs","_setValue","_refreshValues","selectedIndexChange","selectedIndex","_values","valueChange","tabOptions","tabOption","CovalentTabSelectModule","MatTabsModule","base","initialValue","class_1","_subjectValueChanges","registerOnChange","fn","registerOnTouched","_i","_","_disabled","newValue","_disableRipple","onDisableRippleChange"],"mappings":"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A,CAAC,CACJgL,KAAM,eAsBR+B,IAvBA,SAAAA,MCFA,IAAAK,IAqBEA,GAAAnQ,UAAAoQ,iBAAA,WACE,OAAOD,GAAkBE,gBAfdF,GAAAE,eAAyB,yBAFvCC,EAAAA,uDAJQC,EAAAA,UAuBTJ,IAhBE,SAAAA,GAAoBK,GAAAvQ,KAAAuQ,QAAAA,EAClBvQ,KAAKuQ,QAAQC,OAAOxI,KAClByI,EAAAA,OAAO,SAACjL,GAAW,OAAAA,aAAakL,EAAAA,mBAChCC,EAAAA,YACA7I,UAAU,SAACtC,GACX0K,GAAkBE,eAAiB5K,EAAE,GAAGoL,4BCuwB5C/Q,OAAAC,eAAI+Q,GAAA9Q,UAAA,QAAK,KAAT,WACE,OAAOC,KAAK8Q,wCAGdD,GAAA9Q,UAAA0Q,OAAA,SAAOM,GACL,OAAO/Q,KAAKgR,MAAMP,OAAO,SAACQ,GACxB,OAAqE,EAA9DA,EAAGC,cAAcC,QAAQJ,EAAQA,EAAMG,cAAgB,4BAnxBnEb,EAAAA,aAsxBDQ,IAtxBA,SAAAA,KAGU7Q,KAAA8Q,OAAmB,CACzB,eACA,gBACA,cACA,gBACA,kBACA,yBACA,cACA,iBACA,MACA,YACA,UACA,aACA,qBACA,oBACA,gBACA,SACA,QACA,YACA,YACA,WACA,QACA,UACA,eACA,OACA,UACA,aACA,kBACA,yBACA,gBACA,gBACA,eACA,aACA,aACA,iBACA,kBACA,oBACA,sBACA,uBACA,kBACA,cACA,eACA,aACA,aACA,YACA,WACA,YACA,SACA,gBACA,wBACA,eACA,cACA,kBACA,WACA,QACA,YACA,kBACA,sBACA,qBACA,sBACA,gBACA,cACA,WACA,UACA,OACA,WACA,kBACA,aACA,gBACA,eACA,eACA,oBACA,eACA,cACA,eACA,eACA,eACA,aACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,kBACA,iBACA,oBACA,eACA,QACA,aACA,QACA,WACA,SACA,OACA,OACA,WACA,YACA,aACA,cACA,gBACA,aACA,SACA,aACA,eACA,cACA,cACA,SACA,OACA,iBACA,sBACA,oBACA,OACA,QACA,YACA,0BACA,eACA,eACA,gBACA,QACA,QACA,YACA,QACA,iBACA,QACA,eACA,aACA,iBACA,YACA,cACA,eACA,cACA,uBACA,aACA,WACA,UACA,UACA,WACA,sBACA,gBACA,WACA,eACA,cACA,gBACA,gBACA,0BACA,SACA,cACA,OACA,YACA,WACA,WACA,WACA,WACA,YACA,iBACA,gBACA,gBACA,cACA,YACA,aACA,SACA,SACA,cACA,cACA,kBACA,UACA,kBACA,iBACA,aACA,UACA,aACA,UACA,aACA,kBACA,kBACA,iBACA,iBACA,qBACA,iBACA,oBACA,qBACA,kBACA,YACA,MACA,iBACA,qBACA,OACA,SACA,OACA,WACA,SACA,YACA,MACA,OACA,QACA,QACA,YACA,QACA,gBACA,QACA,kBACA,aACA,aACA,aACA,cACA,cACA,cACA,WACA,UACA,WACA,iBACA,iBACA,kBACA,kBACA,gBACA,YACA,OACA,eACA,cACA,WACA,kBACA,WACA,gBACA,cACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,gBACA,iBACA,sBACA,eACA,gBACA,aACA,cACA,cACA,oBACA,iBACA,eACA,eACA,OACA,QACA,aACA,YACA,WACA,SACA,cACA,iBACA,OACA,eACA,gBACA,SACA,cACA,gBACA,iBACA,gBACA,sBACA,uBACA,oBACA,qBACA,cACA,eACA,oBACA,qBACA,oBACA,yBACA,yBACA,gBACA,sBACA,uBACA,uBACA,eACA,eACA,cACA,uBACA,8BACA,8BACA,oBACA,QACA,UACA,aACA,aACA,YACA,aACA,kBACA,YACA,UACA,QACA,UACA,UACA,MACA,YACA,gBACA,UACA,QACA,WACA,QACA,aACA,WACA,UACA,QACA,YACA,aACA,KACA,UACA,SACA,aACA,WACA,UACA,cACA,UACA,UACA,OACA,eACA,eACA,gBACA,UACA,OACA,QACA,kBACA,iBACA,OACA,QACA,QACA,qBACA,gBACA,QACA,0BACA,OACA,eACA,QACA,eACA,iBACA,oBACA,kBACA,oBACA,cACA,eACA,gBACA,oBACA,MACA,WACA,sBACA,sBACA,uBACA,oBACA,qBACA,oBACA,gBACA,kBACA,eACA,iBACA,QACA,gBACA,YACA,WACA,SACA,oBACA,aACA,iBACA,SACA,SACA,eACA,WACA,cACA,OACA,cACA,gBACA,gBACA,OACA,OACA,YACA,UACA,iBACA,gBACA,YACA,YACA,aACA,iBACA,0BACA,eACA,cACA,gBACA,oBACA,sBACA,iBACA,cACA,wBACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,cACA,cACA,aACA,oBACA,kBACA,YACA,iBACA,aACA,gBACA,oBACA,eACA,cACA,qBACA,OACA,YACA,eACA,QACA,UACA,UACA,UACA,UACA,YACA,YACA,OACA,QACA,UACA,OACA,MACA,aACA,qBACA,SACA,OACA,aACA,UACA,MACA,WACA,UACA,MACA,eACA,YACA,YACA,oBACA,OACA,WACA,OACA,aACA,YACA,QACA,QACA,iBACA,aACA,iBACA,mBACA,mBACA,cACA,SACA,gBACA,kBACA,gBACA,aACA,eACA,iBACA,eACA,eACA,MACA,SACA,iBACA,WACA,gBACA,uBACA,qBACA,oBACA,uBACA,cACA,iBACA,kBACA,cACA,YACA,QACA,WACA,UACA,WACA,oBACA,sBACA,oBACA,sBACA,aACA,QACA,sBACA,uBACA,UACA,SACA,iBACA,kBACA,wBACA,oBACA,0BACA,gBACA,aACA,iBACA,iBACA,SACA,aACA,iBACA,aACA,iBACA,QACA,gBACA,0BACA,kBACA,gBACA,eACA,eACA,eACA,eACA,YACA,kBACA,iBACA,gBACA,iBACA,kBACA,QACA,cACA,eACA,gBACA,2BACA,0BACA,0BACA,iBACA,qBACA,WACA,QACA,aACA,qBACA,sBACA,gBACA,oBACA,eACA,WACA,OACA,UACA,oBACA,WACA,QACA,cACA,qBACA,iBACA,QACA,SACA,UACA,gBACA,kBACA,QACA,cACA,QACA,uBACA,yBACA,cACA,UACA,gBACA,SACA,OACA,UACA,SACA,gBACA,wBACA,iBACA,UACA,SACA,aACA,SACA,YACA,YACA,WACA,QACA,YACA,SACA,iBACA,kBACA,UACA,cACA,OACA,wBACA,cACA,eACA,SACA,YACA,OACA,UACA,WACA,SACA,wBACA,uBACA,uBACA,kBACA,UACA,aACA,SACA,WACA,aACA,OACA,WACA,wBACA,0BACA,qBACA,sBACA,gBACA,oBACA,yBACA,2BACA,2BACA,sBACA,wBACA,oBACA,iBACA,iBACA,kBACA,2BACA,iBACA,QACA,OACA,WACA,kBACA,gBACA,UACA,wBACA,8CACA,yBACA,uBACA,sBACA,oBACA,yBACA,kBACA,WACA,iBACA,YACA,gBACA,YACA,aACA,MACA,aACA,SACA,OACA,gBACA,YACA,UACA,gBACA,gBACA,gBACA,aACA,OACA,cACA,YACA,QACA,yBACA,wBACA,yBACA,wBACA,OACA,UACA,QACA,uBACA,aACA,kBACA,QACA,UACA,YACA,qBACA,iBACA,aACA,aACA,YACA,uBACA,gBACA,eACA,OACA,gBACA,eACA,gBACA,oBACA,MACA,iBACA,SACA,iBACA,aACA,YACA,eACA,UACA,cACA,UACA,UACA,WACA,aACA,WACA,iBACA,gBACA,YACA,QACA,WACA,UACA,YACA,MACA,QACA,OACA,WACA,OACA,gBACA,UACA,YACA,YACA,gBACA,gBACA,cACA,OACA,YACA,gBACA,KACA,OACA,cACA,cACA,MACA,gBACA,wBACA,wBACA,qBACA,YACA,gBACA,WACA,eACA,cACA,aACA,gBACA,cACA,aACA,eACA,WACA,gBACA,YACA,cACA,aACA,cACA,YACA,WACA,aACA,iBACA,aACA,YACA,cACA,cACA,aACA,YACA,UACA,WACA,YACA,UACA,QACA,UACA,YACA,kBACA,gBACA,WACA,KACA,MACA,WACA,UACA,OACA,YACA,iBACA,OACA,YACA,uBACA,UACA,gBCpwBEM,GAAwB,CAC5BvE,IAIIwE,GAA6B,GAc7BC,GAAwB,CAC5BnE,GACAY,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","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, Optional, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Dir } from '@angular/cdk/bidi';\n\nexport interface IPageChangeEvent {\n  page: number;\n  maxPage: number;\n  pageSize: number;\n  total: number;\n  fromRow: number;\n  toRow: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-paging-bar',\n  templateUrl: './paging-bar.component.html',\n  styleUrls: ['./paging-bar.component.scss' ],\n})\nexport class TdPagingBarComponent implements OnInit {\n\n  private _pageSize: number = 50;\n  private _total: number = 0;\n  private _page: number = 1;\n  private _fromRow: number = 1;\n  private _toRow: number = 1;\n  private _initialized: boolean = false;\n  private _pageLinks: number[] = [];\n  private _pageLinkCount: number = 0;\n  // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n  private _hitEnd: boolean = false;\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n  private _hitStart: boolean = false;\n\n  /**\n   * firstLast?: boolean\n   * Shows or hides the first and last page buttons of the paging bar. Defaults to 'false'\n   */\n  @Input('firstLast') firstLast: boolean = true;\n\n  /**\n   * initialPage?: number\n   * Sets starting page for the paging bar. Defaults to '1'\n   */\n  @Input('initialPage') initialPage: number = 1;\n\n  /**\n   * pageLinkCount?: number\n   * Amount of page navigation links for the paging bar. Defaults to '0'\n   */\n  @Input('pageLinkCount')\n  set pageLinkCount(pageLinkCount: number) {\n    this._pageLinkCount = coerceNumberProperty(pageLinkCount);\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageLinkCount(): number {\n    return this._pageLinkCount;\n  }\n\n  /**\n   * pageSize?: number\n   * Selected page size for the pagination. Defaults 50.\n   */\n  @Input('pageSize')\n  set pageSize(pageSize: number) {\n    this._pageSize = coerceNumberProperty(pageSize);\n    this._page = 1;\n    if (this._initialized) {\n      this._handleOnChange();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  /**\n   * total: number\n   * Total rows for the pagination.\n   */\n  @Input('total')\n  set total(total: number) {\n    this._total = coerceNumberProperty(total);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get total(): number {\n    return this._total;\n  }\n\n  /**\n   * pageLinks: number[]\n   * Returns the pageLinks in an array\n   */\n  get pageLinks(): number[] {\n    return this._pageLinks;\n  }\n\n  /**\n   * range: string\n   * Returns the range of the rows.\n   */\n  get range(): string {\n    return `${!this._toRow ? 0 : this._fromRow}-${this._toRow}`;\n  }\n\n  /**\n   * page: number\n   * Returns the current page.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * page: number\n   * Returns the max page for the current pageSize and total.\n   */\n  get maxPage(): number {\n    return Math.ceil(this._total / this._pageSize);\n  }\n\n  /**\n   * change?: function\n   * Method to be executed when page size changes or any button is clicked in the paging bar.\n   * Emits an [IPageChangeEvent] implemented object.\n   */\n  @Output('change') onChange: EventEmitter<IPageChangeEvent> = new EventEmitter<IPageChangeEvent>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._page = coerceNumberProperty(this.initialPage);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._initialized = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * navigateToPage?: function\n   * Navigates to a specific valid page. Returns 'true' if page is valid, else 'false'.\n   */\n  navigateToPage(page: number): boolean {\n    if (page === 1 || (page >= 1 && page <= this.maxPage)) {\n      this._page = coerceNumberProperty(Math.floor(page));\n      this._handleOnChange();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * firstPage?: function\n   * Navigates to the first page. Returns 'true' if page is valid, else 'false'.\n   */\n  firstPage(): boolean {\n    return this.navigateToPage(1);\n  }\n\n  /**\n   * prevPage?: function\n   * Navigates to the previous page. Returns 'true' if page is valid, else 'false'.\n   */\n  prevPage(): boolean {\n    return this.navigateToPage(this._page - 1);\n  }\n\n  /**\n   * nextPage?: function\n   * Navigates to the next page. Returns 'true' if page is valid, else 'false'.\n   */\n  nextPage(): boolean {\n    return this.navigateToPage(this._page + 1);\n  }\n\n  /**\n   * lastPage?: function\n   * Navigates to the last page. Returns 'true' if page is valid, else 'false'.\n   */\n  lastPage(): boolean {\n    return this.navigateToPage(this.maxPage);\n  }\n\n  isMinPage(): boolean {\n    return this._page <= 1;\n  }\n\n  isMaxPage(): boolean {\n    return this._page >= this.maxPage;\n  }\n\n  private _calculateRows(): void {\n    let top: number = (this._pageSize * this._page);\n    this._fromRow = (this._pageSize * (this._page - 1)) + 1;\n    this._toRow = this._total > top ? top : this._total;\n  }\n\n  /**\n   * _calculatePageLinks?: function\n   * Calculates the page links that should be shown to the user based on the current state of the paginator\n   */\n  private _calculatePageLinks(): void {\n    // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n    if (this.isMaxPage()) {\n      this._hitEnd = true;\n      this._hitStart = false;\n    }\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n    if (this.isMinPage()) {\n      this._hitEnd = false;\n      this._hitStart = true;\n    }\n    // If the pageLinkCount goes above max possible pages based on perpage setting then reset it to maxPage\n    let actualPageLinkCount: number = this.pageLinkCount;\n    if (this.pageLinkCount > this.maxPage) {\n      actualPageLinkCount = this.maxPage;\n    }\n    // reset the pageLinks array\n    this._pageLinks = [];\n    // fill in the array with the pageLinks based on the current selected page\n    let middlePageLinks: number = Math.floor(actualPageLinkCount / 2);\n    for (let x: number = 0; x < actualPageLinkCount; x++) {\n      // don't go past the maxPage in the pageLinks\n      // have to handle even and odd pageLinkCounts differently so can still lead to the next numbers\n      if ((actualPageLinkCount % 2 === 0 && (this.page + middlePageLinks > this.maxPage)) ||\n          (actualPageLinkCount % 2 !== 0 && (this.page + middlePageLinks >= this.maxPage))) {\n        this._pageLinks[x] = this.maxPage - (actualPageLinkCount - (x + 1));\n      // if the selected page is after the middle then set that page as middle and get the correct balance on left and right\n      // special handling when there are only 2 pageLinks to just drop to next if block so can lead to next numbers when moving to right\n      // when moving to the left then go into this block\n      } else if ((actualPageLinkCount > 2 || actualPageLinkCount <= 2 && this._hitEnd) && (this.page - middlePageLinks) > 0) {\n        this._pageLinks[x] = (this.page - middlePageLinks) + x;\n      // if the selected page is before the middle then set the pages based on the x index leading up to and after selected page\n      } else if ((this.page - middlePageLinks) <= 0) {\n        this._pageLinks[x] = x + 1;\n      // other wise just set the array in order starting from the selected page\n      } else {\n        this._pageLinks[x] = this.page + x;\n      }\n    }\n  }\n\n  private _handleOnChange(): void {\n    this._calculateRows();\n    this._calculatePageLinks();\n    let event: IPageChangeEvent = {\n      page: this._page,\n      maxPage: this.maxPage,\n      pageSize: this._pageSize,\n      total: this._total,\n      fromRow: this._fromRow,\n      toRow: this._toRow,\n    };\n    this._changeDetectorRef.markForCheck();\n    this.onChange.emit(event);\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdPagingBarComponent } from './paging-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdPagingBarComponent,\n  ],\n  exports: [\n    TdPagingBarComponent,\n  ],\n})\nexport class CovalentPagingModule {\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({selector: '[tdVirtualScrollRow]'})\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\n\n  constructor(templateRef: TemplateRef<any>,\n              viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n  \n}\n","import { Component, Directive, Input, Output, EventEmitter, ContentChild, AfterViewInit, ViewChild,\n         ChangeDetectionStrategy, ChangeDetectorRef, QueryList, ViewChildren, ElementRef, HostListener,\n         Renderer2, AfterViewChecked, OnDestroy, TrackByFunction } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\n\nconst TD_VIRTUAL_OFFSET: number = 2;\nconst SCROLL_DEBOUNCE: number = 200;\n\nexport interface ITdVirtualScrollBottomEvent {\n  lastRow: any;\n  lastIndex: number;\n}\n\n@Component({\n  selector: 'td-virtual-scroll-container',\n  styleUrls: ['./virtual-scroll-container.component.scss' ],\n  templateUrl: './virtual-scroll-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n\n  private _subs: Subscription[] = [];\n  private _bottom: Subject<any> = new Subject();\n  private _initialized: boolean = false;\n\n  private _totalHeight: number = 0;\n  private _hostHeight: number = 0;\n  private _scrollVerticalOffset: number = 0;\n  private _offsetTransform: SafeStyle;\n\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  private _data: any[];\n  private _virtualData: any[];\n\n  /**\n   * data: any[]\n   * List of items to virtually iterate on.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    if (this._initialized) {\n      this._calculateVirtualRows();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * bottom: function\n   * Method to be executed when user scrolled to the last item of the list.\n   * An [ITdVirtualScrollBottomEvent] event is emitted\n   */\n  @Output() bottom: EventEmitter<ITdVirtualScrollBottomEvent> = new EventEmitter<ITdVirtualScrollBottomEvent>();\n\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\n\n  @ContentChild(TdVirtualScrollRowDirective) _rowTemplate: TdVirtualScrollRowDirective;\n\n  get rowHeight(): number {\n    if (this._rows && this._rows.toArray()[0]) {\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\n    }\n    return 0;\n  }\n\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _domSanitizer: DomSanitizer,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this._subs.push(this._rows.changes.subscribe(() => {\n      this._calculateVirtualRows();\n    }));\n    this._initialized = true;\n    this._calculateVirtualRows();\n\n    this._subs.push(this._bottom.pipe(\n      debounceTime(SCROLL_DEBOUNCE),\n    ).subscribe(() => {\n      this.bottom.emit({\n        lastRow: this._data[this._data.length - 1],\n        lastIndex: this.toRow,\n      });\n    }));\n  }\n\n  ngAfterViewChecked(): void {\n    let newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\n    if (this._hostHeight !== newHostHeight) {\n      this._hostHeight = newHostHeight;\n      if (this._initialized) {\n        this._calculateVirtualRows();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * trackBy?: TrackByFunction\n   * This accepts the same trackBy function [ngFor] does.\n   * https://angular.io/api/core/TrackByFunction\n   */\n  @Input('trackBy') trackBy: TrackByFunction<any> =  (index: number, item: any) => {\n    return item;\n  }\n\n  @HostListener('scroll', ['$event'])\n  handleScroll(event: Event): void {\n    let element: HTMLElement = (<HTMLElement>event.target);\n    if (element) {\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._scrollVerticalOffset = verticalScroll;\n        if (this._initialized) {\n          this._calculateVirtualRows();\n        }\n      }\n      if (this._initialized) {\n        // check to see if bottom was hit to throw the bottom event\n        if ((this._data.length * this.rowHeight) - (verticalScroll + this._hostHeight) === 0) {\n          this._bottom.next();\n        }\n      }\n    }\n  }\n\n  /**\n   * Method to refresh and recalculate the virtual rows\n   * e.g. after changing the [data] content\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Method to scroll to a specific row of the list.\n   */\n  scrollTo(row: number): void {\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the start of the list.\n   */\n  scrollToStart(): void {\n    this.scrollTo(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the end of the list.\n   */\n  scrollToEnd(): void {\n    this.scrollTo(this.totalHeight / this.rowHeight);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _calculateVirtualRows(): void {\n    if (this._data) {\n      this._totalHeight = this._data.length * this.rowHeight;\n      let fromRow: number = Math.floor((this._scrollVerticalOffset / this.rowHeight)) - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n      let range: number = Math.floor((this._hostHeight / this.rowHeight)) + (TD_VIRTUAL_OFFSET * 2);\n      let toRow: number = range + this.fromRow;\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    if (this._scrollVerticalOffset > (TD_VIRTUAL_OFFSET * this.rowHeight)) {\n      offset = this.fromRow * this.rowHeight;\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\n\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [\n  TdVirtualScrollRowDirective,\n  TdVirtualScrollContainerComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_VIRTUAL_SCROLL,\n  ],\n  exports: [\n    TD_VIRTUAL_SCROLL,\n  ],\n})\nexport class CovalentVirtualScrollModule {\n\n}\n","import { Component, Input, HostBinding, ChangeDetectionStrategy,\n         ViewChild, ElementRef, AfterContentInit } from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\nexport const DEFAULT_NOTIFICATION_LIMIT: number = 99;\n\n@Component({\n  selector: 'td-notification-count',\n  styleUrls: ['./notification-count.component.scss' ],\n  templateUrl: './notification-count.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n  private _limit: number = DEFAULT_NOTIFICATION_LIMIT;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content') content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n   /**\n    * limit?: number\n    * Limit for notification count. If the number of notifications is greater than limit, then + will be added. Defaults to 99.\n    */\n  @Input()\n  set limit(limit: number) {\n    this._limit = limit;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > this._limit) {\n      return `${this._limit}+`;\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      let contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [\n  TdNotificationCountComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_NOTIFICATIONS,\n  ],\n  exports: [\n    TD_NOTIFICATIONS,\n  ],\n})\nexport class CovalentNotificationsModule {\n\n}\n","import { Directive } from '@angular/core';\nimport { HostListener, Host, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdAutoTrim]',\n})\nexport class TdAutoTrimDirective {\n\n  constructor(@Optional() @Host() private _model: NgModel) {}\n\n  /**\n   * Listens to host's (blur) event and trims value.\n   */\n  @HostListener('blur', ['$event'])\n  onBlur(event: Event): void {\n    if (this._model && this._model.value && typeof(this._model.value) === 'string') {\n      this._model.update.emit(this._model.value.trim());\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TdTimeAgoPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((startTime - time.getTime()) / 1000);\n\n    if (diff < 2) {\n      return '1 second ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' seconds ago';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 minute ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' minutes ago';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 hour ago';\n    }\n    if (diff < 24) {\n      return Math.floor(diff) + ' hours ago';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return '1 day ago';\n    }\n    if (diff < 30) {\n      return Math.floor(diff) + ' days ago';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return '1 month ago';\n    }\n    if (diff < 12) {\n      return Math.floor(diff) + ' months ago';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return '1 year ago';\n    } else {\n      return Math.floor(diff) + ' years ago';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeDifference',\n})\n\nexport class TdTimeDifferencePipe implements PipeTransform {\n  transform(start: any, end?: any): string {\n    let startTime: Date = new Date(start);\n    let endTime: Date;\n\n    if (end !== undefined) {\n      endTime = new Date(end);\n    } else {\n      endTime = new Date();\n    }\n\n    if (!startTime.getTime() || !endTime.getTime()) {\n      return 'Invalid Date';\n    }\n\n    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\n\n    let days: number = Math.floor(diff / (60 * 60 * 24));\n    diff = diff - (days * (60 * 60 * 24));\n\n    let hours: number = Math.floor(diff / (60 * 60));\n    diff = diff - (hours * (60 * 60));\n\n    let minutes: number = Math.floor(diff / (60));\n    diff -= minutes * (60);\n\n    let seconds: number = diff;\n\n    let pad: string = '00';\n\n    let daysFormatted: string = '';\n\n    if (days > 0 && days < 2) {\n      daysFormatted = ' day - ';\n    } else if (days > 1) {\n      daysFormatted = ' days - ' ;\n    }\n\n    return (days > 0 ? days + daysFormatted : daysFormatted) +\n     pad.substring(0, pad.length - (hours + '').length) + hours + ':' +\n     pad.substring(0, pad.length - (minutes + '').length) + minutes + ':' +\n     pad.substring(0, pad.length - (seconds + '').length) + seconds;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeUntil',\n})\nexport class TdTimeUntilPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((time.getTime() - startTime) / 1000);\n\n    if (diff < 2) {\n      return 'in 1 second';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' seconds';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 minute';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' minutes';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 hour';\n    }\n    if (diff < 24) {\n      return 'in ' + Math.floor(diff) + ' hours';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return 'in 1 day';\n    }\n    if (diff < 30) {\n      return 'in ' + Math.floor(diff) + ' days';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return 'in 1 month';\n    }\n    if (diff < 12) {\n      return 'in ' + Math.floor(diff) + ' months';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return 'in 1 year';\n    } else {\n      return 'in ' + Math.floor(diff) + ' years';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes',\n})\n\nexport class TdBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1024;\n    let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimalBytes',\n})\n\nexport class TdDecimalBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'digits',\n})\n\nexport class TdDigitsPipe implements PipeTransform {\n\n  private _decimalPipe: DecimalPipe;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {\n    this._decimalPipe = new DecimalPipe(this._locale);\n  }\n\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return the value */\n      return digits;\n    } else if (digits < 1) {\n      return this._decimalPipe.transform(digits.toFixed(precision));\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    let i: number = Math.floor(Math.log(digits) / Math.log(k));\n    let size: string = sizes[i];\n    return this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\n\nexport class TdTruncatePipe implements PipeTransform {\n  transform(text: any, length: number): string {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    // Truncate\n    let truncated: string = text.substr(0, length);\n\n    if (text.length > length) {\n      if (truncated.lastIndexOf(' ') > 0) {\n        truncated = truncated.trim();\n      }\n\n      truncated += 'â¦';\n    }\n\n    return truncated;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized } from '@angular/router';\n\nimport { filter, pairwise } from 'rxjs/operators';\n\n@Injectable()\nexport class RouterPathService {\nprivate static _previousRoute: string = '/';\n  constructor(private _router: Router) {\n    this._router.events.pipe(\n      filter((e: any) => e instanceof RoutesRecognized),\n      pairwise(),\n    ).subscribe((e: any[]) => {\n      RouterPathService._previousRoute = e[0].urlAfterRedirects;\n    });\n  }\n\n  /*\n  * Utility function to get the route the user previously went to\n  * good for use in a \"back button\"\n  */\n  getPreviousRoute(): string {\n    return RouterPathService._previousRoute;\n  }\n}\n","/*\n * Copyright (C) 2016-2017 by Teradata Corporation. All rights reserved.\n * TERADATA CORPORATION CONFIDENTIAL AND TRADE SECRET\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IconService {\n\n  private _icons: string[] = [\n    'access_alarm',\n    'access_alarms',\n    'access_time',\n    'accessibility',\n    'account_balance',\n    'account_balance_wallet',\n    'account_box',\n    'account_circle',\n    'add',\n    'add_alarm',\n    'add_box',\n    'add_circle',\n    'add_circle_outline',\n    'add_shopping_cart',\n    'add_to_photos',\n    'adjust',\n    'alarm',\n    'alarm_add',\n    'alarm_off',\n    'alarm_on',\n    'album',\n    'android',\n    'announcement',\n    'apps',\n    'archive',\n    'arrow_back',\n    'arrow_drop_down',\n    'arrow_drop_down_circle',\n    'arrow_drop_up',\n    'arrow_forward',\n    'aspect_ratio',\n    'assessment',\n    'assignment',\n    'assignment_ind',\n    'assignment_late',\n    'assignment_return',\n    'assignment_returned',\n    'assignment_turned_in',\n    'assistant_photo',\n    'attach_file',\n    'attach_money',\n    'attachment',\n    'audiotrack',\n    'autorenew',\n    'av_timer',\n    'backspace',\n    'backup',\n    'battery_alert',\n    'battery_charging_full',\n    'battery_full',\n    'battery_std',\n    'battery_unknown',\n    'beenhere',\n    'block',\n    'bluetooth',\n    'bluetooth_audio',\n    'bluetooth_connected',\n    'bluetooth_disabled',\n    'bluetooth_searching',\n    'blur_circular',\n    'blur_linear',\n    'blur_off',\n    'blur_on',\n    'book',\n    'bookmark',\n    'bookmark_border',\n    'border_all',\n    'border_bottom',\n    'border_clear',\n    'border_color',\n    'border_horizontal',\n    'border_inner',\n    'border_left',\n    'border_outer',\n    'border_right',\n    'border_style',\n    'border_top',\n    'border_vertical',\n    'brightness_1',\n    'brightness_2',\n    'brightness_3',\n    'brightness_4',\n    'brightness_5',\n    'brightness_6',\n    'brightness_7',\n    'brightness_auto',\n    'brightness_high',\n    'brightness_low',\n    'brightness_medium',\n    'broken_image',\n    'brush',\n    'bug_report',\n    'build',\n    'business',\n    'cached',\n    'cake',\n    'call',\n    'call_end',\n    'call_made',\n    'call_merge',\n    'call_missed',\n    'call_received',\n    'call_split',\n    'camera',\n    'camera_alt',\n    'camera_front',\n    'camera_rear',\n    'camera_roll',\n    'cancel',\n    'cast',\n    'cast_connected',\n    'center_focus_strong',\n    'center_focus_weak',\n    'chat',\n    'check',\n    'check_box',\n    'check_box_outline_blank',\n    'check_circle',\n    'chevron_left',\n    'chevron_right',\n    'class',\n    'clear',\n    'clear_all',\n    'close',\n    'closed_caption',\n    'cloud',\n    'cloud_circle',\n    'cloud_done',\n    'cloud_download',\n    'cloud_off',\n    'cloud_queue',\n    'cloud_upload',\n    'collections',\n    'collections_bookmark',\n    'color_lens',\n    'colorize',\n    'comment',\n    'compare',\n    'computer',\n    'confirmation_number',\n    'contact_phone',\n    'contacts',\n    'content_copy',\n    'content_cut',\n    'content_paste',\n    'control_point',\n    'control_point_duplicate',\n    'create',\n    'credit_card',\n    'crop',\n    'crop_16_9',\n    'crop_3_2',\n    'crop_5_4',\n    'crop_7_5',\n    'crop_din',\n    'crop_free',\n    'crop_landscape',\n    'crop_original',\n    'crop_portrait',\n    'crop_square',\n    'dashboard',\n    'data_usage',\n    'dehaze',\n    'delete',\n    'description',\n    'desktop_mac',\n    'desktop_windows',\n    'details',\n    'developer_board',\n    'developer_mode',\n    'device_hub',\n    'devices',\n    'dialer_sip',\n    'dialpad',\n    'directions',\n    'directions_bike',\n    'directions_boat',\n    'directions_bus',\n    'directions_car',\n    'directions_railway',\n    'directions_run',\n    'directions_subway',\n    'directions_transit',\n    'directions_walk',\n    'disc_full',\n    'dns',\n    'do_not_disturb',\n    'do_not_disturb_alt',\n    'dock',\n    'domain',\n    'done',\n    'done_all',\n    'drafts',\n    'drive_eta',\n    'dvr',\n    'edit',\n    'eject',\n    'email',\n    'equalizer',\n    'error',\n    'error_outline',\n    'event',\n    'event_available',\n    'event_busy',\n    'event_note',\n    'event_seat',\n    'exit_to_app',\n    'expand_less',\n    'expand_more',\n    'explicit',\n    'explore',\n    'exposure',\n    'exposure_neg_1',\n    'exposure_neg_2',\n    'exposure_plus_1',\n    'exposure_plus_2',\n    'exposure_zero',\n    'extension',\n    'face',\n    'fast_forward',\n    'fast_rewind',\n    'favorite',\n    'favorite_border',\n    'feedback',\n    'file_download',\n    'file_upload',\n    'filter',\n    'filter_1',\n    'filter_2',\n    'filter_3',\n    'filter_4',\n    'filter_5',\n    'filter_6',\n    'filter_7',\n    'filter_8',\n    'filter_9',\n    'filter_9_plus',\n    'filter_b_and_w',\n    'filter_center_focus',\n    'filter_drama',\n    'filter_frames',\n    'filter_hdr',\n    'filter_list',\n    'filter_none',\n    'filter_tilt_shift',\n    'filter_vintage',\n    'find_in_page',\n    'find_replace',\n    'flag',\n    'flare',\n    'flash_auto',\n    'flash_off',\n    'flash_on',\n    'flight',\n    'flight_land',\n    'flight_takeoff',\n    'flip',\n    'flip_to_back',\n    'flip_to_front',\n    'folder',\n    'folder_open',\n    'folder_shared',\n    'folder_special',\n    'font_download',\n    'format_align_center',\n    'format_align_justify',\n    'format_align_left',\n    'format_align_right',\n    'format_bold',\n    'format_clear',\n    'format_color_fill',\n    'format_color_reset',\n    'format_color_text',\n    'format_indent_decrease',\n    'format_indent_increase',\n    'format_italic',\n    'format_line_spacing',\n    'format_list_bulleted',\n    'format_list_numbered',\n    'format_paint',\n    'format_quote',\n    'format_size',\n    'format_strikethrough',\n    'format_textdirection_l_to_r',\n    'format_textdirection_r_to_l',\n    'format_underlined',\n    'forum',\n    'forward',\n    'forward_10',\n    'forward_30',\n    'forward_5',\n    'fullscreen',\n    'fullscreen_exit',\n    'functions',\n    'gamepad',\n    'games',\n    'gesture',\n    'get_app',\n    'gif',\n    'gps_fixed',\n    'gps_not_fixed',\n    'gps_off',\n    'grade',\n    'gradient',\n    'grain',\n    'graphic_eq',\n    'grid_off',\n    'grid_on',\n    'group',\n    'group_add',\n    'group_work',\n    'hd',\n    'hdr_off',\n    'hdr_on',\n    'hdr_strong',\n    'hdr_weak',\n    'headset',\n    'headset_mic',\n    'healing',\n    'hearing',\n    'help',\n    'help_outline',\n    'high_quality',\n    'highlight_off',\n    'history',\n    'home',\n    'hotel',\n    'hourglass_empty',\n    'hourglass_full',\n    'http',\n    'https',\n    'image',\n    'image_aspect_ratio',\n    'import_export',\n    'inbox',\n    'indeterminate_check_box',\n    'info',\n    'info_outline',\n    'input',\n    'insert_chart',\n    'insert_comment',\n    'insert_drive_file',\n    'insert_emoticon',\n    'insert_invitation',\n    'insert_link',\n    'insert_photo',\n    'invert_colors',\n    'invert_colors_off',\n    'iso',\n    'keyboard',\n    'keyboard_arrow_down',\n    'keyboard_arrow_left',\n    'keyboard_arrow_right',\n    'keyboard_arrow_up',\n    'keyboard_backspace',\n    'keyboard_capslock',\n    'keyboard_hide',\n    'keyboard_return',\n    'keyboard_tab',\n    'keyboard_voice',\n    'label',\n    'label_outline',\n    'landscape',\n    'language',\n    'laptop',\n    'laptop_chromebook',\n    'laptop_mac',\n    'laptop_windows',\n    'launch',\n    'layers',\n    'layers_clear',\n    'leak_add',\n    'leak_remove',\n    'lens',\n    'library_add',\n    'library_books',\n    'library_music',\n    'link',\n    'list',\n    'live_help',\n    'live_tv',\n    'local_activity',\n    'local_airport',\n    'local_atm',\n    'local_bar',\n    'local_cafe',\n    'local_car_wash',\n    'local_convenience_store',\n    'local_dining',\n    'local_drink',\n    'local_florist',\n    'local_gas_station',\n    'local_grocery_store',\n    'local_hospital',\n    'local_hotel',\n    'local_laundry_service',\n    'local_library',\n    'local_mall',\n    'local_movies',\n    'local_offer',\n    'local_parking',\n    'local_pharmacy',\n    'local_phone',\n    'local_pizza',\n    'local_play',\n    'local_post_office',\n    'local_printshop',\n    'local_see',\n    'local_shipping',\n    'local_taxi',\n    'location_city',\n    'location_disabled',\n    'location_off',\n    'location_on',\n    'location_searching',\n    'lock',\n    'lock_open',\n    'lock_outline',\n    'looks',\n    'looks_3',\n    'looks_4',\n    'looks_5',\n    'looks_6',\n    'looks_one',\n    'looks_two',\n    'loop',\n    'loupe',\n    'loyalty',\n    'mail',\n    'map',\n    'markunread',\n    'markunread_mailbox',\n    'memory',\n    'menu',\n    'merge_type',\n    'message',\n    'mic',\n    'mic_none',\n    'mic_off',\n    'mms',\n    'mode_comment',\n    'mode_edit',\n    'money_off',\n    'monochrome_photos',\n    'mood',\n    'mood_bad',\n    'more',\n    'more_horiz',\n    'more_vert',\n    'mouse',\n    'movie',\n    'movie_creation',\n    'music_note',\n    'my_library_add',\n    'my_library_books',\n    'my_library_music',\n    'my_location',\n    'nature',\n    'nature_people',\n    'navigate_before',\n    'navigate_next',\n    'navigation',\n    'network_cell',\n    'network_locked',\n    'network_wifi',\n    'new_releases',\n    'nfc',\n    'no_sim',\n    'not_interested',\n    'note_add',\n    'notifications',\n    'notifications_active',\n    'notifications_none',\n    'notifications_off',\n    'notifications_paused',\n    'offline_pin',\n    'ondemand_video',\n    'open_in_browser',\n    'open_in_new',\n    'open_with',\n    'pages',\n    'pageview',\n    'palette',\n    'panorama',\n    'panorama_fish_eye',\n    'panorama_horizontal',\n    'panorama_vertical',\n    'panorama_wide_angle',\n    'party_mode',\n    'pause',\n    'pause_circle_filled',\n    'pause_circle_outline',\n    'payment',\n    'people',\n    'people_outline',\n    'perm_camera_mic',\n    'perm_contact_calendar',\n    'perm_data_setting',\n    'perm_device_information',\n    'perm_identity',\n    'perm_media',\n    'perm_phone_msg',\n    'perm_scan_wifi',\n    'person',\n    'person_add',\n    'person_outline',\n    'person_pin',\n    'personal_video',\n    'phone',\n    'phone_android',\n    'phone_bluetooth_speaker',\n    'phone_forwarded',\n    'phone_in_talk',\n    'phone_iphone',\n    'phone_locked',\n    'phone_missed',\n    'phone_paused',\n    'phonelink',\n    'phonelink_erase',\n    'phonelink_lock',\n    'phonelink_off',\n    'phonelink_ring',\n    'phonelink_setup',\n    'photo',\n    'photo_album',\n    'photo_camera',\n    'photo_library',\n    'photo_size_select_actual',\n    'photo_size_select_large',\n    'photo_size_select_small',\n    'picture_as_pdf',\n    'picture_in_picture',\n    'pin_drop',\n    'place',\n    'play_arrow',\n    'play_circle_filled',\n    'play_circle_outline',\n    'play_for_work',\n    'play_shopping_bag',\n    'playlist_add',\n    'plus_one',\n    'poll',\n    'polymer',\n    'portable_wifi_off',\n    'portrait',\n    'power',\n    'power_input',\n    'power_settings_new',\n    'present_to_all',\n    'print',\n    'public',\n    'publish',\n    'query_builder',\n    'question_answer',\n    'queue',\n    'queue_music',\n    'radio',\n    'radio_button_checked',\n    'radio_button_unchecked',\n    'rate_review',\n    'receipt',\n    'recent_actors',\n    'redeem',\n    'redo',\n    'refresh',\n    'remove',\n    'remove_circle',\n    'remove_circle_outline',\n    'remove_red_eye',\n    'reorder',\n    'repeat',\n    'repeat_one',\n    'replay',\n    'replay_10',\n    'replay_30',\n    'replay_5',\n    'reply',\n    'reply_all',\n    'report',\n    'report_problem',\n    'restaurant_menu',\n    'restore',\n    'ring_volume',\n    'room',\n    'rotate_90_degrees_ccw',\n    'rotate_left',\n    'rotate_right',\n    'router',\n    'satellite',\n    'save',\n    'scanner',\n    'schedule',\n    'school',\n    'screen_lock_landscape',\n    'screen_lock_portrait',\n    'screen_lock_rotation',\n    'screen_rotation',\n    'sd_card',\n    'sd_storage',\n    'search',\n    'security',\n    'select_all',\n    'send',\n    'settings',\n    'settings_applications',\n    'settings_backup_restore',\n    'settings_bluetooth',\n    'settings_brightness',\n    'settings_cell',\n    'settings_ethernet',\n    'settings_input_antenna',\n    'settings_input_component',\n    'settings_input_composite',\n    'settings_input_hdmi',\n    'settings_input_svideo',\n    'settings_overscan',\n    'settings_phone',\n    'settings_power',\n    'settings_remote',\n    'settings_system_daydream',\n    'settings_voice',\n    'share',\n    'shop',\n    'shop_two',\n    'shopping_basket',\n    'shopping_cart',\n    'shuffle',\n    'signal_cellular_4_bar',\n    'signal_cellular_connected_no_internet_4_bar',\n    'signal_cellular_no_sim',\n    'signal_cellular_null',\n    'signal_cellular_off',\n    'signal_wifi_4_bar',\n    'signal_wifi_4_bar_lock',\n    'signal_wifi_off',\n    'sim_card',\n    'sim_card_alert',\n    'skip_next',\n    'skip_previous',\n    'slideshow',\n    'smartphone',\n    'sms',\n    'sms_failed',\n    'snooze',\n    'sort',\n    'sort_by_alpha',\n    'space_bar',\n    'speaker',\n    'speaker_group',\n    'speaker_notes',\n    'speaker_phone',\n    'spellcheck',\n    'star',\n    'star_border',\n    'star_half',\n    'stars',\n    'stay_current_landscape',\n    'stay_current_portrait',\n    'stay_primary_landscape',\n    'stay_primary_portrait',\n    'stop',\n    'storage',\n    'store',\n    'store_mall_directory',\n    'straighten',\n    'strikethrough_s',\n    'style',\n    'subject',\n    'subtitles',\n    'supervisor_account',\n    'surround_sound',\n    'swap_calls',\n    'swap_horiz',\n    'swap_vert',\n    'swap_vertical_circle',\n    'switch_camera',\n    'switch_video',\n    'sync',\n    'sync_disabled',\n    'sync_problem',\n    'system_update',\n    'system_update_alt',\n    'tab',\n    'tab_unselected',\n    'tablet',\n    'tablet_android',\n    'tablet_mac',\n    'tag_faces',\n    'tap_and_play',\n    'terrain',\n    'text_format',\n    'textsms',\n    'texture',\n    'theaters',\n    'thumb_down',\n    'thumb_up',\n    'thumbs_up_down',\n    'time_to_leave',\n    'timelapse',\n    'timer',\n    'timer_10',\n    'timer_3',\n    'timer_off',\n    'toc',\n    'today',\n    'toll',\n    'tonality',\n    'toys',\n    'track_changes',\n    'traffic',\n    'transform',\n    'translate',\n    'trending_down',\n    'trending_flat',\n    'trending_up',\n    'tune',\n    'turned_in',\n    'turned_in_not',\n    'tv',\n    'undo',\n    'unfold_less',\n    'unfold_more',\n    'usb',\n    'verified_user',\n    'vertical_align_bottom',\n    'vertical_align_center',\n    'vertical_align_top',\n    'vibration',\n    'video_library',\n    'videocam',\n    'videocam_off',\n    'view_agenda',\n    'view_array',\n    'view_carousel',\n    'view_column',\n    'view_comfy',\n    'view_compact',\n    'view_day',\n    'view_headline',\n    'view_list',\n    'view_module',\n    'view_quilt',\n    'view_stream',\n    'view_week',\n    'vignette',\n    'visibility',\n    'visibility_off',\n    'voice_chat',\n    'voicemail',\n    'volume_down',\n    'volume_mute',\n    'volume_off',\n    'volume_up',\n    'vpn_key',\n    'vpn_lock',\n    'wallpaper',\n    'warning',\n    'watch',\n    'wb_auto',\n    'wb_cloudy',\n    'wb_incandescent',\n    'wb_iridescent',\n    'wb_sunny',\n    'wc',\n    'web',\n    'whatshot',\n    'widgets',\n    'wifi',\n    'wifi_lock',\n    'wifi_tethering',\n    'work',\n    'wrap_text',\n    'youtube_searched_for',\n    'zoom_in',\n    'zoom_out',\n  ];\n\n  get icons(): string[] {\n    return this._icons;\n  }\n\n  filter(query: string): string[] {\n    return this.icons.filter((el: string) => {\n      return el.toLowerCase().indexOf(query ? query.toLowerCase() : '') > -1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * FORMS\n */\n\n// Form Directives\nimport { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';\n\nconst TD_FORMS: Type<any>[] = [\n  TdAutoTrimDirective,\n];\n\n// Validators\nconst TD_VALIDATORS: Type<any>[] = [\n];\n\n/**\n * PIPES\n */\nimport { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';\nimport { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';\nimport { TdTimeUntilPipe } from './pipes/time-until/time-until.pipe';\nimport { TdBytesPipe } from './pipes/bytes/bytes.pipe';\nimport { TdDecimalBytesPipe } from './pipes/decimal-bytes/decimal-bytes.pipe';\nimport { TdDigitsPipe } from './pipes/digits/digits.pipe';\nimport { TdTruncatePipe } from './pipes/truncate/truncate.pipe';\n\nconst TD_PIPES: Type<any>[] = [\n  TdTimeAgoPipe,\n  TdTimeDifferencePipe,\n  TdTimeUntilPipe,\n  TdBytesPipe,\n  TdDecimalBytesPipe,\n  TdDigitsPipe,\n  TdTruncatePipe,\n];\n\n/**\n * Services\n */\n\nimport { RouterPathService } from './services/router-path.service';\nimport { IconService } from './services/icon.service';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n  ],\n  declarations: [\n    TD_FORMS,\n    TD_PIPES,\n    TD_VALIDATORS,\n  ],\n  exports: [\n    FormsModule,\n    CommonModule,\n    TD_FORMS,\n    TD_PIPES,\n    TD_VALIDATORS,\n  ],\n  providers: [\n    RouterPathService,\n    IconService,\n  ],\n})\nexport class CovalentCommonModule {\n\n}\n","import { ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport { Observable, Subject } from 'rxjs';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport interface IControlValueAccessor extends ControlValueAccessor {\n  value: any;\n  valueChanges: Observable<any>;\n  onChange: (_: any) => any;\n  onTouched: () => any;\n}\n\nexport interface IHasChangeDetectorRef {\n  _changeDetectorRef: ChangeDetectorRef;\n}\n\n/** Mixin to augment a component with ngModel support. */\nexport function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>\n                (base: T, initialValue?: any): Constructor<IControlValueAccessor> & T {\n  return class extends base {\n    private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;\n    private _subjectValueChanges: Subject<any>;\n    valueChanges: Observable<any>;\n\n    constructor(...args: any[]) {\n      super(...args); \n      this._subjectValueChanges = new Subject<any>();\n      this.valueChanges = this._subjectValueChanges.asObservable();\n    }\n\n    set value(v: any) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n        this._changeDetectorRef.markForCheck();\n        this._subjectValueChanges.next(v);\n      }\n    }\n    get value(): any {\n      return this._value;\n    }\n\n    writeValue(value: any): void {\n      this.value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n    }\n\n    onChange = (_: any) => noop;\n    onTouched = () => noop;\n\n  };\n}\n","import {\n  trigger, state, style, transition, animate, AnimationTriggerMetadata,\n  query, animateChild, group,\n} from '@angular/animations';\n\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IRotateAnimation extends IAnimationOptions {\n  degrees?: number;\n  ease?: string;\n}\n\n/**\n * const tdRotateAnimation\n *\n * Parameter Options:\n * * degressStart: Degrees of rotation that the dom object will end up in during the \"false\" state\n * * degreesEnd: Degrees of rotation that the dom object will end up in during the \"true\" state\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerates and decelerates. Defaults to ease-in.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a rotation animation.\n *\n * usage: [@tdRotate]=\"{ value: true | false, params: { degreesEnd: 90 }}\"\n */\n\nexport const tdRotateAnimation: AnimationTriggerMetadata = trigger('tdRotate', [\n  state('0', style({\n    transform: 'rotate({{ degressStart }}deg)',\n  }), { params: { degressStart: 0 }}),\n  state('1',  style({\n    transform: 'rotate({{ degreesEnd }}deg)',\n  }), { params: { degreesEnd: 180 }}),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}'),\n    ]),\n  ], { params: { duration: 250, delay: '0', ease: 'ease-in' }}),\n]);\n","import { trigger, state, style, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface ICollapseAnimation extends IAnimationOptions {\n   easeOnClose?: string;\n   easeOnOpen?: string;\n}\n\n/**\n * const tdCollapseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnClose: Animation accelerates and decelerates when closing. Defaults to ease-in.\n * * easeOnOpen: Animation accelerates and decelerates when opening. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a collapse/expand animation.\n *\n * usage: [@tdCollapse]=\"{ value: true | false, params: { duration: 500 }}\"\n */\nexport const tdCollapseAnimation: AnimationTriggerMetadata = trigger('tdCollapse', [\n  state('1', style({\n    height: '0',\n    overflow: 'hidden',\n  })),\n  state('0',  style({\n    height: AUTO_STYLE,\n    overflow: AUTO_STYLE,\n  })),\n  transition('0 => 1', [\n    style({\n      overflow: 'hidden',\n      height: AUTO_STYLE,\n    }),\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}', style({\n        height: '0',\n        overflow: 'hidden',\n      })),\n    ]),\n  ], { params: { duration: 150, delay: '0', ease: 'ease-in' }}),\n  transition('1 => 0', [\n    style({\n      height: '0',\n      overflow: 'hidden',\n    }),\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}', style({\n        overflow: 'hidden',\n        height: AUTO_STYLE,\n      })),\n    ]),\n  ], { params: { duration: 150, delay: '0', ease: 'ease-out' }}),\n]);\n","import { trigger, state, style, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group  } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IFadeInOutAnimation extends IAnimationOptions {\n  easeOnIn?: string;\n  easeOnOut?: string;\n}\n\n/**\n * const tdFadeInOutAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnIn: Animation accelerates and decelerates when fading in. Defaults to ease-in.\n * * easeOnOut: Animation accelerates and decelerates when fading out. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a fade animation.\n *\n * usage: [@tdFadeInOut]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger('tdFadeInOut', [\n    state('0', style({\n      opacity: '0',\n      visibility: 'hidden',\n    })),\n    state('1',  style({\n      opacity: AUTO_STYLE,\n      visibility: AUTO_STYLE,\n    })),\n    transition('0 => 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),\n      ]),\n    ], { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' }}),\n    transition('1 => 0', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),\n    ]),\n  ], { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdBounceAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a bounce animation.\n *\n * usage: [@tdBounce]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdBounceAnimation: AnimationTriggerMetadata = trigger('tdBounce', [\n  state('0', style({\n    transform: 'translate3d(0, 0, 0)',\n  })),\n  state('1',  style({\n    transform: 'translate3d(0, 0, 0)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.2}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.4}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.43}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.53}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -15px, 0)', offset: .7}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.8}),\n        style({transform: 'translate3d(0, -4px, 0)', offset: .9}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 1.0}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdFlashAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a flash animation.\n *\n * usage: [@tdFlash]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFlashAnimation: AnimationTriggerMetadata = trigger('tdFlash', [\n  state('0', style({\n    opacity: 1,\n  })),\n  state('1',  style({\n    opacity: 1,\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({opacity: 1, offset: 0}),\n        style({opacity: 0, offset: 0.25}),\n        style({opacity: 1, offset: 0.5}),\n        style({opacity: 0, offset: 0.75}),\n        style({opacity: 1, offset: 1.0}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdHeadshakeAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a headshake animation.\n *\n * usage: [@tdHeadshake]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger('tdHeadshake', [\n  state('0', style({\n    transform: 'translateX(0)',\n  })),\n  state('1',  style({\n    transform: 'translateX(0)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({transform: 'translateX(0)', offset: 0}),\n        style({transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065}),\n        style({transform: 'translateX(5px) rotateY(7deg)', offset: 0.185}),\n        style({transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315}),\n        style({transform: 'translateX(2px) rotateY(3deg)', offset: 0.435}),\n        style({transform: 'translateX(0)', offset: 0.50}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdJelloAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a jello animation.\n *\n * usage: [@tdJello]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdJelloAnimation: AnimationTriggerMetadata = trigger('tdJello', [\n  state('0', style({\n    transform: 'none',\n  })),\n  state('1',  style({\n    transform: 'none',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({transform: 'none', offset: 0}),\n        style({transform: 'none', offset: 0.011}),\n        style({transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222}),\n        style({transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333}),\n        style({transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444}),\n        style({transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555}),\n        style({transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666}),\n        style({transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777}),\n        style({transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdPulseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a pulse animation.\n *\n * usage: [@tdPulse]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdPulseAnimation: AnimationTriggerMetadata = trigger('tdPulse', [\n  state('0', style({\n    transform: 'scale3d(1, 1, 1)',\n  })),\n  state('1',  style({\n    transform: 'scale3d(1, 1, 1)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n          style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),\n          style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),\n          style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),\n        ]),\n      ),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CovalentValidators {\n  static min(minValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {\n      if (!!Validators.required(c) || (!minValue && minValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v < minValue ?\n        { min: {minValue: minValue, actualValue: v} } :\n        undefined;\n    };\n    return func;\n  }\n\n  static max(maxValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {\n      if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v > maxValue ?\n        { max: {maxValue: maxValue, actualValue: v} } :\n        undefined;\n    };\n    return func;\n  }\n\n  static numberRequired(c: AbstractControl): {[key: string]: any} {\n    return (Number.isNaN(c.value)) ?\n        { required: true } :\n        undefined;\n  }\n\n}\n","import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\n         HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'td-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdMessageComponent implements AfterViewInit {\n\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): any {\n    return { value: !this._opened, duration: 100 };\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [\n  TdMessageComponent,\n  TdMessageContainerDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TD_MESSAGE,\n  ],\n  exports: [\n    TD_MESSAGE,\n  ],\n})\nexport class CovalentMessageModule {\n\n}\n","import { Component, Input, Output, forwardRef, DoCheck, ViewChild, ViewChildren, QueryList, OnInit, HostListener,\n  ElementRef, Optional, Inject, Directive, TemplateRef, ViewContainerRef, ContentChild, ChangeDetectionStrategy,\n  ChangeDetectorRef, AfterViewInit, OnDestroy, HostBinding, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, LEFT_ARROW, RIGHT_ARROW, DELETE, BACKSPACE, ENTER, SPACE, TAB, HOME } from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable, Subscription, timer, merge, fromEvent } from 'rxjs';\nimport { filter, debounceTime } from 'rxjs/operators';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdChipsComponent),\n    multi: true,\n  }],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./chips.component.scss' ],\n  templateUrl: './chips.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n\n  private _outsideClickSubs: Subscription = Subscription.EMPTY;\n  private _inputValueChangesSubs: Subscription = Subscription.EMPTY;\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _required: boolean = false;\n  private _tabIndex: number = 0;\n  private _touchendDebounce: number = 100;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input') _nativeInput: ElementRef;\n  @ViewChild(MatInput) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective) _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * required?: boolean\n   * Value is set to true if at least one chip is needed\n   * Defaults to false\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * returns the display placeholder\n   */\n  get displayPlaceHolder(): string {\n    if (!this.canAddChip) {\n      return '';\n    }\n    return (this._required) ? `${this.placeholder} *` :  this.placeholder;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input('debounce') debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output('add') onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output('remove') onRemove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output('inputChange') onInputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output('chipFocus') onChipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output('chipBlur') onChipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * compareWith? function\n   * Function used to check whether a chip value already exists.\n   * Defaults to strict equality comparison ===\n   */\n  @Input('compareWith') compareWith: (o1: any, o2: any) => boolean = (o1: any, o2: any) => {\n    return o1 === o2;\n  }\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n     // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    timer().toPromise().then(() => {\n      this._isMousedown = false;\n    });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement ||\n        clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        timer().toPromise().then(() => {\n          this.removeFocusedState();\n        });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  ngOnInit(): void {\n    this._inputValueChangesSubs = this.inputControl.valueChanges.pipe(\n      debounceTime(this.debounce),\n    ).subscribe((value: string) => {\n      this.onInputChange.emit(value ? value : '');\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n      this._outsideClickSubs.unsubscribe();\n      this._inputValueChangesSubs.unsubscribe();\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      let selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n\n    this._closeAutocomplete();\n    timer(this.debounce).toPromise().then(() => {\n      this.setFocusedState();\n      this._setFirstOptionActive();\n      this._openAutocomplete();\n    });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.findIndex((item: any) => this.compareWith(item, value)) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.onAdd.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    let removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === (this._totalChips - 1) && index === 0) {\n      this._inputChild.focus();\n    } else if (index < (this._totalChips - 1)) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.onRemove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.onChipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.onChipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          let length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n         this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === (this._totalChips - 1)) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < (this._totalChips - 1)) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    let chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      timer().toPromise().then(() => {\n        if (this.focused && this._options && this._options.length > 0) {\n          // clean up of previously active options\n          this._options.toArray().forEach((option: MatOption) => {\n            option.setInactiveStyles();\n          });\n          // set the first one as active\n          this._options.toArray()[0].setActiveStyles();\n          this._internalActivateOption = true;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      this._outsideClickSubs = merge(\n        fromEvent(this._document, 'click'),\n        fromEvent(this._document, 'touchend'),\n      ).pipe(\n        debounceTime(this._touchendDebounce),\n        filter(\n          (event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return this.focused &&\n                  (clickTarget !== this._elementRef.nativeElement) &&\n                  !this._elementRef.nativeElement.contains(clickTarget) && !this._internalClick;\n          },\n        ),\n      ).subscribe(() => {\n        if (this.focused) {\n          this._autocompleteTrigger.closePanel();\n          this.removeFocusedState();\n          this.onTouched();\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n    return undefined;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n  ],\n  declarations: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n  exports: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n})\nexport class CovalentChipsModule {\n\n}\n","import { Component, Input, Output, Renderer2, ElementRef, ContentChildren, QueryList, HostListener } from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styleUrls: ['./data-table-row.component.scss' ],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableColumnRowComponent {\n\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styleUrls: ['./data-table-row.component.scss' ],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableRowComponent {\n\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click')\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({selector: '[tdDataTableTemplate]ng-template'})\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\n\n  @Input() tdDataTableTemplate: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectionStrategy,\n         ChangeDetectorRef, ViewChild, OnDestroy, AfterViewInit,\n         ContentChildren, TemplateRef, AfterContentInit, QueryList, Inject,\n         Optional, ViewChildren, ElementRef, OnInit, AfterContentChecked } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\n\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\nimport { ITdDataTableSortChangeEvent, TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport enum TdDataTableSortingOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface ITdDataTableColumnWidth {\n  min?: number;\n  max?: number;\n}\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n  sortable?: boolean;\n  hidden?: boolean;\n  filter?: boolean;\n  width?: ITdDataTableColumnWidth | number;\n}\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n  index: number;\n}\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\nexport interface ITdDataTableRowClickEvent {\n  row: any;\n  index: number;\n}\n\nexport interface IInternalColumnWidth {\n  value: number;\n  limit: boolean;\n  index: number;\n  min?: boolean;\n  max?: boolean;\n}\n\n/**\n * Constant to set the rows offset before and after the viewport\n */\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n/**\n * Constant to set default row height if none is provided\n */\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\n\nexport class TdDataTableBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdDataTableComponent),\n    multi: true,\n  }],\n  selector: 'td-data-table',\n  styleUrls: ['./data-table.component.scss' ],\n  templateUrl: './data-table.component.html',\n  inputs: ['value'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent extends _TdDataTableMixinBase implements IControlValueAccessor, OnInit,\n                                          AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\n\n  /** responsive width calculations */\n  private _resizeSubs: Subscription;\n  private _rowsChangedSubs: Subscription;\n  private _hostWidth: number = 0;\n\n  /** manually resizable columns */\n  private _resizableColumns: boolean = false;\n  private _columnClientX: number = 0;\n  private _columnResizeSubs: Subscription;\n  private _resizingColumn: number;\n  private _onColumnResize: Subject<number> = new Subject<number>();\n\n  get resizingColumn(): number {\n    return this._resizingColumn;\n  }\n\n  get hostWidth(): number {\n    // if the checkboxes are rendered, we need to remove their width\n    // from the total width to calculate properly\n    if (this.selectable) {\n      return this._hostWidth - 42;\n    }\n    return this._hostWidth;\n  }\n\n  private _widths: IInternalColumnWidth[] = [];\n  private _onResize: Subject<void> = new Subject<void>();\n\n  /** column header reposition and viewpoort */\n  private _verticalScrollSubs: Subscription;\n  private _horizontalScrollSubs: Subscription;\n  private _scrollHorizontalOffset: number = 0;\n\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\n\n  // Array of cached row heights to allow dynamic row heights\n  private _rowHeightCache: number[] = [];\n  // Total pseudo height of all the elements\n  private _totalHeight: number = 0;\n  // Total host height for the viewport\n  private _hostHeight: number = 0;\n  // Scrolled vertical pixels\n  private _scrollVerticalOffset: number = 0;\n  // Style to move the content a certain offset depending on scrolled offset\n  private _offsetTransform: SafeStyle;\n\n  // Variables that set from and to which rows will be rendered\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  /**\n   * Returns the offset style with a proper calculation on how much it should move\n   * over the y axis of the total height\n   */\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  /**\n   * Returns the assumed total height of the rows\n   */\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  /**\n   * Returns the initial row to render in the viewport\n   */\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  /**\n   * Returns the last row to render in the viewport\n   */\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  private _valueChangesSubs: Subscription;\n  /** internal attributes */\n  private _data: any[];\n  // data virtually iterated by component\n  private _virtualData: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _clickable: boolean = false;\n  private _multiple: boolean = true;\n  private _allSelected: boolean = false;\n  private _indeterminate: boolean = false;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** shift select */\n  private _shiftPreviouslyPressed: boolean = false;\n  private _lastSelectedIndex: number = -1;\n  private _firstSelectedIndex: number = -1;\n  private _firstCheckboxValue: boolean = false;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective) _templates: QueryList<TdDataTableTemplateDirective>;\n\n  @ViewChild('scrollableDiv') _scrollableDiv: ElementRef;\n\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\n\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\n\n  /**\n   * Returns scroll position to reposition column headers\n   */\n  get columnsLeftScroll(): number {\n    return this._scrollHorizontalOffset * -1;\n  }\n\n  /**\n   * Returns true if all values are selected.\n   */\n  get allSelected(): boolean {\n    return this._allSelected;\n  }\n\n  /**\n   * Returns true if all values are not deselected\n   * and at least one is.\n   */\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    this._rowHeightCache = [];\n    Promise.resolve().then(() => {\n      this.refresh();\n      // scroll back to the top if the data has changed\n      this._scrollableDiv.nativeElement.scrollTop = 0;\n    });\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      let row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * resizableColumns?: boolean\n   * Enables manual column resize.\n   * Defaults to 'false'\n   */\n  @Input('resizableColumns')\n  set resizableColumns(resizableColumns: boolean) {\n    this._resizableColumns = coerceBooleanProperty(resizableColumns);\n  }\n  get resizableColumns(): boolean {\n    return this._resizableColumns;\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(selectable: boolean) {\n    this._selectable = coerceBooleanProperty(selectable);\n  }\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  /**\n   * clickable?: boolean\n   * Enables row click events, hover.\n   * Defaults to 'false'\n   */\n  @Input('clickable')\n  set clickable(clickable: boolean) {\n    this._clickable = coerceBooleanProperty(clickable);\n  }\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: boolean) {\n    this._sortable = coerceBooleanProperty(sortable);\n  }\n  get sortable(): boolean {\n    return this._sortable;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n  get sortByColumn(): ITdDataTableColumn {\n    return this._sortBy;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n  get sortOrderEnum(): TdDataTableSortingOrder {\n    return this._sortOrder;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                                      new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output('rowSelect') onRowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * rowClick?: function\n   * Event emitted when a row is clicked.\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\n   */\n  @Output('rowClick') onRowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<ITdDataTableRowClickEvent>();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output('selectAll') onSelectAll: EventEmitter<ITdDataTableSelectAllEvent> =\n                                    new EventEmitter<ITdDataTableSelectAllEvent>();\n\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\n              private _elementRef: ElementRef,\n              private _domSanitizer: DomSanitizer,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * compareWith?: function(row, model): boolean\n   * Allows custom comparison between row and model to see if row is selected or not\n   * Default comparation is by reference\n   */\n  @Input('compareWith') compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\n    return row === model;\n  }\n\n  /**\n   * Initialize observable for resize and scroll events\n   */\n  ngOnInit(): void {\n    // initialize observable for resize calculations\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\n      if (this._rows) {\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\n        });\n      }\n      this._calculateWidths();\n      this._calculateVirtualRows();\n    });\n\n    // initialize observable for column resize calculations\n    this._columnResizeSubs = this._onColumnResize.asObservable().pipe(\n      debounceTime(0),\n    ).subscribe((clientX: number) => {\n      this._columnClientX = clientX;\n      this._calculateWidths();\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for scroll column header reposition\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable()\n      .subscribe((horizontalScroll: number) => {\n      this._scrollHorizontalOffset = horizontalScroll;\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for virtual scroll rendering\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable()\n      .subscribe((verticalScroll: number) => {\n      this._scrollVerticalOffset = verticalScroll;\n      this._calculateVirtualRows();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (let i: number = 0; i < this._templates.toArray().length; i++) {\n      this._templateMap.set(\n        this._templates.toArray()[i].tdDataTableTemplate,\n        this._templates.toArray()[i].templateRef,\n      );\n    }\n  }\n\n  /**\n   * Checks hosts native elements widths to see if it has changed (resize check)\n   */\n  ngAfterContentChecked(): void {\n    // check if the scroll has been reset when element is hidden\n    if (this._scrollVerticalOffset - this._scrollableDiv.nativeElement.scrollTop > 5) {\n      // scroll back to the top if element has been reset\n      this._onVerticalScroll.next(0);\n    }\n    if (this._elementRef.nativeElement) {\n      let newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\n      // if the width has changed then we throw a resize event.\n      if (this._hostWidth !== newHostWidth) {\n        setTimeout(() => {\n          this._hostWidth = newHostWidth;\n          this._onResize.next();\n        }, 0);\n      }\n    }\n    if (this._scrollableDiv.nativeElement) {\n      let newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n      // if the height of the viewport has changed, then we mark for check\n      if (this._hostHeight !== newHostHeight) {\n        this._hostHeight = newHostHeight;\n        this._calculateVirtualRows();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Registers to an observable that checks if all rows have been rendered\n   * so we can start calculating the widths\n   */\n  ngAfterViewInit(): void {\n    this._rowsChangedSubs = this._rows.changes.pipe(\n      debounceTime(0),\n    ).subscribe(() => {\n      this._onResize.next();\n    });\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Unsubscribes observables when data table is destroyed\n   */\n  ngOnDestroy(): void {\n    if (this._resizeSubs) {\n      this._resizeSubs.unsubscribe();\n    }\n    if (this._columnResizeSubs) {\n      this._columnResizeSubs.unsubscribe();\n    }\n    if (this._horizontalScrollSubs) {\n      this._horizontalScrollSubs.unsubscribe();\n    }\n    if (this._verticalScrollSubs) {\n      this._verticalScrollSubs.unsubscribe();\n    }\n    if (this._rowsChangedSubs) {\n      this._rowsChangedSubs.unsubscribe();\n    }\n    if (this._valueChangesSubs) {\n      this._valueChangesSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * Method that gets executed every time there is a scroll event\n   * Calls the scroll observable\n   */\n  handleScroll(event: Event): void {\n    let element: HTMLElement = (<HTMLElement>event.target);\n    if (element) {\n      let horizontalScroll: number = element.scrollLeft;\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\n        this._onHorizontalScroll.next(horizontalScroll);\n      }\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._onVerticalScroll.next(verticalScroll);\n      }\n    }\n  }\n\n  /**\n   * Returns the width needed for the columns via index\n   */\n  getColumnWidth(index: number): number {\n    if (this._widths[index]) {\n      return this._widths[index].value;\n    }\n    return undefined;\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n   getTemplateRef(name: string): TemplateRef<any> {\n     return this._templateMap.get(name);\n   }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this.value.splice(0, this.value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n    this._calculateWidths();\n    this._calculateCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  selectAll(checked: boolean): void {\n    let toggledRows: any[] = [];\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this.value.push(row);\n          // checking which ones are being toggled\n          toggledRows.push(row);\n        }\n      });\n      this._allSelected = true;\n      this._indeterminate = true;\n    } else {\n      this._data.forEach((row: any) => {\n        // checking which ones are being toggled\n        if (this.isRowSelected(row)) {\n          toggledRows.push(row);\n          let modelRow: any = this.value.filter((val: any) => {\n            return this.compareWith(row, val);\n          })[0];\n          let index: number = this.value.indexOf(modelRow);\n          if (index > -1) {\n            this.value.splice(index, 1);\n          }\n        }\n      });\n      this._allSelected = false;\n      this._indeterminate = false;\n    }\n    this.onSelectAll.emit({rows: toggledRows, selected: checked});\n    this.onChange(this.value);\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // compare items by [compareWith] function\n    return this.value ? this.value.filter((val: any) => {\n      return this.compareWith(row, val);\n    }).length > 0 : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n   * handles cntrl clicks and shift clicks for multi-select\n   */\n  select(row: any, event: Event, currentSelected: number): void {\n    if (this.selectable) {\n      this.blockEvent(event);\n      // Check to see if Shift key is selected and need to select everything in between\n      let mouseEvent: MouseEvent = event as MouseEvent;\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n        let firstIndex: number = currentSelected;\n        let lastIndex: number = this._lastSelectedIndex;\n        if (currentSelected > this._lastSelectedIndex) {\n          firstIndex = this._lastSelectedIndex;\n          lastIndex = currentSelected;\n        }\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n        // else the checkboxes clicked are all after the initial one\n        if ((this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n           (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)) {\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            if (this._firstSelectedIndex !== i) {\n              this._doSelection(this._data[i], i);\n            }\n          }\n        } else if ((this._firstSelectedIndex > currentSelected) || (this._firstSelectedIndex < currentSelected)) {\n          // change indexes depending on where the next checkbox is selected (before or after)\n          if (this._firstSelectedIndex > currentSelected) {\n            lastIndex--;\n          } else if (this._firstSelectedIndex < currentSelected) {\n            firstIndex++;\n          }\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            let rowSelected: boolean = this.isRowSelected(this._data[i]);\n            // if row is selected and first checkbox was selected\n            // or if row was unselected and first checkbox was unselected\n            // we ignore the toggle\n            if ((this._firstCheckboxValue && !rowSelected) ||\n                (!this._firstCheckboxValue && rowSelected)) {\n              this._doSelection(this._data[i], i);\n            } else if (this._shiftPreviouslyPressed) {\n              // else if the checkbox selected was in the middle of the last selection and the first selection\n              // then we undo the selections\n              if ((currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                  (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex)) {\n                this._doSelection(this._data[i], i);\n              }\n            }\n          }\n        }\n        this._shiftPreviouslyPressed = true;\n      // if shift wasnt pressed, then we take the element checked as the first row\n      // incase the next click uses shift\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\n        this._shiftPreviouslyPressed = false;\n        this._firstSelectedIndex = currentSelected;\n      }\n      this._lastSelectedIndex = currentSelected;\n    }\n  }\n\n  /**\n   * Overrides the onselectstart method of the document so other text on the page\n   * doesn't get selected when doing shift selections.\n   */\n  disableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = function(): boolean {\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Resets the original onselectstart method.\n   */\n  enableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = undefined;\n    }\n  }\n\n  /**\n   * emits the onRowClickEvent when a row is clicked\n   * if clickable is true and selectable is false then select the row\n   */\n  handleRowClick(row: any, index: number, event: Event): void {\n    if (this.clickable) {\n      // ignoring linting rules here because attribute it actually null or not there\n      // can't check for undefined\n      const srcElement: any = event.srcElement || event.currentTarget;\n      let element: HTMLElement = event.target as HTMLElement;\n      /* tslint:disable-next-line */\n      if (srcElement.getAttribute('stopRowClick') === null && element.tagName.toLowerCase() !== 'mat-pseudo-checkbox') {\n        this.onRowClick.emit({\n          row: row,\n          index: index,\n        });\n      }\n    }\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder = this._sortOrder === TdDataTableSortingOrder.Ascending ?\n        TdDataTableSortingOrder.Descending : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Handle all keyup events when focusing a data table row\n   */\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        /** if user presses enter or space, the row should be selected */\n        if (this.selectable) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case UP_ARROW:\n        /**\n         * if users presses the up arrow, we focus the prev row\n         * unless its the first row\n         */\n        if (index > 0) {\n          this._rows.toArray()[index - 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case DOWN_ARROW:\n        /**\n         * if users presses the down arrow, we focus the next row\n         * unless its the last row\n         */\n        if (index < (this._rows.toArray().length - 1)) {\n          this._rows.toArray()[index + 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Sets column index of the dragged column and initial clientX of column\n   */\n  _handleStartColumnDrag(index: number, event: MouseEvent): void {\n    this._columnClientX = event.clientX;\n    this._resizingColumn = index;\n  }\n\n  /**\n   * Calculates new width depending on new clientX of dragger column\n   */\n  _handleColumnDrag(event: MouseEvent | DragEvent): void {\n    // check if there was been a separator clicked for resize\n    if (this._resizingColumn !== undefined && event.clientX > 0) {\n      let xPosition: number = event.clientX;\n      // checks if the separator is being moved to try and resize the column, else dont do anything\n      if (xPosition > 0 && this._columnClientX > 0 && (xPosition - this._columnClientX) !== 0) {\n        // calculate the new width depending if making the column bigger or smaller\n        let proposedManualWidth: number = this._widths[this._resizingColumn].value + (xPosition - this._columnClientX);\n        // if the proposed new width is less than the projected min width of the column, use projected min width\n        if (proposedManualWidth < this._colElements.toArray()[this._resizingColumn].projectedWidth) {\n          proposedManualWidth = this._colElements.toArray()[this._resizingColumn].projectedWidth;\n        }\n        this.columns[this._resizingColumn].width = proposedManualWidth;\n        // update new x position for the resized column\n        this._onColumnResize.next(xPosition);\n      }\n    }\n  }\n\n  /**\n   * Ends dragged flags\n   */\n  _handleEndColumnDrag(): void {\n    this._columnClientX = undefined;\n    this._resizingColumn = undefined;\n  }\n\n  /**\n   * Method to prevent the default events\n   */\n  blockEvent(event: Event): void {\n    event.preventDefault();\n  }\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      let splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n  /**\n   * Does the actual Row Selection\n   */\n  private _doSelection(row: any, rowIndex: number): boolean {\n    let wasSelected: boolean = this.isRowSelected(row);\n    if (!wasSelected) {\n      if (!this._multiple) {\n        this.clearModel();\n      }\n      this.value.push(row);\n    } else {\n      // compare items by [compareWith] function\n      row = this.value.filter((val: any) => {\n        return this.compareWith(row, val);\n      })[0];\n      let index: number = this.value.indexOf(row);\n      if (index > -1) {\n        this.value.splice(index, 1);\n      }\n    }\n    this._calculateCheckboxState();\n    this.onRowSelect.emit({row: row, index: rowIndex, selected: !wasSelected});\n    this.onChange(this.value);\n    return !wasSelected;\n  }\n\n  /**\n   * Calculate all the state of all checkboxes\n   */\n  private _calculateCheckboxState(): void {\n    if (this._data) {\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\n      this._indeterminate = false;\n      for (let row of this._data) {\n        if (!this.isRowSelected(row)) {\n          continue;\n        }\n        this._indeterminate = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Calculates the widths for columns and cells depending on content\n   */\n  private _calculateWidths(): void {\n    if (this._colElements && this._colElements.length) {\n      this._widths = [];\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\n        this._adjustColumnWidth(index, this._calculateWidth());\n      });\n      this._adjustColumnWidhts();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Adjusts columns after calculation to see if they need to be recalculated.\n   */\n  private _adjustColumnWidhts(): void {\n    let fixedTotalWidth: number = 0;\n    // get the number of total columns that have flexible widths (not fixed or hidden)\n    let flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\n      if (this.columns[index].hidden) {\n        return false;\n      }\n      if (width.limit || width.max || width.min) {\n        fixedTotalWidth += width.value;\n      }\n      return !width.limit && !width.max && !width.min;\n    }).length;\n    // calculate how much pixes are left that could be spread across\n    // the flexible columns\n    let recalculateHostWidth: number = 0;\n    if (fixedTotalWidth < this.hostWidth) {\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n    }\n    // if we have flexible columns and pixels to spare on them\n    // we try and spread the pixels across them\n    if (flexibleWidths && recalculateHostWidth) {\n      let newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\n      let adjustedNumber: number = 0;\n      // adjust the column widths with the spread pixels\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\n        if (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue ||\n            this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue ||\n            !this._widths[colWidth.index].limit) {\n          this._adjustColumnWidth(colWidth.index, newValue);\n          adjustedNumber++;\n        }\n      });\n      // if there are still columns that need to be recalculated, we start over\n      let newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\n        return !width.limit && !width.max;\n      }).length;\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\n        this._adjustColumnWidhts();\n      }\n    }\n  }\n\n  /**\n   * Adjusts a single column to see if it can be recalculated\n   */\n  private _adjustColumnWidth(index: number, value: number): void {\n    this._widths[index] = {\n      value: value,\n      index: index,\n      limit: false,\n      min: false,\n      max: false,\n    };\n    // flag to see if we need to skip the min width projection\n    // depending if a width or min width has been provided\n    let skipMinWidthProjection: boolean = false;\n    if (this.columns[index]) {\n      // if the provided width has min/max, then we check to see if we need to set it\n      if (typeof this.columns[index].width === 'object') {\n        let widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\n        // if the column width is less than the configured min, we override it\n        skipMinWidthProjection = (widthOpts && !!widthOpts.min);\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\n          this._widths[index].value = widthOpts.min;\n          this._widths[index].min = true;\n        // if the column width is more than the configured max, we override it\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n          this._widths[index].value = widthOpts.max;\n          this._widths[index].max = true;\n        }\n      // if it has a fixed width, then we just set it\n      } else if (typeof this.columns[index].width === 'number') {\n        this._widths[index].value = <number>this.columns[index].width;\n        skipMinWidthProjection = this._widths[index].limit = true;\n      }\n    }\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\n    if (!skipMinWidthProjection &&\n        this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n      this._widths[index].min = true;\n      this._widths[index].limit = false;\n    }\n  }\n\n  /**\n   * Generic method to calculate column width\n   */\n  private _calculateWidth(): number {\n    let renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\n    return Math.floor(this.hostWidth / renderedColumns.length);\n  }\n\n  /**\n   * Method to calculate the rows to be rendered in the viewport\n   */\n  private _calculateVirtualRows(): void {\n    let scrolledRows: number = 0;\n    if (this._data) {\n      this._totalHeight = 0;\n      let rowHeightSum: number = 0;\n      // loop through all rows to see if we have their height cached\n      // and sum them all to calculate the total height\n      this._data.forEach((d: any, i: number) => {\n        // iterate through all rows at first and assume all\n        // rows are the same height as the first one\n        if (!this._rowHeightCache[i]) {\n          this._rowHeightCache[i] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n        }\n        rowHeightSum += this._rowHeightCache[i];\n        // check how many rows have been scrolled\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\n          scrolledRows++;\n        }\n      });\n      this._totalHeight = rowHeightSum;\n      // set the initial row to be rendered taking into account the row offset\n      let fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n\n      let hostHeight: number = this._hostHeight;\n      let index: number = 0;\n      // calculate how many rows can fit in the viewport\n      while (hostHeight > 0) {\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\n        index++;\n      }\n      // set the last row to be rendered taking into account the row offset\n      let range: number = (index - 1) + (TD_VIRTUAL_OFFSET * 2);\n      let toRow: number = range + this.fromRow;\n      // if last row is greater than the total length, then we use the total length\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    // calculate the proper offset depending on how many rows have been scrolled\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\n      for (let index: number = 0; index < this.fromRow; index++) {\n        offset += this._rowHeightCache[index];\n      }\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { Component, Input, Output, EventEmitter, Renderer2, ElementRef, HostBinding, HostListener, ViewChild } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.scss' ],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', {read: ElementRef}) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input('name') name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable') sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input('active') active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                        new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click')\n  handleClick(): void {\n    if (this.sortable) {\n      this.onSortChange.emit({name: this.name, order: this._sortOrder});\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n\n}\n","import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\n\nexport type TdDataTableCellAlign = 'start' | 'center' | 'end';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td[td-data-table-cell]',\n  styleUrls: ['./data-table-cell.component.scss' ],\n  templateUrl: './data-table-cell.component.html',\n})\nexport class TdDataTableCellComponent {\n\n  private _align: TdDataTableCellAlign;\n\n  /**\n   * numeric?: boolean\n   * Makes cell follow the numeric data-table specs.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * align?: 'start' | 'center' | 'end'\n   * Makes cell content align on demand\n   * Defaults to 'left', overrides numeric\n   */\n  @Input() \n  set align(align: TdDataTableCellAlign) {\n    this._align = align;\n  }\n  get align(): TdDataTableCellAlign {\n    return this._align;    \n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n  }\n\n}\n","import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'table[td-data-table]',\n  styleUrls: ['./data-table-table.component.scss' ],\n  templateUrl: './data-table-table.component.html',\n})\nexport class TdDataTableTableComponent {\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n  }\n\n}\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { TdDataTableSortingOrder, ITdDataTableColumn } from '../data-table.component';\n\n@Injectable()\nexport class TdDataTableService {\n\n  /**\n   * params:\n   * - data: any[]\n   * - searchTerm: string\n   * - ignoreCase: boolean = false\n   * - excludedColumns: string[] = []\n   *\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n   */\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\n    let filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n    if (filter) {\n      data = data.filter((item: any) => {\n        const res: any = Object.keys(item).find((key: string) => {\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n            const preItemValue: string = ('' + item[key]);\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n            return itemValue.indexOf(filter) > -1;\n          }\n        });\n        return !(typeof res === 'undefined');\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - sortBy: string\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n   *\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n   */\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\n    if (sortBy) {\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n      data.sort((a: any, b: any) => {\n        let compA: any = a[sortBy];\n        let compB: any = b[sortBy];\n        let direction: number = 0;\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n        } else {\n          if (compA < compB) {\n            direction = -1;\n          } else if (compA > compB) {\n            direction = 1;\n          }\n        }\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - fromRow: number\n   * - toRow: : number\n   *\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n   */\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\n    if (fromRow >= 1) {\n      data = data.slice(fromRow - 1, toRow);\n    }\n    return data;\n  }\n}\n\nexport function DATA_TABLE_PROVIDER_FACTORY(\n    parent: TdDataTableService): TdDataTableService {\n  return parent || new TdDataTableService();\n}\n\nexport const DATA_TABLE_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdDataTableService,\n  deps: [[new Optional(), new SkipSelf(), TdDataTableService]],\n  useFactory: DATA_TABLE_PROVIDER_FACTORY,\n};\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nimport { TdDataTableComponent } from './data-table.component';\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { DATA_TABLE_PROVIDER } from './services/data-table.service';\n\nconst TD_DATA_TABLE: Type<any>[] = [\n  TdDataTableComponent,\n  TdDataTableTemplateDirective,\n\n  TdDataTableColumnComponent,\n  TdDataTableCellComponent,\n  TdDataTableRowComponent,\n  TdDataTableColumnRowComponent,\n  TdDataTableTableComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatPseudoCheckboxModule,\n  ],\n  declarations: [\n    TD_DATA_TABLE,\n  ],\n  exports: [\n    TD_DATA_TABLE,\n  ],\n  providers: [\n    DATA_TABLE_PROVIDER,\n  ],\n})\nexport class CovalentDataTableModule {\n\n}\n","import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({selector: 'td-dialog-title'})\nexport class TdDialogTitleDirective {}\n\n@Directive({selector: 'td-dialog-content'})\nexport class TdDialogContentDirective {}\n\n@Directive({selector: 'td-dialog-actions'})\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss' ],\n})\nexport class TdDialogComponent implements AfterContentInit {\n\n  @ContentChildren(TdDialogTitleDirective) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss' ],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss' ],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  styleUrls: ['./prompt-dialog.component.scss' ],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input') _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close(undefined);\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n","import { Injectable, ViewContainerRef, Provider, SkipSelf, Optional } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\n\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\n@Injectable()\nexport class TdDialogService {\n\n  constructor(private _dialogService: MatDialog) {}\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdAlertDialogComponent> =\n      this._dialogService.open(TdAlertDialogComponent, dialogConfig);\n    let alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdConfirmDialogComponent> =\n      this._dialogService.open(TdConfirmDialogComponent, dialogConfig);\n    let confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdPromptDialogComponent> =\n      this._dialogService.open(TdPromptDialogComponent, dialogConfig);\n    let promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    let dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdDialogComponent, TdDialogTitleDirective,\n         TdDialogActionsDirective, TdDialogContentDirective } from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\nimport { TdDialogService } from './services/dialog.service';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TD_DIALOGS,\n  ],\n  exports: [\n    TD_DIALOGS,\n  ],\n  providers: [\n    TdDialogService,\n  ],\n  entryComponents: [\n    TD_DIALOGS_ENTRY_COMPONENTS,\n  ],\n})\nexport class CovalentDialogsModule {\n\n}\n","import { Component, Directive, Input, Output, TemplateRef, ViewContainerRef, ContentChild,\n         ElementRef, Renderer2 } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  tdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  tdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styleUrls: ['./expansion-panel.component.scss' ],\n  templateUrl: './expansion-panel.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  animations: [\n    tdCollapseAnimation,\n    tdRotateAnimation,\n  ],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective) expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective) expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit(undefined);\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit(undefined);\n  }\n}\n","import {\n  Component,\n  Renderer2,\n  ElementRef,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { TdExpansionPanelComponent } from './expansion-panel.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styleUrls: ['./expansion-panel-group.component.scss'],\n  templateUrl: './expansion-panel-group.component.html',\n})\nexport class TdExpansionPanelGroupComponent\n  implements AfterContentInit, OnDestroy {\n  private _multi: boolean = false;\n\n  private _lastOpenedPanels: TdExpansionPanelComponent[] = [];\n\n  private _destroyed: Subject<boolean> = new Subject<boolean>();\n  private _stopWatchingPanels: Subject<boolean> = new Subject<boolean>();\n\n  /**\n   * multi?: boolean\n   * Sets whether multiple panels can be opened at a given time.\n   * Set to false for accordion mode.\n   * Defaults to false.\n   */\n  @Input('multi')\n  set multi(multi: boolean) {\n    this._multi = coerceBooleanProperty(multi);\n    if (this._multi === false && this._lastOpenedPanels.length > 0) {\n      this._closeAllExcept(\n        this._lastOpenedPanels[this._lastOpenedPanels.length - 1],\n      );\n    }\n  }\n\n  @ContentChildren(TdExpansionPanelComponent) expansionPanels: QueryList<\n    TdExpansionPanelComponent\n  >;\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(\n      this._elementRef.nativeElement,\n      'td-expansion-panel-group',\n    );\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next(true);\n    this._destroyed.unsubscribe();\n    this._stopWatchingPanels.next(true);\n    this._stopWatchingPanels.unsubscribe();\n  }\n\n  public ngAfterContentInit(): void {\n    if (!this._multi) {\n      const openedPanels: TdExpansionPanelComponent[] = this.expansionPanels.filter(\n        (expansionPanel: TdExpansionPanelComponent) => expansionPanel.expand,\n      );\n      const numOpenedPanels: number = openedPanels.length;\n      if (numOpenedPanels > 1) {\n        this._closeAllExcept(openedPanels[numOpenedPanels - 1]);\n      }\n    }\n\n    this._attachListeners(this.expansionPanels);\n\n    this.expansionPanels.changes\n      .pipe(takeUntil(this._destroyed))\n      .subscribe((expansionPanels: QueryList<TdExpansionPanelComponent>) => {\n        this._stopWatchingPanels.next(true);\n        this._stopWatchingPanels.unsubscribe();\n        this._stopWatchingPanels = new Subject<boolean>();\n        this._attachListeners(expansionPanels);\n      });\n  }\n\n  /**\n   * Opens all expansion panels, only if multi set set to true.\n   */\n  public openAll(): void {\n    if (this._multi) {\n      this.expansionPanels.forEach(\n        (expansionPanel: TdExpansionPanelComponent) => {\n          expansionPanel.open();\n        },\n      );\n    }\n  }\n\n  /**\n   * Closes all expansion panels\n   */\n  public closeAll(): void {\n    this.expansionPanels.forEach(\n      (expansionPanel: TdExpansionPanelComponent) => {\n        expansionPanel.close();\n      },\n    );\n  }\n\n  private _attachListeners(\n    expansionPanels: QueryList<TdExpansionPanelComponent>,\n  ): void {\n    this._lastOpenedPanels = [];\n    expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.expanded\n        .pipe(takeUntil(this._stopWatchingPanels))\n        .subscribe(() => {\n          const indexOfPanel: number = this._lastOpenedPanels.indexOf(\n            expansionPanel,\n          );\n          if (indexOfPanel !== -1) {\n            this._lastOpenedPanels.splice(indexOfPanel, 1);\n          }\n          this._lastOpenedPanels.push(expansionPanel);\n\n          if (!this._multi) {\n            this._closeAllExcept(expansionPanel);\n          }\n        });\n\n      expansionPanel.collapsed\n        .pipe(takeUntil(this._stopWatchingPanels))\n        .subscribe(() => {\n          const indexOfPanel: number = this._lastOpenedPanels.indexOf(\n            expansionPanel,\n          );\n          if (indexOfPanel !== -1) {\n            this._lastOpenedPanels.splice(indexOfPanel, 1);\n          }\n        });\n    });\n  }\n\n  private _closeAllExcept(expansionPanel: TdExpansionPanelComponent): void {\n    this.expansionPanels.forEach((panel: TdExpansionPanelComponent) => {\n      if (panel !== expansionPanel) {\n        panel.close();\n      }\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdExpansionPanelComponent, TdExpansionPanelHeaderDirective, TdExpansionPanelLabelDirective,\n         TdExpansionPanelSublabelDirective, TdExpansionPanelSummaryComponent } from './expansion-panel.component';\nimport { TdExpansionPanelGroupComponent } from './expansion-panel-group.component';\n\nconst TD_EXPANSION_PANEL: Type<any>[] = [\n  TdExpansionPanelGroupComponent,\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    MatIconModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_EXPANSION_PANEL,\n  ],\n  exports: [\n    TD_EXPANSION_PANEL,\n  ],\n})\nexport class CovalentExpansionPanelModule {\n\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {\n  }\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);\n      let files: FileList = fileInputEl.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\n      }\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (this.disabled || (!this._multiple &&\n      ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (((<any>types).contains && (<any>types).contains('Files'))\n      || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild,\n         ElementRef, Renderer2, TemplateRef, ViewContainerRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileInputComponent),\n    multi: true,\n  }],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput') _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n  /**\n   * Sets disable to the component. Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef,\n  forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileUploadComponent),\n    multi: true,\n  }],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscriber } from 'rxjs';\n\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: {[key: string]: string};\n  formData?: FormData;\n}\n\n@Injectable()\nexport class TdFileService {\n\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  constructor() {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * Will be depricated when Angular fixes [Http] to allow [FormData] as body.\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round(event.loaded / event.total * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (let key in options.headers) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\nimport { TdFileService } from './services/file.service';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_FILE,\n  ],\n  exports: [\n    TD_FILE,\n  ],\n  providers: [\n    TdFileService,\n  ],\n})\nexport class CovalentFileModule {\n\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styleUrls: ['./json-formatter.component.scss' ],\n  templateUrl: './json-formatter.component.html',\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdJsonFormatterComponent {\n\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    let elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? 'â¦' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Dir) {\n  }\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    let type: string = this.getType(value);\n    if (type === 'undefined' || (type === 'null')) {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return value.toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{â¦}';\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      let date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]') {\n        if (!Number.isNaN(date.getTime())) {\n          return 'date';\n        }\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    let object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n        return 'Object';\n    }\n    let funcNameRegex: RegExp = /function (.{1,})\\(/;\n    let results: RegExpExecArray = (funcNameRegex).exec((object).constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      let previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      let previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    let previewString: string =  previewData.join(', ');\n    let ellipsis: string = previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n                           previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH ? 'â¦' : '';\n    return startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) +\n           ellipsis + endChar;\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (let key in this._data) {\n        this._children.push(key);\n      }\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdJsonFormatterComponent,\n  ],\n  exports: [\n    TdJsonFormatterComponent,\n  ],\n})\nexport class CovalentJsonFormatterModule {\n\n}\n","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss' ],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase { }\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable,\n              private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutToggle') \n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutClose') \n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutOpen') \n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss' ],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss' ],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n  \n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListToggle') \n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutNavListClose') \n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListOpen') \n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss' ],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input('cardTitle') cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input('cardSubtitle') cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input('cardWidth') cardWidth: number = 70;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss' ],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListToggle') \n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutManageListClose') \n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListOpen') \n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss' ],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: string\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n\n}\n","import { Component, Directive, Input, ContentChildren, OnInit, OnDestroy, forwardRef, Inject,\n         QueryList, SecurityContext, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {\n\n}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {\n\n}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss' ],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [ tdCollapseAnimation ],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective) _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective) _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input('sidenavTitle') sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input('color') color: string;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      let sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input('name') name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input('email') email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n              @Optional() private _router: Router,\n              private _sanitize: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective, TdLayoutNavListCloseDirective, TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective, TdLayoutManageListCloseDirective, TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent, TdNavigationDrawerMenuDirective, TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollDispatchModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [\n    TD_LAYOUTS,\n  ],\n  exports: [\n    TD_LAYOUTS,\n  ],\n})\nexport class CovalentLayoutModule {\n\n}\n","import { Component, ViewChild, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy, ElementRef, DoCheck } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Observable, Subject } from 'rxjs';\n\nexport enum LoadingType {\n  Circular = 'circular',\n  Linear = 'linear',\n}\n\nexport enum LoadingMode {\n  Determinate = 'determinate',\n  Indeterminate = 'indeterminate',\n}\n\nexport enum LoadingStrategy {\n  Overlay = 'overlay',\n  Replace = 'replace',\n}\n\nexport enum LoadingStyle {\n  FullScreen = 'fullscreen',\n  Overlay = 'overlay',\n  None = 'none',\n}\n\nimport { tdFadeInOutAnimation } from '@covalent/core/common';\n\nexport const TD_CIRCLE_DIAMETER: number = 100;\n\n@Component({\n  selector: 'td-loading',\n  styleUrls: ['./loading.component.scss' ],\n  templateUrl: './loading.component.html',\n  animations: [\n    tdFadeInOutAnimation,\n  ],\n})\nexport class TdLoadingComponent implements DoCheck {\n\n  private _animationIn: Subject<any> = new Subject<any>();\n  private _animationOut: Subject<any> = new Subject<any>();\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\n  private _value: number = 0;\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\n\n  /**\n   * Flag for animation\n   */\n  animation: boolean = false;\n\n  /**\n   * Content injected into loading component.\n   */\n  content: TemplatePortal<any>;\n\n  /**\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\n   */\n  set mode(mode: LoadingMode) {\n    this._defaultMode = mode;\n  }\n  get mode(): LoadingMode {\n    return this._mode;\n  }\n\n  /**\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\n   */\n  set value(value: number) {\n    this._value = value;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  style: LoadingStyle = LoadingStyle.None;\n\n  /**\n   * height: number\n   * Sets height of [TdLoadingComponent].\n   */\n  height: number;\n\n  /**\n   * type: LoadingType\n   * Sets type of [TdLoadingComponent] rendered.\n   */\n  type: LoadingType = LoadingType.Circular;\n\n  /**\n   * color: primary' | 'accent' | 'warn'\n   * Sets theme color of [TdLoadingComponent] rendered.\n   */\n  color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck(): void {\n    // When overlay is used and the host width has a value greater than 1px\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\n    if (this.isOverlay() && this._hostHeight() > 1) {\n      if (this.animation) {\n        this._setCircleDiameter();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  getHeight(): string {\n    // Ignore height if style is `overlay` or `fullscreen`.\n    // Add height if child elements have a height and style is `none`, else return default height.\n    if (this.isOverlay() || this.isFullScreen()) {\n      return undefined;\n    } else {\n      return this.height ? `${this.height}px` : '150px';\n    }\n  }\n\n  getCircleDiameter(): number {\n    return this._circleDiameter;\n  }\n\n  getCircleStrokeWidth(): number {\n    // we calculate the stroke width by setting it as 10% of its diameter\n    let strokeWidth: number = this.getCircleDiameter() / 10;\n    return Math.abs(strokeWidth);\n  }\n\n  isCircular(): boolean {\n    return this.type === LoadingType.Circular;\n  }\n\n  isLinear(): boolean {\n    return this.type === LoadingType.Linear;\n  }\n\n  isFullScreen(): boolean {\n    return this.style === LoadingStyle.FullScreen;\n  }\n\n  isOverlay(): boolean {\n    return this.style === LoadingStyle.Overlay;\n  }\n\n  animationComplete(event: AnimationEvent): void {\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\n    if (!event.fromState) {\n      this.inAnimationCompleted();\n    } else {\n      this.outAnimationCompleted();\n    }\n  }\n\n  inAnimationCompleted(): void {\n    this._animationIn.next(undefined);\n  }\n\n  outAnimationCompleted(): void {\n   /* little hack to reset the loader value and animation before removing it from DOM\n    * else, the loader will appear with prev value when its registered again\n    * and will do an animation going prev value to 0.\n    */\n    this.value = 0;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    this._animationOut.next(undefined);\n  }\n\n  /**\n   * Starts in animation and returns an observable for completition event.\n   */\n  startInAnimation(): Observable<any> {\n    /* need to switch back to the selected mode, so we have saved it in another variable\n    *  and then recover it. (issue with protractor)\n    */\n    this._mode = this._defaultMode;\n    // Set values before the animations starts\n    this._setCircleDiameter();\n    // Check for changes for `OnPush` change detection\n    this.animation = true;\n    this._changeDetectorRef.markForCheck();\n    return this._animationIn.asObservable();\n  }\n\n  /**\n   * Starts out animation and returns an observable for completition event.\n   */\n  startOutAnimation(): Observable<any> {\n    this.animation = false;\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\n    * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\n    */\n    this._mode = LoadingMode.Determinate;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    return this._animationOut.asObservable();\n  }\n\n  /**\n   * Calculate the proper diameter for the circle and set it\n   */\n  private _setCircleDiameter(): void {\n    // we set a default diameter of 100 since this is the default in material\n    let diameter: number = TD_CIRCLE_DIAMETER;\n    // if height is provided, then we take that as diameter\n    if (this.height) {\n      diameter = this.height;\n      // else if its not provided, then we take the host height\n    } else if (this.height === undefined) {\n      diameter = this._hostHeight();\n    }\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\n      this._circleDiameter = Math.floor(diameter);\n    } else {\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\n    }\n  }\n\n  /**\n   * Returns the host height of the loading component\n   */\n  private _hostHeight(): number {\n    if (<HTMLElement>this._elementRef.nativeElement) {\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return 0;\n  }\n}\n","import { Injectable, ComponentFactoryResolver, ChangeDetectorRef, Provider, SkipSelf, Optional, EmbeddedViewRef } from '@angular/core';\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingStyle } from '../loading.component';\nimport { ITdLoadingConfig } from './loading.service';\n\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\n  height?: number;\n  style?: LoadingStyle;\n}\n\nexport interface ILoadingRef {\n  observable: Observable<any>;\n  componentRef: ComponentRef<any>;\n  subject?: Subject<any>;\n  times?: number;\n}\n\n/**\n * NOTE: @internal usage only.\n */\n@Injectable()\nexport class TdLoadingFactory {\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _overlay: Overlay,\n              private _injector: Injector) {\n  }\n\n  /**\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\n   * into it. Leveraging the state and configuration from it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\n    let loadingRef: ILoadingRef = this._initializeContext();\n    let loading: boolean = false;\n    let overlayRef: OverlayRef;\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        overlayRef = this._createOverlay();\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\n        this._mapOptions(options, loadingRef.componentRef.instance);\n        loadingRef.componentRef.instance.startInAnimation();\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          loadingRef.componentRef.destroy();\n          overlayRef.detach();\n          overlayRef.dispose();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\n   * perfectly when overlaying it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createOverlayComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\n                                templateRef: TemplateRef<Object>): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\n    viewContainerRef.clear();\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        loadingRef.componentRef.instance.startOutAnimation();\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Replaces the template with the loading component depending if it was registered or resolved.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createReplaceComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\n                                templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\n    let nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling ?\n      nativeElement.nextElementSibling.scrollHeight : undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    // passing context so when the template is attached, we can keep the reference of the variables\n    let contentRef: EmbeddedViewRef<Object> = viewContainerRef.createEmbeddedView(templateRef, context);\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        // detach the content and attach the loader if loader is there\n        let index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\n        if (index < 0) {\n          viewContainerRef.detach(viewContainerRef.indexOf(contentRef));\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n        }\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          // detach loader and attach the content if content is there\n          let index: number = viewContainerRef.indexOf(contentRef);\n          if (index < 0) {\n            viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\n            viewContainerRef.insert(contentRef, 0);\n          }\n          /**\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\n           * with \"OnPush\" change detection\n           */\n          contentRef.detectChanges();\n          contentRef.markForCheck();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a fullscreen overlay for the loading usage.\n   */\n  private _createOverlay(): OverlayRef {\n    let state: OverlayConfig = new OverlayConfig();\n    state.hasBackdrop = false;\n    state.positionStrategy = this._overlay.position().global().centerHorizontally().centerVertically();\n    return this._overlay.create(state);\n  }\n\n  /**\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\n   */\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\n    let compRef: ILoadingRef = this._initializeContext();\n    compRef.componentRef = this._componentFactoryResolver\n    .resolveComponentFactory(TdLoadingComponent).create(this._injector);\n    this._mapOptions(options, compRef.componentRef.instance);\n    return compRef;\n  }\n\n  /**\n   * Initialize context for loading component.\n   */\n  private _initializeContext(): ILoadingRef {\n    let subject: Subject<any> = new Subject<any>();\n    return {\n      observable: subject.asObservable(),\n      subject: subject,\n      componentRef: undefined,\n      times: 0,\n    };\n  }\n\n  /**\n   * Maps configuration to the loading component instance.\n   */\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\n    instance.style = options.style;\n    if (options.type !== undefined) {\n      instance.type = options.type;\n    }\n    if (options.height !== undefined) {\n      instance.height = options.height;\n    }\n    if (options.mode !== undefined) {\n      instance.mode = options.mode;\n    }\n    if (options.color !== undefined) {\n      instance.color = options.color;\n    }\n  }\n}\n\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\n    parent: TdLoadingFactory, componentFactoryResolver: ComponentFactoryResolver, overlay: Overlay, injector: Injector): TdLoadingFactory {\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\n}\n\nexport const LOADING_FACTORY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingFactory,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\n\nexport interface ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n}\n\nexport class TdLoadingConfig implements ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n\n  constructor(config: ITdLoadingConfig) {\n    this.name = config.name;\n    if (!this.name) {\n      throw Error('Name is required for [TdLoading] configuration.');\n    }\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\n    this.type = config.type ? config.type : LoadingType.Circular;\n    this.color = config.color ? config.color : 'primary';\n  }\n}\n\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\n  strategy?: LoadingStrategy;\n}\n\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\n  name: string;\n  type: LoadingType;\n  mode: LoadingMode;\n  strategy: LoadingStrategy;\n\n  constructor(config: ITdLoadingDirectiveConfig) {\n    super(config);\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\n  }\n}\n\n@Injectable()\nexport class TdLoadingService {\n\n  private _context: {[key: string]: ILoadingRef} = {};\n  private _timeouts: {[key: string]: any} = {};\n\n  constructor(private _loadingFactory: TdLoadingFactory) {\n    this.create({\n      name: 'td-loading-main',\n    });\n  }\n\n  /**\n   * params:\n   * - config: ILoadingDirectiveConfig\n   * - viewContainerRef: ViewContainerRef\n   * - templateRef: TemplateRef<Object>\n   *\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\n   * Replaces the templateRef with the mask when a request is registered on it.\n   *\n   * NOTE: @internal usage only.\n   */\n  createComponent(config: ITdLoadingDirectiveConfig, viewContainerRef: ViewContainerRef,\n                  templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\n    let directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\n    if (this._context[directiveConfig.name]) {\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\n    }\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(directiveConfig, viewContainerRef, templateRef);\n    } else {\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(directiveConfig, viewContainerRef, templateRef, context);\n    }\n    return this._context[directiveConfig.name];\n  }\n\n  /**\n   * params:\n   * - config: ITdLoadingConfig\n   *\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\n   * Only displayed when the mask has a request registered on it.\n   */\n  public create(config: ITdLoadingConfig): void {\n    let fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\n    this.removeComponent(fullscreenConfig.name);\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\n  }\n\n  /**\n   * params:\n   * - name: string\n   *\n   * Removes `loading` component from service context.\n   */\n  public removeComponent(name: string): void {\n    if (this._context[name]) {\n      this._context[name].subject.unsubscribe();\n      if (this._context[name].componentRef) {\n        this._context[name].componentRef.destroy();\n      }\n      this._context[name] = undefined;\n      delete this._context[name];\n    }\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - registers?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass registers argument to set a number of register calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.register()\n   */\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\n    // try registering into the service if the loading component has been instanciated or if it exists.\n    if (this._context[name]) {\n      registers = registers < 1 ? 1 : registers;\n      this._context[name].times += registers;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    } else {\n      // if it doesnt exist, set a timeout so its registered after change detection happens\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\n      if (!this._timeouts[name]) {\n        this._timeouts[name] = setTimeout(() => {\n          this.register(name, registers);\n        });\n      } else {\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\n        this._clearTimeout(name);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - resolves?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass resolves argument to set a number of resolve calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolve()\n   */\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      resolves = resolves < 1 ? 1 : resolves;\n      if (this._context[name].times > 0) {\n        let times: number = this._context[name].times;\n        times -= resolves;\n        this._context[name].times = times < 0 ? 0 : times;\n      }\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * returns: true if successful\n   *\n   * Resolves all request for the loading mask referenced by the name parameter.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolveAll()\n   */\n  public resolveAll(name: string = 'td-loading-main'): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      this._context[name].times = 0;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - value: number\n   * returns: true if successful\n   *\n   * Set value on a loading mask referenced by the name parameter.\n   * Usage only available if its mode is 'determinate' and if loading is showing.\n   */\n  public setValue(name: string, value: number): boolean {\n    if (this._context[name]) {\n      let instance: TdLoadingComponent = this._context[name].componentRef.instance;\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\n        instance.value = value;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Clears timeout linked to the name.\n   * @param name Name of the loading component to be cleared\n   */\n  private _clearTimeout(name: string): void {\n    clearTimeout(this._timeouts[name]);\n    delete this._timeouts[name];\n  }\n}\n\nexport function LOADING_PROVIDER_FACTORY(\n    parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\n  return parent || new TdLoadingService(loadingFactory);\n}\n\nexport const LOADING_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingService,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\n  useFactory: LOADING_PROVIDER_FACTORY,\n};\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\n\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\nimport { TdLoadingService } from '../services/loading.service';\nimport { ILoadingRef } from '../services/loading.factory';\n\n/**\n * Context class for variable reference\n */\nexport class TdLoadingContext {\n  public $implicit: any = undefined;\n  public tdLoading: any = undefined;\n}\n\n// Constant for generation of the id for the next component\nlet TD_LOADING_NEXT_ID: number = 0;\n\n@Directive({\n  selector: '[tdLoading]',\n})\nexport class TdLoadingDirective implements OnInit, OnDestroy {\n\n  private _context: TdLoadingContext = new TdLoadingContext();\n  private _type: LoadingType;\n  private _mode: LoadingMode;\n  private _strategy: LoadingStrategy;\n  private _name: string;\n  private _loadingRef: ILoadingRef;\n\n  /**\n   * tdLoading: string\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\n   */\n  @Input('tdLoading')\n  set name(name: string) {\n    if (!this._name) {\n      if (name) {\n        this._name = name;\n      }\n    }\n  }\n\n  /**\n   * tdLoadingUntil?: any\n   * If its null, undefined or false it will be used to register requests to the mask.\n   * Else if its any value that can be resolved as true, it will resolve the mask.\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\n   */\n  @Input('tdLoadingUntil')\n  set until(until: any) {\n    if (!this._name) {\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\n    }\n    this._context.$implicit = this._context.tdLoading = until;\n    if (!until) {\n      this._loadingService.register(this._name);\n    } else {\n      this._loadingService.resolveAll(this._name);\n    }\n  }\n\n  /**\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\n   * Sets the type of loading mask depending on value.\n   * Defaults to [LoadingType.Circular | 'circular'].\n   */\n  @Input('tdLoadingType')\n  set type(type: LoadingType) {\n    switch (type) {\n      case LoadingType.Linear:\n        this._type = LoadingType.Linear;\n        break;\n      default:\n        this._type = LoadingType.Circular;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\n   * Sets the mode of loading mask depending on value.\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\n   */\n  @Input('tdLoadingMode')\n  set mode(mode: LoadingMode) {\n    switch (mode) {\n      case LoadingMode.Determinate:\n        this._mode = LoadingMode.Determinate;\n        break;\n      default:\n        this._mode = LoadingMode.Indeterminate;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\n   * Sets the strategy of loading mask depending on value.\n   * Defaults to [LoadingMode.Replace | 'replace'].\n   */\n  @Input('tdLoadingStrategy')\n  set strategy(stategy: LoadingStrategy) {\n    switch (stategy) {\n      case LoadingStrategy.Overlay:\n        this._strategy = LoadingStrategy.Overlay;\n        break;\n      default:\n        this._strategy = LoadingStrategy.Replace;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the loading component. Defaults to \"primary\"\n   */\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _viewContainerRef: ViewContainerRef,\n              private _templateRef: TemplateRef<TdLoadingContext>,\n              private _loadingService: TdLoadingService) {}\n\n  /**\n   * Registers component in the DOM, so it will be available when calling resolve/register.\n   */\n  ngOnInit(): void {\n    this._registerComponent();\n  }\n\n  /**\n   * Remove component when directive is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._loadingService.removeComponent(this._name);\n    this._loadingRef = undefined;\n  }\n\n  /**\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\n   */\n  private _registerComponent(): void {\n    if (!this._name) {\n      throw new Error('Name is needed to register loading directive');\n    }\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\n    if (!this._loadingRef) {\n      this._loadingRef = this._loadingService.createComponent({\n        name: this._name,\n        type: this._type,\n        mode: this._mode,\n        color: this.color,\n        strategy: this._strategy,\n      }, this._viewContainerRef, this._templateRef, this._context);\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\nimport { TdLoadingDirective } from './directives/loading.directive';\nimport { TdLoadingComponent } from './loading.component';\n\nconst TD_LOADING: Type<any>[] = [\n  TdLoadingComponent,\n  TdLoadingDirective,\n];\n\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [\n  TdLoadingComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    OverlayModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_LOADING,\n  ],\n  exports: [\n    TD_LOADING,\n  ],\n  providers: [\n    LOADING_FACTORY_PROVIDER,\n    LOADING_PROVIDER,\n  ],\n  entryComponents: [\n    TD_LOADING_ENTRY_COMPONENTS,\n  ],\n})\nexport class CovalentLoadingModule {\n\n}\n","import { Injectable, NgZone, SkipSelf, Optional, Provider } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\n\n@Injectable()\nexport class TdMediaService {\n\n  private _resizing: boolean = false;\n  private _globalSubscription: Subscription;\n  private _queryMap: Map<string, string> = new Map<string, string>();\n  private _querySources: { [key: string]: BehaviorSubject<boolean>} = {};\n  private _queryObservables: {[key: string]: Observable<boolean>} = {};\n\n  constructor(private _ngZone: NgZone) {\n    this._queryMap.set('xs', '(max-width: 599px)');\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\n    this._queryMap.set('xl', '(min-width: 1920px)');\n    this._queryMap.set('landscape', '(orientation: landscape)');\n    this._queryMap.set('portrait', '(orientation: portrait)');\n    this._queryMap.set('print', 'print');\n\n    this._resizing = false;\n    // we make sure that the resize checking happend outside of Angular since it happens often\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window, 'resize').subscribe(() => {\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\n        if (!this._resizing) {\n          this._resizing = true;\n          setTimeout(() => {\n            this._onResize();\n            this._resizing = false;\n          }, 100);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deregisters a query so its stops being notified or used.\n   */\n  deregisterQuery(query: string): void {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    this._querySources[query].unsubscribe();\n    delete this._querySources[query];\n    delete this._queryObservables[query];\n  }\n\n  /**\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\n   */\n  public query(query: string): boolean {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    return this._ngZone.run(() => {\n      return matchMedia(query).matches;\n    });\n  }\n\n  /**\n   * Registers a media query and returns an [Observable] that will re-evaluate and\n   * return if the given media query matches on window resize.\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\n   */\n  public registerQuery(query: string): Observable<boolean> {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    if (!this._querySources[query]) {\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\n      this._queryObservables[query] = this._querySources[query].asObservable();\n    }\n    return this._queryObservables[query];\n  }\n\n  /**\n   * Trigger a match media event on all subscribed observables.\n   */\n  public broadcast(): void {\n    this._onResize();\n  }\n\n  private _onResize(): void {\n    for (let query in this._querySources) {\n      this._ngZone.run(() => {\n        this._matchMediaTrigger(query);\n      });\n    }\n  }\n\n  private _matchMediaTrigger(query: string): void {\n    this._querySources[query].next(matchMedia(query).matches);\n  }\n}\n\nexport function MEDIA_PROVIDER_FACTORY(\n    parent: TdMediaService, ngZone: NgZone): TdMediaService {\n  return parent || new TdMediaService(ngZone);\n}\n\nexport const MEDIA_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdMediaService,\n  deps: [[new Optional(), new SkipSelf(), TdMediaService], NgZone],\n  useFactory: MEDIA_PROVIDER_FACTORY,\n};\n","import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: {[key: string]: string} = {};\n  private _styles: {[key: string]: string} = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) { }\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (let attr in this._attributes) {\n      if (this._matches) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\n      }\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      if (this._matches) {\n        this._renderer.addClass(this._elementRef.nativeElement, className);\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\n      }\n    });\n  }\n\n  private _changeStyles(): void {\n    for (let style in this._styles) {\n      if (this._matches) {\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\n      } else {\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\n      }\n    }\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MEDIA_PROVIDER } from './services/media.service';\nimport { TdMediaToggleDirective } from './directives/media-toggle.directive';\n\nconst TD_MEDIA: Type<any>[] = [\n  TdMediaToggleDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_MEDIA,\n  ],\n  exports: [\n    TD_MEDIA,\n  ],\n  providers: [\n    MEDIA_PROVIDER,\n  ],\n})\nexport class CovalentMediaModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class TdMenuComponent {\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdMenuComponent } from './menu.component';\n\nconst TD_MENU: Type<any>[] = [\n  TdMenuComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    MatDividerModule,\n  ],\n  declarations: [\n    TD_MENU,\n  ],\n  exports: [\n    TD_MENU,\n  ],\n})\nexport class CovalentMenuModule {\n\n}\n","import { Component, ViewChild, OnInit, Input, Output, EventEmitter, Optional,\n         ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Dir } from '@angular/cdk/bidi';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\n\nimport { debounceTime, skip } from 'rxjs/operators';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) { }\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchInputMixinBase = mixinControlValueAccessor(TdSearchInputBase);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdSearchInputComponent),\n    multi: true,\n  }],\n  selector: 'td-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('searchState', [\n      state('hide-left', style({\n        transform: 'translateX(-150%)',\n        display: 'none',\n      })),\n      state('hide-right', style({\n        transform: 'translateX(150%)',\n        display: 'none',\n      })),\n      state('show',  style({\n        transform: 'translateX(0%)',\n        display: 'block',\n      })),\n      transition('* => show', animate('200ms ease-in')),\n      transition('show => *', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchInputComponent extends _TdSearchInputMixinBase implements IControlValueAccessor, OnInit {\n\n  @ViewChild(MatInput) _input: MatInput;\n\n  /**\n   * appearance?: MatFormFieldAppearance\n   * Appearance style for the underlying input component.\n   */\n  @Input('appearance') appearance: MatFormFieldAppearance;\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._input.ngControl.valueChanges.pipe(\n      debounceTime(this.debounce),\n      skip(1), // skip first change when value is set to undefined\n    ).subscribe((value: string) => {\n      this._searchTermChanged(value);\n    });\n  }\n\n  /**\n   * Method to focus to underlying input.\n   */\n  focus(): void {\n    this._input.focus();\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n\n  stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  handleSearch(event: Event): void {\n    this.stopPropagation(event);\n    this.onSearch.emit(this.value);\n  }\n\n  /**\n   * Method to clear the underlying input.\n   */\n  clearSearch(): void {\n    this.value = '';\n    this._changeDetectorRef.markForCheck();\n    this.onClear.emit(undefined);\n  }\n\n  private _searchTermChanged(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n}\n","import { Component, ViewChild, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\n\nimport { TdSearchInputComponent } from '../search-input/search-input.component';\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchBoxBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) { }\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdSearchBoxComponent),\n    multi: true,\n  }],\n  selector: 'td-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('inputState', [\n      state('0', style({\n        width: '0%',\n        margin: '0px',\n      })),\n      state('1',  style({\n        width: '100%',\n        margin: AUTO_STYLE,\n      })),\n      transition('0 => 1', animate('200ms ease-in')),\n      transition('1 => 0', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {\n\n  private _searchVisible: boolean = false;\n  @ViewChild(TdSearchInputComponent) _searchInput: TdSearchInputComponent;\n\n  get searchVisible(): boolean {\n    return this._searchVisible;\n  }\n\n  /**\n   * appearance?: MatFormFieldAppearance\n   * Appearance style for the underlying input component.\n   */\n  @Input('appearance') appearance: MatFormFieldAppearance;\n\n  /**\n   * backIcon?: string\n   * The icon used to close the search toggle, only shown when [alwaysVisible] is false.\n   * Defaults to 'search' icon.\n   */\n  @Input('backIcon') backIcon: string = 'search';\n\n  /**\n   * searchIcon?: string\n   * The icon used to open/focus the search toggle.\n   * Defaults to 'search' icon.\n   */\n  @Input('searchIcon') searchIcon: string = 'search';\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * alwaysVisible?: boolean\n   * Sets if the input should always be visible. Defaults to 'false'.\n   */\n  @Input('alwaysVisible') alwaysVisible: boolean = false;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when the search icon is clicked.\n   */\n  searchClicked(): void {\n    if (!this.alwaysVisible && this._searchVisible) {\n      this.value = '';\n      this.handleClear();\n    } else if (this.alwaysVisible || !this._searchVisible) {\n      this._searchInput.focus();\n    }\n    this.toggleVisibility();\n  }\n\n  toggleVisibility(): void {\n    this._searchVisible = !this._searchVisible;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  handleSearchDebounce(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n  handleSearch(value: string): void {\n    this.onSearch.emit(value);\n  }\n\n  handleClear(): void {\n    this.onClear.emit(undefined);\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdSearchInputComponent } from './search-input/search-input.component';\nimport { TdSearchBoxComponent } from './search-box/search-box.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdSearchInputComponent,\n    TdSearchBoxComponent,\n  ],\n  exports: [\n    TdSearchInputComponent,\n    TdSearchBoxComponent,\n  ],\n})\nexport class CovalentSearchModule {\n\n}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  separatorIcon: string = 'chevron_right';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport {\n  Subscription,\n  Subject,\n  fromEvent,\n  merge,\n} from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n} from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input('separatorIcon') separatorIcon: string = 'chevron_right';\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private _calculateVisibility(): void {\n    let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    let hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      let breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if ((crumbWidthSum + breadcrumb.width) > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n  exports: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n})\nexport class CovalentBreadcrumbsModule {\n\n}\n","import { Component, Directive, Input, Output, TemplateRef, ViewChild,\n         ViewContainerRef, ContentChild, OnInit } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective, TemplatePortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nexport enum StepState {\n  None = 'none',\n  Required = 'required',\n  Complete = 'complete',\n}\n\n@Directive({\n  selector: '[td-step-label]ng-template',\n})\nexport class TdStepLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-actions]ng-template',\n})\nexport class TdStepActionsDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-summary]ng-template',\n})\nexport class TdStepSummaryDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdStepBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepMixinBase = mixinDisableRipple(mixinDisabled(TdStepBase));\n\n@Component({\n  selector: 'td-step',\n  inputs: ['disabled', 'disableRipple'],\n  templateUrl: './step.component.html',\n})\nexport class TdStepComponent extends _TdStepMixinBase implements OnInit, ICanDisable, ICanDisableRipple {\n\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  private _contentPortal: TemplatePortal<any>;\n  get stepContent(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n  @ContentChild(TdStepLabelDirective) stepLabel: TdStepLabelDirective;\n  @ContentChild(TdStepActionsDirective) stepActions: TdStepActionsDirective;\n  @ContentChild(TdStepSummaryDirective) stepSummary: TdStepSummaryDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdStepComponent] header.\n   * Defaults to 'Step #'\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdStepComponent] header.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles [TdStepComponent] between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._setActive(coerceBooleanProperty(active));\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of [TdStepComponent] depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * activated?: function\n   * Event emitted when [TdStepComponent] is activated.\n   */\n  @Output('activated') onActivated: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * deactivated?: function\n   * Event emitted when [TdStepComponent] is deactivated.\n   */\n  @Output('deactivated') onDeactivated: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n  /**\n   * Toggle active state of [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setActive(!this._active);\n  }\n\n  /**\n   * Opens [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setActive(true);\n  }\n\n  /**\n   * Closes [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setActive(false);\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this._state === StepState.Complete;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._active) {\n      this._active = false;\n      this._onDeactivated();\n    }\n  }\n\n  /**\n   * Method to change active state internally and emit the [onActivated] event if 'true' or [onDeactivated]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   * returns true if successfully changed state\n   */\n  private _setActive(newActive: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._active !== newActive) {\n      this._active = newActive;\n      if (newActive) {\n        this._onActivated();\n      } else {\n        this._onDeactivated();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onActivated(): void {\n    this.onActivated.emit(undefined);\n  }\n\n  private _onDeactivated(): void {\n    this.onDeactivated.emit(undefined);\n  }\n}\n","import { Component, Input, Output } from '@angular/core';\nimport { OnDestroy, AfterContentInit } from '@angular/core';\nimport { EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdStepComponent } from './step.component';\n\nexport interface IStepChangeEvent {\n  newStep: TdStepComponent;\n  prevStep: TdStepComponent;\n}\n\nexport enum StepMode {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\n@Component({\n  selector: 'td-steps',\n  styleUrls: ['./steps.component.scss' ],\n  templateUrl: './steps.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps',\n  },\n})\nexport class TdStepsComponent implements OnDestroy, AfterContentInit {\n\n  private _subcriptions: Subscription[];\n  private _mode: StepMode = StepMode.Vertical;\n  private _steps: QueryList<TdStepComponent>;\n\n  @ContentChildren(TdStepComponent)\n  set stepsContent(steps: QueryList<TdStepComponent>) {\n    if (steps) {\n      this._steps = steps;\n      this._registerSteps();\n    }\n  }\n\n  get steps(): TdStepComponent[] {\n    return this._steps.toArray();\n  }\n  prevStep: TdStepComponent;\n\n  /**\n   * mode?: StepMode or [\"vertical\" | \"horizontal\"]\n   * Defines if the mode of the [TdStepsComponent].  Defaults to [StepMode.Vertical | \"vertical\"]\n   */\n  @Input('mode')\n  set mode(mode: StepMode) {\n    switch (mode) {\n      case StepMode.Horizontal:\n        this._mode = StepMode.Horizontal;\n        break;\n      default:\n        this._mode = StepMode.Vertical;\n    }\n  }\n  get mode(): StepMode {\n    return this._mode;\n  }\n\n  /**\n   * stepChange?: function\n   * Method to be executed when [onStepChange] event is emitted.\n   * Emits an [IStepChangeEvent] implemented object.\n   */\n  @Output('stepChange') onStepChange: EventEmitter<IStepChangeEvent> = new EventEmitter<IStepChangeEvent>();\n\n  /**\n   * Executed after content is initialized, loops through any [TdStepComponent] children elements,\n   * assigns them a number and subscribes as an observer to their [onActivated] event.\n   */\n  ngAfterContentInit(): void {\n    this._registerSteps();\n  }\n\n  /**\n   * Unsubscribes from [TdStepComponent] children elements when component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._deregisterSteps();\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Horizontal | 'horizontal'], else 'false'.\n   */\n  isHorizontal(): boolean {\n    return this._mode === StepMode.Horizontal;\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Vertical | 'vertical'], else 'false'.\n   */\n  isVertical(): boolean {\n    return this._mode === StepMode.Vertical;\n  }\n\n  areStepsActive(): boolean {\n    return this._steps.filter((step: TdStepComponent) => {\n      return step.active;\n    }).length > 0;\n  }\n\n  /**\n   * Wraps previous and new [TdStepComponent] numbers in an object that implements [IStepChangeEvent]\n   * and emits [onStepChange] event.\n   */\n  private _onStepSelection(step: TdStepComponent): void {\n    if (this.prevStep !== step) {\n      let prevStep: TdStepComponent = this.prevStep;\n      this.prevStep = step;\n      let event: IStepChangeEvent = {\n        newStep: step,\n        prevStep: prevStep,\n      };\n      this._deactivateAllBut(step);\n      this.onStepChange.emit(event);\n    }\n  }\n\n  /**\n   * Loops through [TdStepComponent] children elements and deactivates them ignoring the one passed as an argument.\n   */\n  private _deactivateAllBut(activeStep: TdStepComponent): void {\n    this._steps.filter((step: TdStepComponent) => step !== activeStep)\n    .forEach((step: TdStepComponent) => {\n      step.active = false;\n    });\n  }\n\n  private _registerSteps(): void {\n    this._subcriptions = [];\n    this._steps.toArray().forEach((step: TdStepComponent) => {\n      let subscription: Subscription = step.onActivated.asObservable().subscribe(() => {\n        this._onStepSelection(step);\n      });\n      this._subcriptions.push(subscription);\n    });\n  }\n\n  private _deregisterSteps(): void {\n    if (this._subcriptions) {\n      this._subcriptions.forEach((subs: Subscription) => {\n        subs.unsubscribe();\n      });\n      this._subcriptions = undefined;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nimport { StepState } from '../step.component';\n\nexport class TdStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdStepHeaderBase));\n\n@Component({\n  selector: 'td-step-header',\n  inputs: ['disabled', 'disableRipple'],\n  styleUrls: ['./step-header.component.scss' ],\n  templateUrl: './step-header.component.html',\n})\nexport class TdStepHeaderComponent extends _TdStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n\n  /**\n   * Number assigned to [TdStepHeaderComponent].\n   */\n  @Input('number') number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * tabIndex?: number\n   * tabIndex of the step header for a11y\n   */\n  @Input('tabIndex') tabIndex: number;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\nimport { StepState } from '../step.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  selector: 'td-step-body',\n  styleUrls: ['./step-body.component.scss' ],\n  templateUrl: './step-body.component.html',\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdStepBodyComponent {\n\n  @ViewChild('contentRef', { read: ElementRef }) contentRef: ElementRef;\n\n  get hasContent(): boolean {\n    return this.contentRef &&\n          (this.contentRef.nativeElement.children.length > 0 || !!this.contentRef.nativeElement.textContent.trim());\n  }\n\n  @ViewChild('actionsRef', { read: ElementRef }) actionsRef: ElementRef;\n\n  get hasActions(): boolean {\n    return this.actionsRef &&\n          (this.actionsRef.nativeElement.children.length > 0 || !!this.actionsRef.nativeElement.textContent.trim());\n  }\n\n  @ViewChild('summaryRef', { read: ElementRef }) summaryRef: ElementRef;\n\n  get hasSummary(): boolean {\n    return this.summaryRef &&\n          (this.summaryRef.nativeElement.children.length > 0 || !!this.summaryRef.nativeElement.textContent.trim());\n  }\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on body.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of body.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n}\n","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, ElementRef } from '@angular/core';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, ICanDisableRipple } from '@covalent/core/common';\nimport { _TdStepMixinBase, StepState } from '../../step.component';\n\n@Component({\n  selector: '[td-step-link],[tdStepLink]',\n  styleUrls: ['./nav-step-link.component.scss'],\n  templateUrl: './nav-step-link.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    '[class.td-step-link]': 'true',\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[class.mat-disabled]': 'disabled || null',\n    '(click)': '_handleClick($event)',\n  },\n})\nexport class TdNavStepLinkComponent extends _TdStepMixinBase implements ICanDisable, ICanDisableRipple {\n\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  // Number to display in step header\n  number: number;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of component depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * label?: string\n   * Label to display in step header\n   * Defaults to empty\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sublabel to display in step header\n   * Defaults to empty\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles component between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._active = coerceBooleanProperty(active);\n    this._changeDetectorRef.markForCheck();\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * tabIndex?: number\n   * tabIndex for component\n   */\n  @Input('tabIndex') tabIndex: number;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              public elementRef: ElementRef) {\n    super();\n  }\n\n  _handleClick(click: Event): void {\n    if (this.disabled) {\n      click.preventDefault();\n      click.stopImmediatePropagation();\n    }\n  }\n\n}\n","import { Component, Optional, ContentChildren, ViewChild, QueryList, OnDestroy, ChangeDetectionStrategy, \n         AfterContentInit, AfterContentChecked, ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';\n\nimport { Subject, merge, of } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][horizontal]',\n  styleUrls: ['./nav-steps-horizontal.component.scss'],\n  templateUrl: './nav-steps-horizontal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-horizontal',\n    '[class.td-step-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.td-step-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class TdNavStepsHorizontalComponent implements AfterContentChecked, AfterContentInit, OnDestroy {\n\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  private _widthSubject: Subject<number> = new Subject<number>();\n\n  private _scrollDistance: number = 0;\n  private _scrollDistanceChanged: boolean = false;\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls: boolean = false;\n\n  /** Whether the step list can be scrolled more towards the end. */\n  _disableScrollAfter: boolean = true;\n\n  /** Whether the step list can be scrolled more towards the beginning. */\n  _disableScrollBefore: boolean = true;\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepListContainer') _stepListContainer: ElementRef;\n  @ViewChild('stepList') _stepList: ElementRef;\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngAfterContentInit(): void {\n    merge(\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n      this._viewportRuler.change(150),\n      this._dir ? this._dir.change : of(undefined),\n      this._steps.changes,\n    ).pipe(\n      takeUntil(this._destroyed),\n    ).subscribe(() => {\n      this._configureSteps();\n      this.updatePagination();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentChecked(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n    if (this._scrollDistanceChanged) {\n      this._updateStepScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Listen to right and left key events to move the the viewport.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._scrollHeader('before');\n        event.preventDefault();\n        break;\n      case RIGHT_ARROW:\n        this._scrollHeader('after');\n        event.preventDefault();\n        break;\n      default:\n        // do something\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   */\n  updatePagination(): void {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateStepScrollPosition();\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n    /** Performs the CSS transformation on the step list that will cause the list to scroll. */\n  _updateStepScrollPosition(): void {\n    const translateX: number = this._getLayoutDirection() === 'ltr' ? -this.scrollDistance : this.scrollDistance;\n    // Move step list the amount of pixels scrolled\n    this._stepList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off.\n    if (this._getLayoutDirection() === 'ltr') {\n      this._stepListContainer.nativeElement.scrollLeft = 0;\n    } else {\n      this._stepListContainer.nativeElement.scrollLeft = this._getMaxScrollDistance();\n    }\n  }\n\n  /** Sets the distance in pixels that the step header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the step list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively).\n   */\n  _scrollHeader(scrollDir: ScrollDirection): void {\n    // Move the scroll distance one-half the length of the step list's viewport.\n    this.scrollDistance += (scrollDir === 'before' ? -1 : 1) * this._stepListContainer.nativeElement.offsetWidth / 2;\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * step list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   */\n  _checkPaginationEnabled(): void {\n    const isEnabled: boolean =\n        this._stepList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   */\n  _checkScrollingControls(): void {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance === 0;\n    this._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the step list container and step header container.\n   */\n  _getMaxScrollDistance(): number {\n    return (this._stepList.nativeElement.scrollWidth - this._stepListContainer.nativeElement.offsetWidth) || 0;\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    let stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        let separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-horizontal-line');\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n    \n  }\n\n}\n","import { Component, ContentChildren, ViewChild, QueryList, OnDestroy, ChangeDetectionStrategy, \n         AfterContentInit, Renderer2, ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][vertical]',\n  styleUrls: ['./nav-steps-vertical.component.scss'],\n  templateUrl: './nav-steps-vertical.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-vertical',\n  },\n})\nexport class TdNavStepsVerticalComponent implements AfterContentInit, OnDestroy {\n\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepList') _stepList: ElementRef;\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) { }\n\n  ngAfterContentInit(): void {\n    this._steps.changes.pipe(\n      takeUntil(this._destroyed),\n    ).subscribe(() => {\n      this._configureSteps();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    let stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        let separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-vertical-line-wrapper');\n        let separatorChild: any = this._renderer.createElement('div');\n        this._renderer.addClass(separatorChild, 'td-vertical-line');\n        this._renderer.appendChild(separator, separatorChild);\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n    \n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\n\n// Steps\nimport { TdStepsComponent } from './steps.component';\nimport { TdStepHeaderComponent } from './step-header/step-header.component';\nimport { TdStepBodyComponent } from './step-body/step-body.component';\nimport { TdStepComponent, TdStepLabelDirective, TdStepActionsDirective,\n         TdStepSummaryDirective } from './step.component';\n\n// Nav Steps\nimport { TdNavStepsHorizontalComponent } from './nav/nav-steps-horizontal/nav-steps-horizontal.component';\nimport { TdNavStepsVerticalComponent } from './nav/nav-steps-vertical/nav-steps-vertical.component';\nimport { TdNavStepLinkComponent } from './nav/nav-step-link/nav-step-link.component';\n\nconst TD_STEPS: Type<any>[] = [\n  TdStepsComponent,\n  TdStepComponent,\n  TdStepHeaderComponent,\n  TdStepBodyComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n  TdNavStepsHorizontalComponent,\n  TdNavStepsVerticalComponent,\n  TdNavStepLinkComponent,\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatRippleModule,\n    PortalModule,\n    ScrollDispatchModule,\n    CovalentCommonModule,\n  ],\n  declarations: [\n    TD_STEPS,\n  ],\n  exports: [\n    TD_STEPS,\n  ],\n})\nexport class CovalentStepsModule {\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { mixinDisabled, ICanDisable } from '@covalent/core/common';\n\nexport class TdTabOptionBase {\n  constructor(public _viewContainerRef: ViewContainerRef,\n              public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabOptionMixinBase = mixinDisabled(TdTabOptionBase);\n\n@Component({\n  selector: 'td-tab-option',\n  templateUrl: './tab-option.component.html',\n  styleUrls: ['./tab-option.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  inputs: ['disabled'],\n})\nexport class TdTabOptionComponent extends _TdTabOptionMixinBase implements ICanDisable, OnInit {\n\n  private _contentPortal: TemplatePortal<any>;\n  get content(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n\n  /**\n   * Value to which the option will be binded to.\n   */\n  @Input('value') value: any;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_viewContainerRef, _changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  AfterContentInit,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable,\n          mixinDisabled,\n          IControlValueAccessor,\n          mixinControlValueAccessor,\n          ICanDisableRipple,\n          mixinDisableRipple,\n} from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdTabOptionComponent } from './tab-option.component';\n\nexport class TdTabSelectBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabSelectMixinBase = mixinControlValueAccessor(mixinDisabled(mixinDisableRipple(TdTabSelectBase)));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdTabSelectComponent),\n    multi: true,\n  }],\n  selector: 'td-tab-select',\n  templateUrl: './tab-select.component.html',\n  styleUrls: ['./tab-select.component.scss'],\n  /* tslint:disable-next-line */\n  inputs: ['value', 'disabled', 'disableRipple'],\n})\nexport class TdTabSelectComponent extends _TdTabSelectMixinBase\n                                  implements IControlValueAccessor, ICanDisable, ICanDisableRipple, OnInit, AfterContentInit, OnDestroy {\n\n  private _subs: Subscription[] = [];\n\n  private _values: any[] = [];\n  private _selectedIndex: number = 0;\n  private _stretchTabs: boolean = false;\n\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Gets all tab option children\n   */\n  @ContentChildren(TdTabOptionComponent) readonly _tabOptions: QueryList<TdTabOptionComponent>;\n\n  get tabOptions(): TdTabOptionComponent[] {\n    return this._tabOptions ? this._tabOptions.toArray() : undefined;\n  }\n\n  /**\n   * Makes the tabs stretch to fit the parent container.\n   */\n  @Input('stretchTabs')\n  set stretchTabs(stretchTabs: boolean) {\n    this._stretchTabs = coerceBooleanProperty(stretchTabs);\n  }\n  get stretchTabs(): boolean {\n    return this._stretchTabs;\n  }\n\n  /**\n   * Color of the tab group.\n   */\n  @Input('color') color: ThemePalette;\n\n  /**\n   * Background color of the tab group.\n   */\n  @Input('backgroundColor') backgroundColor: ThemePalette;\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // subscribe to check if value changes and update the selectedIndex internally.\n    this._subs.push(\n      this.valueChanges.subscribe((value: any) => {\n        this._setValue(value);\n      }),\n    );\n  }\n\n  ngAfterContentInit(): void {\n    // subscribe to listen to any tab changes.\n    this._refreshValues();\n    this._subs.push(\n      this._tabOptions.changes.subscribe(() => {\n        this._refreshValues();\n      }),\n    );\n    // initialize value\n    Promise.resolve().then(() => {\n      this._setValue(this.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs && this._subs.length) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * Method executed when user selects a different tab\n   * This updates the new selectedIndex and infers what value should be mapped to.\n   */\n  selectedIndexChange(selectedIndex: number): void {\n    this._selectedIndex = selectedIndex;\n    let value: any = this._values[selectedIndex];\n    this.value = value;\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  /**\n   * Refresh the values array whenever the number of tabs gets updated\n   */\n  private _refreshValues(): void {\n    this._values = this.tabOptions.map((tabOption: TdTabOptionComponent) => {\n      return tabOption.value;\n    });\n  }\n\n  /**\n   * Try to set value depending if its part of our options\n   * else set the value of the first tab.\n   */\n  private _setValue(value: any): void {\n    let index: number = this._values.indexOf(value);\n    if (index > -1) {\n      this._selectedIndex = index;\n    } else {\n      this.value = this._values.length ? this._values[0] : undefined;\n      this._selectedIndex = 0;\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TdTabSelectComponent } from './tab-select.component';\nimport { TdTabOptionComponent } from './tab-option.component';\n\n@NgModule({\n  declarations: [\n    TdTabSelectComponent,\n    TdTabOptionComponent,\n  ], // directives, components, and pipes owned by this NgModule\n  imports: [\n    /** Angular Modules */\n    CommonModule,\n    FormsModule,\n    /** Material Modules */\n    PortalModule,\n    MatTabsModule,\n  ], // modules needed to run this module\n  exports: [\n    TdTabSelectComponent,\n    TdTabOptionComponent,\n  ],\n})\nexport class CovalentTabSelectModule {}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisable {\n  disabled: boolean;\n  onDisabledChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disabled(): boolean {\n      return this._disabled;\n    }\n    set disabled(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.onDisabledChange(this._disabled);\n      }\n    }\n\n    onDisabledChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisableRipple {\n  disableRipple: boolean;\n  onDisableRippleChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disableRipple(): boolean {\n      return this._disableRipple;\n    }\n    set disableRipple(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disableRipple !== newValue) {\n        this._disableRipple = newValue;\n        this.onDisableRippleChange(this._disableRipple);\n      }\n    }\n\n    onDisableRippleChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n"]}