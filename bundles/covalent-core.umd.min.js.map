{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@covalent/core/paging/paging-bar.component.ts","ng://@covalent/core/paging/paging.module.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-row.directive.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-container.component.ts","ng://@covalent/core/virtual-scroll/virtual-scroll.module.ts","ng://@covalent/core/notifications/notification-count.component.ts","ng://@covalent/core/notifications/notifications.module.ts","ng://@covalent/core/common/forms/auto-trim/auto-trim.directive.ts","ng://@covalent/core/common/directives/fullscreen/fullscreen.directive.ts","ng://@covalent/core/common/pipes/time-ago/time-ago.pipe.ts","ng://@covalent/core/common/pipes/time-difference/time-difference.pipe.ts","ng://@covalent/core/common/pipes/time-until/time-until.pipe.ts","ng://@covalent/core/common/pipes/bytes/bytes.pipe.ts","ng://@covalent/core/common/pipes/decimal-bytes/decimal-bytes.pipe.ts","ng://@covalent/core/common/pipes/digits/digits.pipe.ts","ng://@covalent/core/common/pipes/truncate/truncate.pipe.ts","ng://@covalent/core/common/common.module.ts","ng://@covalent/core/common/animations/rotate/rotate.animation.ts","ng://@covalent/core/common/animations/collapse/collapse.animation.ts","ng://@covalent/core/common/animations/fade/fadeInOut.animation.ts","ng://@covalent/core/common/animations/bounce/bounce.animation.ts","ng://@covalent/core/common/animations/flash/flash.animation.ts","ng://@covalent/core/common/animations/headshake/headshake.animation.ts","ng://@covalent/core/common/animations/jello/jello.animation.ts","ng://@covalent/core/common/animations/pulse/pulse.animation.ts","ng://@covalent/core/common/behaviors/control-value-accesor.mixin.ts","ng://@covalent/core/common/forms/validators/validators.ts","ng://@covalent/core/common/functions/convert.ts","ng://@covalent/core/common/functions/download.ts","ng://@covalent/core/message/message.component.ts","ng://@covalent/core/message/message.module.ts","ng://@covalent/core/chips/chips.component.ts","ng://@covalent/core/chips/chips.module.ts","ng://@covalent/core/data-table/data-table-row/data-table-row.component.ts","ng://@covalent/core/data-table/directives/data-table-template.directive.ts","ng://@covalent/core/data-table/data-table.component.ts","ng://@covalent/core/data-table/data-table-column/data-table-column.component.ts","ng://@covalent/core/data-table/data-table-cell/data-table-cell.component.ts","ng://@covalent/core/data-table/data-table-table/data-table-table.component.ts","ng://@covalent/core/data-table/data-table.module.ts","ng://@covalent/core/data-table/services/data-table.service.ts","ng://@covalent/core/dialogs/dialog.component.ts","ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts","ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts","ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts","ng://@covalent/core/dialogs/dialogs.module.ts","ng://@covalent/core/dialogs/services/dialog.service.ts","ng://@covalent/core/expansion-panel/expansion-panel.component.ts","ng://@covalent/core/expansion-panel/expansion-panel-group.component.ts","ng://@covalent/core/expansion-panel/expansion-panel.module.ts","ng://@covalent/core/file/directives/file-select.directive.ts","ng://@covalent/core/file/directives/file-drop.directive.ts","ng://@covalent/core/file/file-input/file-input.component.ts","ng://@covalent/core/file/file-upload/file-upload.component.ts","ng://@covalent/core/file/file.module.ts","ng://@covalent/core/file/services/file.service.ts","ng://@covalent/core/json-formatter/json-formatter.component.ts","ng://@covalent/core/json-formatter/json-formatter.module.ts","ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts","ng://@covalent/core/loading/loading.component.ts","ng://@covalent/core/loading/services/loading.factory.ts","ng://@covalent/core/loading/services/loading.service.ts","ng://@covalent/core/loading/directives/loading.directive.ts","ng://@covalent/core/loading/loading.module.ts","ng://@covalent/core/media/services/media.service.ts","ng://@covalent/core/media/directives/media-toggle.directive.ts","ng://@covalent/core/media/media.module.ts","ng://@covalent/core/menu/menu.component.ts","ng://@covalent/core/menu/menu.module.ts","ng://@covalent/core/search/search-input/search-input.component.ts","ng://@covalent/core/search/search-box/search-box.component.ts","ng://@covalent/core/search/search.module.ts","ng://@covalent/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.module.ts","ng://@covalent/core/steps/step.component.ts","ng://@covalent/core/steps/steps.component.ts","ng://@covalent/core/steps/step-header/step-header.component.ts","ng://@covalent/core/steps/step-body/step-body.component.ts","ng://@covalent/core/steps/nav/nav-step-link/nav-step-link.component.ts","ng://@covalent/core/steps/nav/nav-steps-horizontal/nav-steps-horizontal.component.ts","ng://@covalent/core/steps/nav/nav-steps-vertical/nav-steps-vertical.component.ts","ng://@covalent/core/steps/steps.module.ts","ng://@covalent/core/tab-select/tab-option.component.ts","ng://@covalent/core/tab-select/tab-select.component.ts","ng://@covalent/core/tab-select/tab-select.module.ts","ng://@covalent/core/nav-links/nav-links.component.ts","ng://@covalent/core/nav-links/nav-links.module.ts","ng://@covalent/core/common/functions/clipboard.ts","ng://@covalent/core/common/behaviors/disable-ripple.mixin.ts","ng://@covalent/core/common/behaviors/disabled.mixin.ts","ng://@covalent/core/common/functions/file.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","TdPagingBarComponent","_dir","_changeDetectorRef","_pageSize","_total","_page","_fromRow","_toRow","_initialized","_pageLinks","_pageLinkCount","_hitEnd","_hitStart","firstLast","initialPage","change","EventEmitter","defineProperty","pageLinkCount","coerceNumberProperty","_calculatePageLinks","markForCheck","pageSize","_handleOnChange","total","_calculateRows","Math","ceil","dir","ngOnInit","navigateToPage","page","maxPage","floor","firstPage","prevPage","nextPage","lastPage","isMinPage","isMaxPage","top","actualPageLinkCount","middlePageLinks","x","event","fromRow","toRow","emit","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","Dir","decorators","type","Optional","ChangeDetectorRef","Input","Output","CovalentPagingModule","NgModule","imports","CommonModule","MatIconModule","MatButtonModule","declarations","exports","TdVirtualScrollRowDirective","templateRef","viewContainerRef","_super","tslib_1.__extends","Directive","TemplateRef","ViewContainerRef","TemplatePortalDirective","TdVirtualScrollContainerComponent","_elementRef","_domSanitizer","_renderer","_subs","_bottom","Subject","_totalHeight","_hostHeight","_scrollVerticalOffset","bottom","trackBy","index","item","_data","data","_calculateVirtualRows","_virtualData","_rows","toArray","nativeElement","getBoundingClientRect","height","_offsetTransform","ngAfterViewInit","_this","changes","subscribe","pipe","debounceTime","lastRow","lastIndex","ngAfterViewChecked","newHostHeight","ngOnDestroy","forEach","sub","unsubscribe","handleScroll","element","verticalScroll","scrollTop","rowHeight","refresh","scrollTo","row","scrollToStart","scrollToEnd","totalHeight","TD_VIRTUAL_OFFSET","isFinite","offset","bypassSecurityTrustStyle","slice","Promise","resolve","then","ElementRef","DomSanitizer","Renderer2","ViewChildren","ContentChild","static","HostListener","TD_VIRTUAL_SCROLL","CovalentVirtualScrollModule","Top","Bottom","Center","Before","After","DEFAULT_NOTIFICATION_LIMIT","TdNotificationCountComponent","_notifications","_limit","color","_positionX","positionX","_positionY","positionY","notifications","limit","show","_hasContent","toString","isNaN","ngAfterContentInit","TdNotificationCountPositionX","TdNotificationCountPositionY","content","contentElement","children","textContent","trim","ViewChild","HostBinding","TD_NOTIFICATIONS","CovalentNotificationsModule","TdAutoTrimDirective","_model","onBlur","update","NgModel","Host","TdFullscreenDirective","_document","_el","fullScreenIsActive","fsChangeHandler","srcElement","_getFullScreenElement","toggleFullScreen","exitFullScreen","enterFullScreen","enterFullScreenMap","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","_b","tslib_1.__values","keys","_c","handler","exitFullScreenMap","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","_d","tdFullScreenElementMap","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","props","exportAs","Inject","DOCUMENT","TdTimeAgoPipe","transform","time","reference","Date","ref","getTime","startTime","now","diff","Pipe","name","TdTimeDifferencePipe","start","end","endTime","undefined","days","hours","minutes","seconds","daysFormatted","substring","TdTimeUntilPipe","TdBytesPipe","bytes","precision","parseInt","log","parseFloat","pow","toFixed","TdDecimalBytesPipe","TdDigitsPipe","_locale","_decimalPipe","DecimalPipe","digits","size","LOCALE_ID","TdTruncatePipe","text","truncated","substr","lastIndexOf","TD_DIRECTIVES","TD_VALIDATORS","TD_PIPES","CovalentCommonModule","FormsModule","tdRotateAnimation","trigger","state","style","params","degressStart","degreesEnd","transition","group","query","animateChild","optional","animate","duration","delay","ease","tdCollapseAnimation","overflow","AUTO_STYLE","tdFadeInOutAnimation","opacity","visibility","easeOnIn","easeOnOut","tdBounceAnimation","keyframes","animationTimingFunction","tdFlashAnimation","tdHeadshakeAnimation","tdJelloAnimation","tdPulseAnimation","noop","CovalentValidators","min","minValue","c","Validators","required","v","actualValue","max","maxValue","numberRequired","Number","convertObjectsToCSV","objects","keySeparator","lineSeparator","outputString","key","line","headers","join","formatJSON","json","indent","JSON","stringify","downloadFile","fileName","contents","mimeType","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","setAttribute","href","body","appendChild","click","revokeObjectURL","removeChild","TdMessageContainerDirective","viewContainer","TdMessageComponent","_opened","_hidden","_animating","icon","addClass","_color","removeClass","opened","open","close","animationDoneListener","_detach","_attach","_startAnimationState","toggle","_childElement","createEmbeddedView","_template","clear","animations","TD_MESSAGE","CovalentMessageModule","TdChipDirective","TdAutocompleteOptionDirective","_TdChipsMixinBase","mixinControlValueAccessor","mixinDisabled","TdChipsBase","TdChipsComponent","_outsideClickSubs","Subscription","EMPTY","_inputValueChangesSubs","_isMousedown","_length","_stacked","_requireMatch","_inputPosition","_chipAddition","_chipRemoval","_focused","_required","_tabIndex","_touchendDebounce","_internalClick","_internalActivateOption","inputControl","FormControl","debounce","add","remove","inputChange","chipFocus","chipBlur","compareWith","o1","o2","_items","items","_setFirstOptionActive","stacked","coerceBooleanProperty","inputPosition","requireMatch","chipAddition","_toggleInput","disabled","chipRemoval","canAddChip","placeholder","focusListener","focus","preventDefault","mousedownListener","timer","toPromise","clickListener","clickTarget","className","indexOf","stopPropagation","keydownListener","keyCode","TAB","removeFocusedState","ESCAPE","_inputChild","focused","_nativeInput","blur","_closeAutocomplete","valueChanges","_watchOutsideClick","ngDoCheck","onChange","_setInternalClick","onDisabledChange","_handleAddChip","selectedOptions","_options","filter","option","active","setInactiveStyles","_autocompleteTrigger","activeOption","addChip","setFocusedState","_openAutocomplete","setValue","findIndex","removeChip","removedValues","splice","_totalChips","_focusChip","_handleChipBlur","_handleChipFocus","_handleFocus","_focusFirstChip","_inputKeydown","UP_ARROW","LEFT_ARROW","DELETE","BACKSPACE","_focusLastChip","RIGHT_ARROW","_chipKeydown","canRemoveChip","DOWN_ARROW","_removeInputDisplay","panelOpen","openPanel","closePanel","_chipsChildren","enable","disable","setActiveStyles","merge","fromEvent","setTimeout","contains","onTouched","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","MatInput","MatAutocompleteTrigger","MatChip","MatOption","CovalentChipsModule","ReactiveFormsModule","MatInputModule","MatChipsModule","MatAutocompleteModule","TdDataTableColumnRowComponent","TdDataTableRowComponent","_selected","selected","TdDataTableTemplateDirective","Ascending","Descending","TdDataTableBase","_TdDataTableMixinBase","TdDataTableComponent","_hostWidth","_resizableColumns","_columnClientX","_onColumnResize","_widths","_onResize","_scrollHorizontalOffset","_onHorizontalScroll","_onVerticalScroll","_rowHeightCache","_selectable","_clickable","_multiple","_allSelected","_indeterminate","_sortable","_sortOrder","TdDataTableSortingOrder","_shiftPreviouslyPressed","_lastSelectedIndex","_firstSelectedIndex","_firstCheckboxValue","_templateMap","Map","sortChange","rowSelect","rowClick","selectAll","model","_resizingColumn","selectable","_scrollableDiv","_columns","hasData","k","find","label","cols","resizableColumns","clickable","multiple","sortable","columnName","column","columns","Error","_sortBy","order","sortOrder","toUpperCase","_resizeSubs","asObservable","_calculateWidths","_columnResizeSubs","clientX","_horizontalScrollSubs","horizontalScroll","_verticalScrollSubs","_valueChangesSubs","_templates","set","tdDataTableTemplate","ngAfterContentChecked","newHostWidth_1","width","_rowsChangedSubs","scrollLeft","getColumnWidth","getCellValue","nested","_getNestedValue","getTemplateRef","get","clearModel","_calculateCheckboxState","_selectAll","checked","toggledRows","isRowSelected","modelRow","val","rows","select","currentSelected","blockEvent","mouseEvent","shiftKey","firstIndex","_doSelection","rowSelected","disableTextSelection","onselectstart","enableTextSelection","handleRowClick","currentTarget","getAttribute","tagName","toLowerCase","handleSort","_rowKeyup","ENTER","SPACE","_handleStartColumnDrag","_handleColumnDrag","xPosition","proposedManualWidth","_colElements","projectedWidth","_handleEndColumnDrag","splitName","split","rowIndex","wasSelected","col","_adjustColumnWidth","_calculateWidth","_adjustColumnWidhts","fixedTotalWidth","flexibleWidths","hidden","recalculateHostWidth","hostWidth","newValue_1","adjustedNumber_1","colWidth","newFlexibleWidths","skipMinWidthProjection","widthOpts","renderedColumns","scrolledRows","rowHeightSum_1","hostHeight","ContentChildren","TdDataTableColumnComponent","numeric","_columnContent","handleClick","isAscending","isDescending","read","TdDataTableCellComponent","_align","align","TdDataTableTableComponent","TD_DATA_TABLE","CovalentDataTableModule","MatCheckboxModule","MatTooltipModule","MatPseudoCheckboxModule","TdDataTableService","filterData","searchTerm","ignoreCase","excludedColumns","preItemValue","sortData","sortBy","from","sort","compA","compB","direction","pageData","Injectable","providedIn","TdDialogTitleDirective","TdDialogContentDirective","TdDialogActionsDirective","TdDialogComponent","dialogTitle","dialogContent","dialogActions","TdAlertDialogComponent","_dialogRef","closeButton","MatDialogRef","TdConfirmDialogComponent","cancelButton","acceptButton","cancel","accept","TdPromptDialogComponent","_input","handleInputFocus","TD_DIALOGS","TD_DIALOGS_ENTRY_COMPONENTS","CovalentDialogsModule","MatDialogModule","entryComponents","TdDialogService","_dialogService","_dragDrop","rendererFactory","_renderer2","createRenderer","component","config","closeAll","openAlert","dialogConfig","_createConfig","dialogRef","alertDialogComponent","componentInstance","title","message","openConfirm","confirmDialogComponent","openPrompt","promptDialogComponent","openDraggable","_a","dragHandleSelectors","draggableClass","afterOpened","dialogElement","getElementById","id","draggableElement","createDrag","childComponent","firstElementChild","dragHandles","reduce","acc","curr","querySelectorAll","withHandles","rootElement","closest","withRootElement","boundaryElement","withBoundaryElement","MatDialogConfig","assign","MatDialog","DragDrop","RendererFactory2","TdExpansionPanelHeaderDirective","TdExpansionPanelLabelDirective","TdExpansionPanelSublabelDirective","TdExpansionPanelSummaryComponent","_TdExpansionPanelMixinBase","mixinDisableRipple","TdExpansionPanelBase","TdExpansionPanelComponent","_expand","expanded","collapsed","expand","_setExpand","clickEvent","_onCollapsed","newExpand","_onExpanded","TdExpansionPanelGroupComponent","_multi","_lastOpenedPanels","_destroyed","_stopWatchingPanels","_closeAllExcept","openedPanels","expansionPanels","expansionPanel","numOpenedPanels","_attachListeners","takeUntil","openAll","indexOfPanel","panel","TD_EXPANSION_PANEL","CovalentExpansionPanelModule","MatRippleModule","PortalModule","TdFileSelectDirective","fileSelect","target","HTMLInputElement","files","_TdFileDropMixinBase","TdFileDropBase","TdFileDropDirective","_element","fileDrop","onDrop","dataTransfer","_stopEvent","onDragOver","transfer","dropEffect","_typeCheck","types","mozItemCount","onDragEnter","onDragLeave","TdFileInputLabelDirective","_TdFileInputMixinBase","TdFileInputBase","TdFileInputComponent","_inputElement","handleSelect","writeValue","setProperty","inputElement","setDisabledState","isDisabled","_TdFileUploadMixinBase","TdFileUploadBase","TdFileUploadComponent","defaultColor","activeColor","cancelColor","upload","uploadPressed","_cancel","fileInput","TD_FILE","CovalentFileModule","TdFileService","_http","_progressSubject","_progressObservable","send","method","req","HttpRequest","reportProgress","HttpHeaders","HttpParams","fromObject","request","tap","handleEvent","options","Observable","subscriber","xhr","XMLHttpRequest","formData","FormData","file","append","onprogress","progress","lengthComputable","round","loaded","onreadystatechange","readyState","status","response","complete","setRequestHeader","HttpEventType","Sent","UploadProgress","Response","HttpClient","TdJsonFormatterComponent","_open","_levelsOpen","levelsOpen","isInteger","elipsis","_key","KEY_MAX_LENGTH","parseChildren","_children","isObject","getType","isArray","hasChildren","getValue","replace","getObjectName","object","date","results","exec","getPreview","previewData","startChar","endChar","PREVIEW_LIMIT","map","obj","previewString","ellipsis","PREVIEW_STRING_MAX_LENGTH","CovalentJsonFormatterModule","TdLayoutComponent","mode","sidenavWidth","containerAutosize","sidenav","MatSidenav","_TdLayoutToggleMixinBase","LayoutToggleBase","LayoutToggle","_layout","_hideWhenOpened","_noLayoutMessage","hideWhenOpened","_toggleVisibility","_toggleSubs","_animationStarted","onClick","setStyle","console","warn","TdLayoutToggleDirective","layout","renderer","elementRef","tdLayoutToggle","TdLayoutCloseDirective","tdLayoutClose","TdLayoutOpenDirective","tdLayoutOpen","TdLayoutNavComponent","_router","navigationRoute","handleNavigationClick","routerEnabled","navigateByUrl","Router","TdLayoutNavListComponent","TdLayoutNavListToggleDirective","tdLayoutNavListToggle","TdLayoutNavListCloseDirective","tdLayoutNavListClose","TdLayoutNavListOpenDirective","tdLayoutNavListOpen","TdLayoutCardOverComponent","cardWidth","TdLayoutManageListComponent","TdLayoutManageListToggleDirective","tdLayoutManageListToggle","TdLayoutManageListCloseDirective","tdLayoutManageListClose","TdLayoutManageListOpenDirective","tdLayoutManageListOpen","TdLayoutFooterComponent","TdNavigationDrawerMenuDirective","TdNavigationDrawerToolbarDirective","TdNavigationDrawerComponent","_sanitize","_menuToggled","_drawerMenu","_toolbar","_backgroundImage","backgroundUrl","sanitizedUrl","sanitize","SecurityContext","RESOURCE_URL","STYLE","_closeSubscription","openedChange","toggleMenu","isMenuAvailable","TD_LAYOUTS","CovalentLayoutModule","ScrollDispatchModule","MatSidenavModule","MatToolbarModule","MatCardModule","MatDividerModule","Circular","Linear","Determinate","Indeterminate","Overlay","Replace","FullScreen","None","TD_CIRCLE_DIAMETER","TdLoadingComponent","_animationIn","_animationOut","_mode","LoadingMode","_defaultMode","_value","_circleDiameter","animation","LoadingStyle","LoadingType","isOverlay","_setCircleDiameter","getHeight","isFullScreen","getCircleDiameter","getCircleStrokeWidth","strokeWidth","abs","isCircular","isLinear","animationComplete","fromState","outAnimationCompleted","inAnimationCompleted","startInAnimation","startOutAnimation","diameter","TdLoadingFactory","_componentFactoryResolver","_overlay","_injector","createFullScreenComponent","overlayRef","loadingRef","_initializeContext","loading","observable","distinctUntilChanged","registered","_createOverlay","componentRef","attach","ComponentPortal","_mapOptions","instance","changeDetectorRef","detectChanges","subs_1","destroy","detach","dispose","createOverlayComponent","_createComponent","TemplatePortal","insert","hostView","createReplaceComponent","context","nextElementSibling","scrollHeight","contentRef","subs_2","OverlayConfig","hasBackdrop","positionStrategy","position","global","centerHorizontally","centerVertically","compRef","resolveComponentFactory","subject","times","ComponentFactoryResolver","Injector","LOADING_FACTORY_PROVIDER_FACTORY","parent","componentFactoryResolver","overlay","injector","LOADING_FACTORY_PROVIDER","deps","SkipSelf","useFactory","TdLoadingDirectiveConfig","strategy","LoadingStrategy","TdLoadingConfig","TdLoadingService","_loadingFactory","_context","_timeouts","createComponent","directiveConfig","fullscreenConfig","removeComponent","register","registers","_clearTimeout","resolves","resolveAll","clearTimeout","LOADING_PROVIDER_FACTORY","loadingFactory","LOADING_PROVIDER","$implicit","tdLoading","TD_LOADING_NEXT_ID","TdLoadingDirective","_viewContainerRef","_templateRef","_loadingService","TdLoadingContext","_name","until","_type","_strategy","_registerComponent","_loadingRef","TD_LOADING","TD_LOADING_ENTRY_COMPONENTS","CovalentLoadingModule","MatProgressBarModule","MatProgressSpinnerModule","OverlayModule","TdMediaService","_ngZone","_resizing","_queryMap","_querySources","_queryObservables","_globalSubscription","runOutsideAngular","deregisterQuery","run","matchMedia","matches","registerQuery","BehaviorSubject","broadcast","this_1","_matchMediaTrigger","NgZone","TdMediaToggleDirective","_mediaService","_matches","_attributes","_styles","_classes","_query","attributes","classes","styles","_mediaChange","_subscription","_changeAttributes","_changeClasses","_changeStyles","attr","removeAttribute","removeStyle","TD_MEDIA","CovalentMediaModule","TdMenuComponent","TD_MENU","CovalentMenuModule","MatMenuModule","_TdSearchInputMixinBase","TdSearchInputBase","TdSearchInputComponent","showUnderline","clearIcon","searchDebounce","search","ngControl","skip","_searchTermChanged","handleBlur","handleSearch","clearSearch","display","_TdSearchBoxMixinBase","TdSearchBoxBase","TdSearchBoxComponent","_searchVisible","backIcon","searchIcon","alwaysVisible","searchClicked","handleClear","_searchInput","toggleVisibility","handleSearchDebounce","margin","CovalentSearchModule","TdBreadcrumbComponent","_displayCrumb","_width","separatorIcon","_displayIcon","shouldDisplay","_handleIconClick","host","class","TdBreadcrumbsComponent","_resizeSubscription","_widthSubject","hiddenBreadcrumbs","_calculateVisibility","nativeElementWidth","setCrumbIcons","getComputedStyle","borderLeft","borderRight","marginLeft","marginRight","paddingLeft","paddingRight","_breadcrumbs","breadcrumbArray","breadcrumb","crumbsArray","crumbWidthSum","hiddenCrumbs","displayCrumb","CovalentBreadcrumbsModule","Required","Complete","TdStepLabelDirective","TdStepActionsDirective","TdStepSummaryDirective","_TdStepMixinBase","TdStepBase","TdStepComponent","_active","_state","StepState","activated","deactivated","_contentPortal","_setActive","_content","isComplete","_onDeactivated","newActive","_onActivated","Vertical","Horizontal","TdStepsComponent","StepMode","stepChange","steps","_steps","_registerSteps","_deregisterSteps","isHorizontal","isVertical","areStepsActive","step","_onStepSelection","prevStep","event_1","newStep","_deactivateAllBut","activeStep","_subcriptions","subscription","subs","_TdStepHeaderMixinBase","TdStepHeaderBase","TdStepHeaderComponent","apply","isRequired","TdStepBodyComponent","actionsRef","summaryRef","TdNavStepLinkComponent","_handleClick","stopImmediatePropagation","[class.td-step-link]","[attr.tabindex]","[attr.disabled]","[class.mat-disabled]","(click)","TdNavStepsHorizontalComponent","_viewportRuler","_separators","_scrollDistance","_scrollDistanceChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","of","_configureSteps","updatePagination","_updateStepScrollPosition","_handleKeydown","_scrollHeader","_checkPaginationEnabled","_checkScrollingControls","_getLayoutDirection","translateX","scrollDistance","_stepList","_stepListContainer","_getMaxScrollDistance","scrollDir","offsetWidth","isEnabled","scrollWidth","separator","stepsArray","insertBefore","number","[class.td-step-header-pagination-controls-enabled]","[class.td-step-header-rtl]","ViewportRuler","Directionality","TdNavStepsVerticalComponent","separatorChild","TD_STEPS","CovalentStepsModule","_TdTabOptionMixinBase","TdTabOptionBase","TdTabOptionComponent","_TdTabSelectMixinBase","TdTabSelectBase","TdTabSelectComponent","_values","_selectedIndex","_stretchTabs","valueChange","_tabOptions","stretchTabs","_setValue","_refreshValues","selectedIndexChange","selectedIndex","tabOptions","tabOption","CovalentTabSelectModule","MatTabsModule","nextUniqueId","TdNavLinksComponent","_uniqueId","_collapsedSet","Set","afterNavigation","_linkClicked","link","_href","_routerLink","routerLink","_toggle","_isCollapsed","delete","has","CovalentNavLinksModule","MatListModule","RouterModule","csv","csvArray","newObjects","newObject","values","j","fakeTextArea","success","execCommand","fileBaseName","format","parse","base","initialValue","class_1","_i","_","_subjectValueChanges","registerOnChange","fn","registerOnTouched","_disableRipple","newValue","onDisableRippleChange","_disabled","reader","FileReader","readAsText","onload"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  Optional,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Dir } from '@angular/cdk/bidi';\n\nexport interface IPageChangeEvent {\n  page: number;\n  maxPage: number;\n  pageSize: number;\n  total: number;\n  fromRow: number;\n  toRow: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-paging-bar',\n  templateUrl: './paging-bar.component.html',\n  styleUrls: ['./paging-bar.component.scss'],\n})\nexport class TdPagingBarComponent implements OnInit {\n  private _pageSize: number = 50;\n  private _total: number = 0;\n  private _page: number = 1;\n  private _fromRow: number = 1;\n  private _toRow: number = 1;\n  private _initialized: boolean = false;\n  private _pageLinks: number[] = [];\n  private _pageLinkCount: number = 0;\n  // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n  private _hitEnd: boolean = false;\n  // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n  private _hitStart: boolean = false;\n\n  /**\n   * firstLast?: boolean\n   * Shows or hides the first and last page buttons of the paging bar. Defaults to 'false'\n   */\n  @Input() firstLast: boolean = true;\n\n  /**\n   * initialPage?: number\n   * Sets starting page for the paging bar. Defaults to '1'\n   */\n  @Input() initialPage: number = 1;\n\n  /**\n   * pageLinkCount?: number\n   * Amount of page navigation links for the paging bar. Defaults to '0'\n   */\n  @Input('pageLinkCount')\n  set pageLinkCount(pageLinkCount: number) {\n    this._pageLinkCount = coerceNumberProperty(pageLinkCount);\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageLinkCount(): number {\n    return this._pageLinkCount;\n  }\n\n  /**\n   * pageSize?: number\n   * Selected page size for the pagination. Defaults 50.\n   */\n  @Input('pageSize')\n  set pageSize(pageSize: number) {\n    this._pageSize = coerceNumberProperty(pageSize);\n    this._page = 1;\n    if (this._initialized) {\n      this._handleOnChange();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  /**\n   * total: number\n   * Total rows for the pagination.\n   */\n  @Input('total')\n  set total(total: number) {\n    this._total = coerceNumberProperty(total);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get total(): number {\n    return this._total;\n  }\n\n  /**\n   * pageLinks: number[]\n   * Returns the pageLinks in an array\n   */\n  get pageLinks(): number[] {\n    return this._pageLinks;\n  }\n\n  /**\n   * range: string\n   * Returns the range of the rows.\n   */\n  get range(): string {\n    return `${!this._toRow ? 0 : this._fromRow}-${this._toRow}`;\n  }\n\n  /**\n   * page: number\n   * Returns the current page.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * page: number\n   * Returns the max page for the current pageSize and total.\n   */\n  get maxPage(): number {\n    return Math.ceil(this._total / this._pageSize);\n  }\n\n  /**\n   * change?: function\n   * Method to be executed when page size changes or any button is clicked in the paging bar.\n   * Emits an [IPageChangeEvent] implemented object.\n   */\n  @Output() change: EventEmitter<IPageChangeEvent> = new EventEmitter<IPageChangeEvent>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._page = coerceNumberProperty(this.initialPage);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._initialized = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * navigateToPage?: function\n   * Navigates to a specific valid page. Returns 'true' if page is valid, else 'false'.\n   */\n  navigateToPage(page: number): boolean {\n    if (page === 1 || (page >= 1 && page <= this.maxPage)) {\n      this._page = coerceNumberProperty(Math.floor(page));\n      this._handleOnChange();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * firstPage?: function\n   * Navigates to the first page. Returns 'true' if page is valid, else 'false'.\n   */\n  firstPage(): boolean {\n    return this.navigateToPage(1);\n  }\n\n  /**\n   * prevPage?: function\n   * Navigates to the previous page. Returns 'true' if page is valid, else 'false'.\n   */\n  prevPage(): boolean {\n    return this.navigateToPage(this._page - 1);\n  }\n\n  /**\n   * nextPage?: function\n   * Navigates to the next page. Returns 'true' if page is valid, else 'false'.\n   */\n  nextPage(): boolean {\n    return this.navigateToPage(this._page + 1);\n  }\n\n  /**\n   * lastPage?: function\n   * Navigates to the last page. Returns 'true' if page is valid, else 'false'.\n   */\n  lastPage(): boolean {\n    return this.navigateToPage(this.maxPage);\n  }\n\n  isMinPage(): boolean {\n    return this._page <= 1;\n  }\n\n  isMaxPage(): boolean {\n    return this._page >= this.maxPage;\n  }\n\n  private _calculateRows(): void {\n    const top: number = this._pageSize * this._page;\n    this._fromRow = this._pageSize * (this._page - 1) + 1;\n    this._toRow = this._total > top ? top : this._total;\n  }\n\n  /**\n   * _calculatePageLinks?: function\n   * Calculates the page links that should be shown to the user based on the current state of the paginator\n   */\n  private _calculatePageLinks(): void {\n    // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n    if (this.isMaxPage()) {\n      this._hitEnd = true;\n      this._hitStart = false;\n    }\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n    if (this.isMinPage()) {\n      this._hitEnd = false;\n      this._hitStart = true;\n    }\n    // If the pageLinkCount goes above max possible pages based on perpage setting then reset it to maxPage\n    let actualPageLinkCount: number = this.pageLinkCount;\n    if (this.pageLinkCount > this.maxPage) {\n      actualPageLinkCount = this.maxPage;\n    }\n    // reset the pageLinks array\n    this._pageLinks = [];\n    // fill in the array with the pageLinks based on the current selected page\n    const middlePageLinks: number = Math.floor(actualPageLinkCount / 2);\n    for (let x: number = 0; x < actualPageLinkCount; x++) {\n      // don't go past the maxPage in the pageLinks\n      // have to handle even and odd pageLinkCounts differently so can still lead to the next numbers\n      if (\n        (actualPageLinkCount % 2 === 0 && this.page + middlePageLinks > this.maxPage) ||\n        (actualPageLinkCount % 2 !== 0 && this.page + middlePageLinks >= this.maxPage)\n      ) {\n        this._pageLinks[x] = this.maxPage - (actualPageLinkCount - (x + 1));\n        // if the selected page is after the middle then set that page as middle and get the correct balance on left and right\n        // special handling when there are only 2 pageLinks to just drop to next if block so can lead to next numbers when moving to right\n        // when moving to the left then go into this block\n      } else if (\n        (actualPageLinkCount > 2 || (actualPageLinkCount <= 2 && this._hitEnd)) &&\n        this.page - middlePageLinks > 0\n      ) {\n        this._pageLinks[x] = this.page - middlePageLinks + x;\n        // if the selected page is before the middle then set the pages based on the x index leading up to and after selected page\n      } else if (this.page - middlePageLinks <= 0) {\n        this._pageLinks[x] = x + 1;\n        // other wise just set the array in order starting from the selected page\n      } else {\n        this._pageLinks[x] = this.page + x;\n      }\n    }\n  }\n\n  private _handleOnChange(): void {\n    this._calculateRows();\n    this._calculatePageLinks();\n    const event: IPageChangeEvent = {\n      page: this._page,\n      maxPage: this.maxPage,\n      pageSize: this._pageSize,\n      total: this._total,\n      fromRow: this._fromRow,\n      toRow: this._toRow,\n    };\n    this._changeDetectorRef.markForCheck();\n    this.change.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdPagingBarComponent } from './paging-bar.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatButtonModule],\n  declarations: [TdPagingBarComponent],\n  exports: [TdPagingBarComponent],\n})\nexport class CovalentPagingModule {}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({ selector: '[tdVirtualScrollRow]' })\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  QueryList,\n  ViewChildren,\n  ElementRef,\n  HostListener,\n  Renderer2,\n  AfterViewChecked,\n  OnDestroy,\n  TrackByFunction,\n} from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\n\nconst TD_VIRTUAL_OFFSET: number = 2;\nconst SCROLL_DEBOUNCE: number = 200;\n\nexport interface ITdVirtualScrollBottomEvent {\n  lastRow: any;\n  lastIndex: number;\n}\n\n@Component({\n  selector: 'td-virtual-scroll-container',\n  styleUrls: ['./virtual-scroll-container.component.scss'],\n  templateUrl: './virtual-scroll-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n  private _subs: Subscription[] = [];\n  private _bottom: Subject<any> = new Subject();\n  private _initialized: boolean = false;\n\n  private _totalHeight: number = 0;\n  private _hostHeight: number = 0;\n  private _scrollVerticalOffset: number = 0;\n  private _offsetTransform: SafeStyle;\n\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  private _data: any[];\n  private _virtualData: any[];\n\n  /**\n   * data: any[]\n   * List of items to virtually iterate on.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    if (this._initialized) {\n      this._calculateVirtualRows();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * bottom: function\n   * Method to be executed when user scrolled to the last item of the list.\n   * An [ITdVirtualScrollBottomEvent] event is emitted\n   */\n  @Output() bottom: EventEmitter<ITdVirtualScrollBottomEvent> = new EventEmitter<ITdVirtualScrollBottomEvent>();\n\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\n\n  @ContentChild(TdVirtualScrollRowDirective, { static: false }) _rowTemplate: TdVirtualScrollRowDirective;\n\n  get rowHeight(): number {\n    if (this._rows && this._rows.toArray()[0]) {\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\n    }\n    return 0;\n  }\n\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _domSanitizer: DomSanitizer,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this._subs.push(\n      this._rows.changes.subscribe(() => {\n        this._calculateVirtualRows();\n      }),\n    );\n    this._initialized = true;\n    this._calculateVirtualRows();\n\n    this._subs.push(\n      this._bottom.pipe(debounceTime(SCROLL_DEBOUNCE)).subscribe(() => {\n        this.bottom.emit({\n          lastRow: this._data[this._data.length - 1],\n          lastIndex: this.toRow,\n        });\n      }),\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    const newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\n    if (this._hostHeight !== newHostHeight) {\n      this._hostHeight = newHostHeight;\n      if (this._initialized) {\n        this._calculateVirtualRows();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * trackBy?: TrackByFunction\n   * This accepts the same trackBy function [ngFor] does.\n   * https://angular.io/api/core/TrackByFunction\n   */\n  @Input() trackBy: TrackByFunction<any> = (index: number, item: any) => {\n    return item;\n  };\n\n  @HostListener('scroll', ['$event'])\n  handleScroll(event: Event): void {\n    const element: HTMLElement = <HTMLElement>event.target;\n    if (element) {\n      const verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._scrollVerticalOffset = verticalScroll;\n        if (this._initialized) {\n          this._calculateVirtualRows();\n        }\n      }\n      if (this._initialized && this._data.length * this.rowHeight - (verticalScroll + this._hostHeight) === 0) {\n        // check to see if bottom was hit to throw the bottom event\n        this._bottom.next();\n      }\n    }\n  }\n\n  /**\n   * Method to refresh and recalculate the virtual rows\n   * e.g. after changing the [data] content\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Method to scroll to a specific row of the list.\n   */\n  scrollTo(row: number): void {\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the start of the list.\n   */\n  scrollToStart(): void {\n    this.scrollTo(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the end of the list.\n   */\n  scrollToEnd(): void {\n    this.scrollTo(this.totalHeight / this.rowHeight);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _calculateVirtualRows(): void {\n    if (this._data) {\n      this._totalHeight = this._data.length * this.rowHeight;\n      const fromRow: number = Math.floor(this._scrollVerticalOffset / this.rowHeight) - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n      const range: number = Math.floor(this._hostHeight / this.rowHeight) + TD_VIRTUAL_OFFSET * 2;\n      let toRow: number = range + this.fromRow;\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    if (this._scrollVerticalOffset > TD_VIRTUAL_OFFSET * this.rowHeight) {\n      offset = this.fromRow * this.rowHeight;\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle(\n      'translateY(' + (offset - this.totalHeight) + 'px)',\n    );\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\n\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [TdVirtualScrollRowDirective, TdVirtualScrollContainerComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TD_VIRTUAL_SCROLL],\n  exports: [TD_VIRTUAL_SCROLL],\n})\nexport class CovalentVirtualScrollModule {}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  AfterContentInit,\n} from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\nexport const DEFAULT_NOTIFICATION_LIMIT: number = 99;\n\n@Component({\n  selector: 'td-notification-count',\n  styleUrls: ['./notification-count.component.scss'],\n  templateUrl: './notification-count.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n  private _limit: number = DEFAULT_NOTIFICATION_LIMIT;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content', { static: true }) content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n  /**\n   * limit?: number\n   * Limit for notification count. If the number of notifications is greater than limit, then + will be added. Defaults to 99.\n   */\n  @Input()\n  set limit(limit: number) {\n    this._limit = limit;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > this._limit) {\n      return `${this._limit}+`;\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      const contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [TdNotificationCountComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TD_NOTIFICATIONS],\n  exports: [TD_NOTIFICATIONS],\n})\nexport class CovalentNotificationsModule {}\n","import { Directive } from '@angular/core';\nimport { HostListener, Host, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdAutoTrim]',\n})\nexport class TdAutoTrimDirective {\n  constructor(@Optional() @Host() private _model: NgModel) {}\n\n  /**\n   * Listens to host's (blur) event and trims value.\n   */\n  @HostListener('blur', ['$event'])\n  onBlur(event: Event): void {\n    if (this._model && this._model.value && typeof this._model.value === 'string') {\n      this._model.update.emit(this._model.value.trim());\n    }\n  }\n}\n","import { Directive, HostListener, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\ninterface IFsDocument extends HTMLDocument {\n  fullscreenElement: Element;\n  webkitFullscreenElement: Element;\n  mozFullscreenElement: Element;\n  msFullscreenElement: Element;\n  webkitExitFullscreen: () => void;\n  mozCancelFullScreen: () => void;\n  msExitFullscreen: () => void;\n}\n\n@Directive({\n  selector: '[tdFullScreen]',\n  exportAs: 'tdFullScreen',\n})\nexport class TdFullscreenDirective {\n  fullScreenIsActive: boolean = false;\n  constructor(@Inject(DOCUMENT) private _document: IFsDocument, private _el: ElementRef) {}\n\n  @HostListener('document:fullscreenchange', ['$event'])\n  @HostListener('document:webkitfullscreenchange', ['$event'])\n  @HostListener('document:mozfullscreenchange', ['$event'])\n  @HostListener('document:msfullscreenchange', ['$event'])\n  public fsChangeHandler(event: Event): void {\n    this.fullScreenIsActive = event.srcElement === this._getFullScreenElement();\n  }\n\n  public toggleFullScreen(): void {\n    this._getFullScreenElement() === this._el.nativeElement ? this.exitFullScreen() : this.enterFullScreen();\n  }\n\n  public enterFullScreen(): void {\n    const {\n      _el: { nativeElement },\n    }: TdFullscreenDirective = this;\n    const enterFullScreenMap: object = {\n      requestFullscreen: () => nativeElement.requestFullscreen(), // Chrome\n      webkitRequestFullscreen: () => nativeElement.webkitRequestFullscreen(), // Safari\n      mozRequestFullScreen: () => nativeElement.mozRequestFullScreen(), // Firefox\n      msRequestFullscreen: () => nativeElement.msRequestFullscreen(), // IE\n    };\n\n    for (const handler of Object.keys(enterFullScreenMap)) {\n      if (nativeElement[handler]) {\n        enterFullScreenMap[handler]();\n      }\n    }\n  }\n\n  public exitFullScreen(): void {\n    const {\n      _document,\n      _el: { nativeElement },\n    }: TdFullscreenDirective = this;\n    const exitFullScreenMap: object = {\n      exitFullscreen: () => _document.exitFullscreen(), // Chrome\n      webkitExitFullscreen: () => _document.webkitExitFullscreen(), // Safari\n      mozCancelFullScreen: () => _document.mozCancelFullScreen(), // Firefox\n      msExitFullscreen: () => _document.msExitFullscreen(), // IE\n    };\n\n    for (const handler of Object.keys(exitFullScreenMap)) {\n      if (_document[handler] && this._getFullScreenElement() === nativeElement) {\n        exitFullScreenMap[handler]();\n      }\n    }\n  }\n\n  private _getFullScreenElement(): Element {\n    const { _document }: TdFullscreenDirective = this;\n    const tdFullScreenElementMap: object = {\n      fullscreenElement: () => _document.fullscreenElement, // Chrome, Opera\n      webkitFullscreenElement: () => _document.webkitFullscreenElement, // Safari\n      mozFullscreenElement: () => _document.mozFullscreenElement, // Firefox\n      msFullscreenElement: () => _document.msFullscreenElement, // IE, Edge\n    };\n    for (const props of Object.keys(tdFullScreenElementMap)) {\n      if (_document[props]) {\n        return _document[props];\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TdTimeAgoPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    const ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    const startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((startTime - time.getTime()) / 1000);\n\n    if (diff < 2) {\n      return '1 second ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' seconds ago';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 minute ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' minutes ago';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 hour ago';\n    }\n    if (diff < 24) {\n      return Math.floor(diff) + ' hours ago';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return '1 day ago';\n    }\n    if (diff < 30) {\n      return Math.floor(diff) + ' days ago';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return '1 month ago';\n    }\n    if (diff < 12) {\n      return Math.floor(diff) + ' months ago';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return '1 year ago';\n    } else {\n      return Math.floor(diff) + ' years ago';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeDifference',\n})\nexport class TdTimeDifferencePipe implements PipeTransform {\n  transform(start: any, end?: any): string {\n    const startTime: Date = new Date(start);\n    let endTime: Date;\n\n    if (end !== undefined) {\n      endTime = new Date(end);\n    } else {\n      endTime = new Date();\n    }\n\n    if (!startTime.getTime() || !endTime.getTime()) {\n      return 'Invalid Date';\n    }\n\n    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\n\n    const days: number = Math.floor(diff / (60 * 60 * 24));\n    diff = diff - days * (60 * 60 * 24);\n\n    const hours: number = Math.floor(diff / (60 * 60));\n    diff = diff - hours * (60 * 60);\n\n    const minutes: number = Math.floor(diff / 60);\n    diff -= minutes * 60;\n\n    const seconds: number = diff;\n\n    const pad: string = '00';\n\n    let daysFormatted: string = '';\n\n    if (days > 0 && days < 2) {\n      daysFormatted = ' day - ';\n    } else if (days > 1) {\n      daysFormatted = ' days - ';\n    }\n\n    return (\n      (days > 0 ? days + daysFormatted : daysFormatted) +\n      pad.substring(0, pad.length - (hours + '').length) +\n      hours +\n      ':' +\n      pad.substring(0, pad.length - (minutes + '').length) +\n      minutes +\n      ':' +\n      pad.substring(0, pad.length - (seconds + '').length) +\n      seconds\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeUntil',\n})\nexport class TdTimeUntilPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    const ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    const startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((time.getTime() - startTime) / 1000);\n\n    if (diff < 2) {\n      return 'in 1 second';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' seconds';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 minute';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' minutes';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 hour';\n    }\n    if (diff < 24) {\n      return 'in ' + Math.floor(diff) + ' hours';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return 'in 1 day';\n    }\n    if (diff < 30) {\n      return 'in ' + Math.floor(diff) + ' days';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return 'in 1 month';\n    }\n    if (diff < 12) {\n      return 'in ' + Math.floor(diff) + ' months';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return 'in 1 year';\n    } else {\n      return 'in ' + Math.floor(diff) + ' years';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes',\n})\nexport class TdBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    const k: number = 1024;\n    const sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimalBytes',\n})\nexport class TdDecimalBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    const k: number = 1000;\n    const sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'digits',\n})\nexport class TdDigitsPipe implements PipeTransform {\n  private _decimalPipe: DecimalPipe;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {\n    this._decimalPipe = new DecimalPipe(this._locale);\n  }\n\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return the value */\n      return digits;\n    } else if (digits < 1) {\n      return this._decimalPipe.transform(digits.toFixed(precision));\n    }\n    const k: number = 1000;\n    const sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    const i: number = Math.floor(Math.log(digits) / Math.log(k));\n    const size: string = sizes[i];\n    return (\n      this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '')\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\nexport class TdTruncatePipe implements PipeTransform {\n  transform(text: any, length: number): string {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    // Truncate\n    let truncated: string = text.substr(0, length);\n\n    if (text.length > length) {\n      if (truncated.lastIndexOf(' ') > 0) {\n        truncated = truncated.trim();\n      }\n\n      truncated += 'â¦';\n    }\n\n    return truncated;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * Directives\n */\nimport { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';\nimport { TdFullscreenDirective } from './directives/fullscreen/fullscreen.directive';\n\nconst TD_DIRECTIVES: Type<any>[] = [TdAutoTrimDirective, TdFullscreenDirective];\n\n// Validators\nconst TD_VALIDATORS: Type<any>[] = [];\n\n/**\n * PIPES\n */\nimport { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';\nimport { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';\nimport { TdTimeUntilPipe } from './pipes/time-until/time-until.pipe';\nimport { TdBytesPipe } from './pipes/bytes/bytes.pipe';\nimport { TdDecimalBytesPipe } from './pipes/decimal-bytes/decimal-bytes.pipe';\nimport { TdDigitsPipe } from './pipes/digits/digits.pipe';\nimport { TdTruncatePipe } from './pipes/truncate/truncate.pipe';\n\nconst TD_PIPES: Type<any>[] = [\n  TdTimeAgoPipe,\n  TdTimeDifferencePipe,\n  TdTimeUntilPipe,\n  TdBytesPipe,\n  TdDecimalBytesPipe,\n  TdDigitsPipe,\n  TdTruncatePipe,\n];\n\n/**\n * Services\n */\n\n@NgModule({\n  imports: [FormsModule, CommonModule],\n  declarations: [TD_DIRECTIVES, TD_PIPES, TD_VALIDATORS],\n  exports: [FormsModule, CommonModule, TD_DIRECTIVES, TD_PIPES, TD_VALIDATORS],\n})\nexport class CovalentCommonModule {}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\n\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IRotateAnimation extends IAnimationOptions {\n  degrees?: number;\n  ease?: string;\n}\n\n/**\n * const tdRotateAnimation\n *\n * Parameter Options:\n * * degressStart: Degrees of rotation that the dom object will end up in during the \"false\" state\n * * degreesEnd: Degrees of rotation that the dom object will end up in during the \"true\" state\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerates and decelerates. Defaults to ease-in.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a rotation animation.\n *\n * usage: [@tdRotate]=\"{ value: true | false, params: { degreesEnd: 90 }}\"\n */\n\nexport const tdRotateAnimation: AnimationTriggerMetadata = trigger('tdRotate', [\n  state(\n    '0',\n    style({\n      transform: 'rotate({{ degressStart }}deg)',\n    }),\n    { params: { degressStart: 0 } },\n  ),\n  state(\n    '1',\n    style({\n      transform: 'rotate({{ degreesEnd }}deg)',\n    }),\n    { params: { degreesEnd: 180 } },\n  ),\n  transition(\n    '0 <=> 1',\n    [group([query('@*', animateChild(), { optional: true }), animate('{{ duration }}ms {{ delay }}ms {{ ease }}')])],\n    { params: { duration: 250, delay: '0', ease: 'ease-in' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface ICollapseAnimation extends IAnimationOptions {\n  easeOnClose?: string;\n  easeOnOpen?: string;\n}\n\n/**\n * const tdCollapseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnClose: Animation accelerates and decelerates when closing. Defaults to ease-in.\n * * easeOnOpen: Animation accelerates and decelerates when opening. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a collapse/expand animation.\n *\n * usage: [@tdCollapse]=\"{ value: true | false, params: { duration: 500 }}\"\n */\nexport const tdCollapseAnimation: AnimationTriggerMetadata = trigger('tdCollapse', [\n  state(\n    '1',\n    style({\n      height: '0',\n      overflow: 'hidden',\n    }),\n  ),\n  state(\n    '0',\n    style({\n      height: AUTO_STYLE,\n      overflow: AUTO_STYLE,\n    }),\n  ),\n  transition(\n    '0 => 1',\n    [\n      style({\n        overflow: 'hidden',\n        height: AUTO_STYLE,\n      }),\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          style({\n            height: '0',\n            overflow: 'hidden',\n          }),\n        ),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', ease: 'ease-in' } },\n  ),\n  transition(\n    '1 => 0',\n    [\n      style({\n        height: '0',\n        overflow: 'hidden',\n      }),\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          style({\n            overflow: 'hidden',\n            height: AUTO_STYLE,\n          }),\n        ),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IFadeInOutAnimation extends IAnimationOptions {\n  easeOnIn?: string;\n  easeOnOut?: string;\n}\n\n/**\n * const tdFadeInOutAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnIn: Animation accelerates and decelerates when fading in. Defaults to ease-in.\n * * easeOnOut: Animation accelerates and decelerates when fading out. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a fade animation.\n *\n * usage: [@tdFadeInOut]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger('tdFadeInOut', [\n  state(\n    '0',\n    style({\n      opacity: '0',\n      visibility: 'hidden',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      opacity: AUTO_STYLE,\n      visibility: AUTO_STYLE,\n    }),\n  ),\n  transition(\n    '0 => 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' } },\n  ),\n  transition(\n    '1 => 0',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdBounceAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a bounce animation.\n *\n * usage: [@tdBounce]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdBounceAnimation: AnimationTriggerMetadata = trigger('tdBounce', [\n  state(\n    '0',\n    style({\n      transform: 'translate3d(0, 0, 0)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'translate3d(0, 0, 0)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.2,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -30px, 0)',\n              offset: 0.4,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -30px, 0)',\n              offset: 0.43,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.53,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -15px, 0)',\n              offset: 0.7,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.8,\n            }),\n            style({ transform: 'translate3d(0, -4px, 0)', offset: 0.9 }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 1.0,\n            }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdFlashAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a flash animation.\n *\n * usage: [@tdFlash]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFlashAnimation: AnimationTriggerMetadata = trigger('tdFlash', [\n  state(\n    '0',\n    style({\n      opacity: 1,\n    }),\n  ),\n  state(\n    '1',\n    style({\n      opacity: 1,\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ opacity: 1, offset: 0 }),\n            style({ opacity: 0, offset: 0.25 }),\n            style({ opacity: 1, offset: 0.5 }),\n            style({ opacity: 0, offset: 0.75 }),\n            style({ opacity: 1, offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdHeadshakeAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a headshake animation.\n *\n * usage: [@tdHeadshake]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger('tdHeadshake', [\n  state(\n    '0',\n    style({\n      transform: 'translateX(0)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'translateX(0)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'translateX(0)', offset: 0 }),\n            style({ transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065 }),\n            style({ transform: 'translateX(5px) rotateY(7deg)', offset: 0.185 }),\n            style({ transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315 }),\n            style({ transform: 'translateX(2px) rotateY(3deg)', offset: 0.435 }),\n            style({ transform: 'translateX(0)', offset: 0.5 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdJelloAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a jello animation.\n *\n * usage: [@tdJello]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdJelloAnimation: AnimationTriggerMetadata = trigger('tdJello', [\n  state(\n    '0',\n    style({\n      transform: 'none',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'none',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'none', offset: 0 }),\n            style({ transform: 'none', offset: 0.011 }),\n            style({ transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222 }),\n            style({ transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333 }),\n            style({ transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444 }),\n            style({ transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555 }),\n            style({ transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666 }),\n            style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777 }),\n            style({ transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdPulseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a pulse animation.\n *\n * usage: [@tdPulse]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdPulseAnimation: AnimationTriggerMetadata = trigger('tdPulse', [\n  state(\n    '0',\n    style({\n      transform: 'scale3d(1, 1, 1)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'scale3d(1, 1, 1)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),\n            style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),\n            style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import { ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport { Observable, Subject } from 'rxjs';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport interface IControlValueAccessor extends ControlValueAccessor {\n  value: any;\n  valueChanges: Observable<any>;\n  onChange: (_: any) => any;\n  onTouched: () => any;\n}\n\nexport interface IHasChangeDetectorRef {\n  _changeDetectorRef: ChangeDetectorRef;\n}\n\n/** Mixin to augment a component with ngModel support. */\nexport function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>(\n  base: T,\n  initialValue?: any,\n): Constructor<IControlValueAccessor> & T {\n  return class extends base {\n    private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;\n    private _subjectValueChanges: Subject<any>;\n    valueChanges: Observable<any>;\n\n    constructor(...args: any[]) {\n      super(...args);\n      this._subjectValueChanges = new Subject<any>();\n      this.valueChanges = this._subjectValueChanges.asObservable();\n    }\n\n    set value(v: any) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n        this._changeDetectorRef.markForCheck();\n        this._subjectValueChanges.next(v);\n      }\n    }\n    get value(): any {\n      return this._value;\n    }\n\n    writeValue(value: any): void {\n      this.value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n    }\n\n    onChange = (_: any) => noop;\n    onTouched = () => noop;\n  };\n}\n","import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CovalentValidators {\n  static min(minValue: any): ValidatorFn {\n    // tslint:disable-next-line:prefer-immediate-return\n    const func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {\n      if (!!Validators.required(c) || (!minValue && minValue !== 0)) {\n        return undefined;\n      }\n      const v: number = c.value;\n      return v < minValue ? { min: { minValue, actualValue: v } } : undefined;\n    };\n    return func;\n  }\n\n  static max(maxValue: any): ValidatorFn {\n    // tslint:disable-next-line:prefer-immediate-return\n    const func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {\n      if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {\n        return undefined;\n      }\n      const v: number = c.value;\n      return v > maxValue ? { max: { maxValue, actualValue: v } } : undefined;\n    };\n    return func;\n  }\n\n  static numberRequired(c: AbstractControl): { [key: string]: any } {\n    return Number.isNaN(c.value) ? { required: true } : undefined;\n  }\n}\n","/**\n * Conversion function that takes an array of objects and converts\n * them to CSV format. Custom key and line separators can be specified.\n *\n * @param objects list of strings in JSON format or actual objects\n * @param keySeparator optional parameter to specify custom value separator\n * @param lineSeparator optional parameter to specify custom end of line separator\n * @returns CSV formatted string\n */\nexport function convertObjectsToCSV(\n  objects: any[],\n  keySeparator: string = ',',\n  lineSeparator: string = '\\r\\n',\n): string {\n  if (!objects) {\n    return '';\n  }\n\n  let outputString: string = '';\n\n  // Iterate through array, creating one output line per object\n  objects.forEach((value: object, key: number) => {\n    let line: string = '';\n    for (const index of Object.keys(objects[key])) {\n      if (line !== '') {\n        line += keySeparator;\n      }\n      if (objects[key][index] === null || objects[key][index] === undefined) {\n        objects[key][index] = '';\n      }\n      line += objects[key][index];\n    }\n    outputString += `${line}${lineSeparator}`;\n  });\n\n  // Append header row identifying keys into output\n  if (objects[0]) {\n    const headers: string = Object.keys(objects[0]).join(keySeparator);\n    outputString = `${headers}${lineSeparator}${outputString}`;\n  }\n\n  return outputString;\n}\n\n/**\n * Conversion function that takes a CSV representation\n * of objects and converts them to JSON.\n * The first row in the input must be the object keys.\n * Custom key separator and line separator can be specified.\n * Indentation size for output JSON can be specified.\n *\n * @param csv list of strings in JSON format or actual objects\n * @param keySeparator optional parameter to specify custom value separator\n * @param lineSeparator optional parameter to specify custom end of line separator\n * @param indent optional parameter indicating space indentation for pretty output. Default is 2.\n * @returns JSON formatted string\n */\nexport function convertCSVToJSON(\n  csv: string,\n  keySeparator: string = ',',\n  lineSeparator: string = '\\r\\n',\n  indent: number = 2,\n): string {\n  if (!csv) {\n    return '';\n  }\n\n  const csvArray: string[] = csv.split(lineSeparator);\n  // Input CSV must have a minimum of two rows\n  if (csvArray.length < 2) {\n    return '';\n  }\n\n  const newObjects: any[] = [];\n\n  // Extract object keys from header row\n  const keys: string[] = csvArray[0].split(keySeparator);\n  // Iterate through array, creating one output line per object\n  for (let i: number = 1; i < csvArray.length; i++) {\n    const newObject: any = {};\n\n    const values: string[] = csvArray[i].split(keySeparator);\n    if (values.length !== keys.length) {\n      continue;\n    }\n    for (let j: number = 0; j < keys.length; j++) {\n      newObject[keys[j]] = values[j];\n    }\n    newObjects.push(newObject);\n  }\n\n  return formatJSON(newObjects, indent);\n}\n\n/**\n * Convert object to JSON using stringify. Indentation size for output JSON can be specified.\n *\n * @param json object to be converted\n * @param indent optional parameter indicating space indentation for pretty output. Default is 2.\n */\nexport function formatJSON(json: object, indent: number = 2): string {\n  return JSON.stringify(json, undefined, indent);\n}\n","import { convertObjectsToCSV, formatJSON } from './convert';\n\n/**\n * Download CSV content to the specified file with .csv extension\n * appended to the provided base file name.\n *\n * @param fileBaseName base name of destination file\n * @param csv CSV contents\n */\nexport function downloadCSV(fileBaseName: string, csv: string): void {\n  downloadFile(`${fileBaseName}.csv`, csv, 'text/csv');\n}\n\n/**\n * Download JSON content to the specified file with .json extension\n * appended to the provided base file name.\n *\n * @param fileBaseName base name of destination file\n * @param json JSON contents\n * @param format indicates if JSON should be prettied\n * @param indent optional parameter indicating space indentation for pretty output. Default is 2\n */\nexport function downloadJSON(fileBaseName: string, json: string, format: boolean = false, indent: number = 2): void {\n  downloadFile(`${fileBaseName}.json`, format ? formatJSON(JSON.parse(json), indent) : json, 'application/json');\n}\n\n/**\n * Convert objects to CSV format and download to file with .csv\n * extension appended to the provided base file name. Custom key\n * separator and line separator can be specified.\n *\n * @param fileBaseName base name of destination file\n * @param objects object array to be converted to CSV format\n *   prior to writing to download destination\n * @param keySeparator optional parameter to specify custom value separator\n * @param lineSeparator optional parameter to specify custom end of line separator\n */\nexport function downloadObjectsToCSV(\n  fileBaseName: string,\n  objects: any[],\n  keySeparator: string = ',',\n  lineSeparator: string = '\\r\\n',\n): void {\n  downloadFile(`${fileBaseName}.csv`, convertObjectsToCSV(objects, keySeparator, lineSeparator), 'text/csv');\n}\n\n/**\n * Convert objects to JSON format and download to file with .json\n * extension appended to the provided base file name.\n *\n * @param fileBaseName base name of destination file\n * @param objects object array to be converted to JSON format\n *   prior to writing to download destination\n * @param indent optional parameter indicating space indentation for pretty output. Default is 2\n */\nexport function downloadObjectsToJSON(fileBaseName: string, objects: any[], indent: number = 2): void {\n  downloadFile(`${fileBaseName}.json`, formatJSON(objects, indent), 'application/json');\n}\n\n/**\n * Download string content to the specified file with desired mime type.\n *\n * @param fileName full filename (including appropriate extension) of destination file\n * @param contents string contents to be written to download destination\n * @param mimeType mime type appropriate to file content to support consumption of destination file\n */\nexport function downloadFile(fileName: string, contents: string, mimeType: string = 'text/plain'): void {\n  if (!fileName || !contents) {\n    return;\n  }\n\n  // Create blob object and assign URL\n  const blob: Blob = new Blob([contents], { type: mimeType });\n  const url: string = window.URL.createObjectURL(blob);\n\n  // Construct anchor for URL, append to DOM, click and cleanup.\n  const a: HTMLAnchorElement = document.createElement('a');\n  a.setAttribute('style', 'display: none');\n  a.setAttribute('download', fileName);\n  a.href = url;\n  document.body.appendChild(a);\n  a.click();\n  window.URL.revokeObjectURL(url);\n  document.body.removeChild(a);\n  window.URL.revokeObjectURL(url);\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Renderer2,\n  ElementRef,\n  AfterViewInit,\n  ViewContainerRef,\n  TemplateRef,\n  ViewChild,\n  HostBinding,\n  HostListener,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) {}\n}\n\n@Component({\n  selector: 'td-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [tdCollapseAnimation],\n})\nexport class TdMessageComponent implements AfterViewInit {\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective, { static: true }) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef, { static: false }) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): any {\n    return { value: !this._opened, duration: 100 };\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input() icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n  ) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [TdMessageComponent, TdMessageContainerDirective];\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TD_MESSAGE],\n  exports: [TD_MESSAGE],\n})\nexport class CovalentMessageModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  forwardRef,\n  DoCheck,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnInit,\n  HostListener,\n  ElementRef,\n  Optional,\n  Inject,\n  Directive,\n  TemplateRef,\n  ViewContainerRef,\n  ContentChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterViewInit,\n  OnDestroy,\n  HostBinding,\n  Renderer2,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  ESCAPE,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  DELETE,\n  BACKSPACE,\n  ENTER,\n  SPACE,\n  TAB,\n  HOME,\n} from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable, Subscription, timer, merge, fromEvent } from 'rxjs';\nimport { filter, debounceTime } from 'rxjs/operators';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdChipsComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./chips.component.scss'],\n  templateUrl: './chips.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase\n  implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n  private _outsideClickSubs: Subscription = Subscription.EMPTY;\n  private _inputValueChangesSubs: Subscription = Subscription.EMPTY;\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _required: boolean = false;\n  private _tabIndex: number = 0;\n  private _touchendDebounce: number = 100;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input', { static: true }) _nativeInput: ElementRef;\n  @ViewChild(MatInput, { static: true }) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger, { static: true }) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective, { static: false }) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective, { static: false })\n  _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * required?: boolean\n   * Value is set to true if at least one chip is needed\n   * Defaults to false\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * returns the display placeholder\n   */\n  get displayPlaceHolder(): string {\n    if (!this.canAddChip) {\n      return '';\n    }\n    return this._required ? `${this.placeholder} *` : this.placeholder;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input() placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input() debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output() add: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output() inputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output() chipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output() chipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * compareWith? function\n   * Function used to check whether a chip value already exists.\n   * Defaults to strict equality comparison ===\n   */\n  @Input() compareWith: (o1: any, o2: any) => boolean = (o1: any, o2: any) => {\n    return o1 === o2;\n  };\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n    // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    timer()\n      .toPromise()\n      .then(() => {\n        this._isMousedown = false;\n      });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement || clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        timer()\n          .toPromise()\n          .then(() => {\n            this.removeFocusedState();\n          });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  ngOnInit(): void {\n    this._inputValueChangesSubs = this.inputControl.valueChanges\n      .pipe(debounceTime(this.debounce))\n      .subscribe((value: string) => {\n        this.inputChange.emit(value ? value : '');\n      });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._outsideClickSubs.unsubscribe();\n    this._inputValueChangesSubs.unsubscribe();\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      const selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n\n    this._closeAutocomplete();\n    timer(this.debounce)\n      .toPromise()\n      .then(() => {\n        this.setFocusedState();\n        this._setFirstOptionActive();\n        this._openAutocomplete();\n      });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.findIndex((item: any) => this.compareWith(item, value)) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.add.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    const removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === this._totalChips - 1 && index === 0) {\n      this._inputChild.focus();\n    } else if (index < this._totalChips - 1) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.remove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.chipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.chipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          const length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n          this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === this._totalChips - 1) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < this._totalChips - 1) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    const chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      timer()\n        .toPromise()\n        .then(() => {\n          if (this.focused && this._options && this._options.length > 0) {\n            // clean up of previously active options\n            this._options.toArray().forEach((option: MatOption) => {\n              option.setInactiveStyles();\n            });\n            // set the first one as active\n            this._options.toArray()[0].setActiveStyles();\n            this._internalActivateOption = true;\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      this._outsideClickSubs = merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n        .pipe(\n          debounceTime(this._touchendDebounce),\n          filter((event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return (\n              this.focused &&\n              clickTarget !== this._elementRef.nativeElement &&\n              !this._elementRef.nativeElement.contains(clickTarget) &&\n              !this._internalClick\n            );\n          }),\n        )\n        .subscribe(() => {\n          if (this.focused) {\n            this._autocompleteTrigger.closePanel();\n            this.removeFocusedState();\n            this.onTouched();\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n    }\n    return undefined;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [ReactiveFormsModule, CommonModule, MatInputModule, MatIconModule, MatChipsModule, MatAutocompleteModule],\n  declarations: [TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective],\n  exports: [TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective],\n})\nexport class CovalentChipsModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  Renderer2,\n  ElementRef,\n  ContentChildren,\n  QueryList,\n  HostListener,\n} from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styleUrls: ['./data-table-row.component.scss'],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableColumnRowComponent {\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styleUrls: ['./data-table-row.component.scss'],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableRowComponent {\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click')\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({ selector: '[tdDataTableTemplate]ng-template' })\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\n  @Input() tdDataTableTemplate: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  OnDestroy,\n  AfterViewInit,\n  ContentChildren,\n  TemplateRef,\n  AfterContentInit,\n  QueryList,\n  Inject,\n  Optional,\n  ViewChildren,\n  ElementRef,\n  OnInit,\n  AfterContentChecked,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\n\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\nimport {\n  ITdDataTableSortChangeEvent,\n  TdDataTableColumnComponent,\n} from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport enum TdDataTableSortingOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface ITdDataTableColumnWidth {\n  min?: number;\n  max?: number;\n}\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n  sortable?: boolean;\n  hidden?: boolean;\n  filter?: boolean;\n  width?: ITdDataTableColumnWidth | number;\n}\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n  index: number;\n}\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\nexport interface ITdDataTableRowClickEvent {\n  row: any;\n  index: number;\n}\n\nexport interface IInternalColumnWidth {\n  value: number;\n  limit: boolean;\n  index: number;\n  min?: boolean;\n  max?: boolean;\n}\n\n/**\n * Constant to set the rows offset before and after the viewport\n */\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n/**\n * Constant to set default row height if none is provided\n */\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\n\nexport class TdDataTableBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdDataTableComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-data-table',\n  styleUrls: ['./data-table.component.scss'],\n  templateUrl: './data-table.component.html',\n  inputs: ['value'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent extends _TdDataTableMixinBase\n  implements IControlValueAccessor, OnInit, AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\n  /** responsive width calculations */\n  private _resizeSubs: Subscription;\n  private _rowsChangedSubs: Subscription;\n  private _hostWidth: number = 0;\n\n  /** manually resizable columns */\n  private _resizableColumns: boolean = false;\n  private _columnClientX: number = 0;\n  private _columnResizeSubs: Subscription;\n  private _resizingColumn: number;\n  private _onColumnResize: Subject<number> = new Subject<number>();\n\n  get resizingColumn(): number {\n    return this._resizingColumn;\n  }\n\n  get hostWidth(): number {\n    // if the checkboxes are rendered, we need to remove their width\n    // from the total width to calculate properly\n    if (this.selectable) {\n      return this._hostWidth - 42;\n    }\n    return this._hostWidth;\n  }\n\n  private _widths: IInternalColumnWidth[] = [];\n  private _onResize: Subject<void> = new Subject<void>();\n\n  /** column header reposition and viewpoort */\n  private _verticalScrollSubs: Subscription;\n  private _horizontalScrollSubs: Subscription;\n  private _scrollHorizontalOffset: number = 0;\n\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\n\n  // Array of cached row heights to allow dynamic row heights\n  private _rowHeightCache: number[] = [];\n  // Total pseudo height of all the elements\n  private _totalHeight: number = 0;\n  // Total host height for the viewport\n  private _hostHeight: number = 0;\n  // Scrolled vertical pixels\n  private _scrollVerticalOffset: number = 0;\n  // Style to move the content a certain offset depending on scrolled offset\n  private _offsetTransform: SafeStyle;\n\n  // Variables that set from and to which rows will be rendered\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  /**\n   * Returns the offset style with a proper calculation on how much it should move\n   * over the y axis of the total height\n   */\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  /**\n   * Returns the assumed total height of the rows\n   */\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  /**\n   * Returns the initial row to render in the viewport\n   */\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  /**\n   * Returns the last row to render in the viewport\n   */\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  private _valueChangesSubs: Subscription;\n  /** internal attributes */\n  private _data: any[];\n  // data virtually iterated by component\n  private _virtualData: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _clickable: boolean = false;\n  private _multiple: boolean = true;\n  private _allSelected: boolean = false;\n  private _indeterminate: boolean = false;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** shift select */\n  private _shiftPreviouslyPressed: boolean = false;\n  private _lastSelectedIndex: number = -1;\n  private _firstSelectedIndex: number = -1;\n  private _firstCheckboxValue: boolean = false;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective) _templates: QueryList<TdDataTableTemplateDirective>;\n\n  @ViewChild('scrollableDiv', { static: true }) _scrollableDiv: ElementRef;\n\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\n\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\n\n  /**\n   * Returns scroll position to reposition column headers\n   */\n  get columnsLeftScroll(): number {\n    return this._scrollHorizontalOffset * -1;\n  }\n\n  /**\n   * Returns true if all values are selected.\n   */\n  get allSelected(): boolean {\n    return this._allSelected;\n  }\n\n  /**\n   * Returns true if all values are not deselected\n   * and at least one is.\n   */\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    this._rowHeightCache = [];\n    Promise.resolve().then(() => {\n      this.refresh();\n      // scroll back to the top if the data has changed\n      this._scrollableDiv.nativeElement.scrollTop = 0;\n    });\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      const row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * resizableColumns?: boolean\n   * Enables manual column resize.\n   * Defaults to 'false'\n   */\n  @Input('resizableColumns')\n  set resizableColumns(resizableColumns: boolean) {\n    this._resizableColumns = coerceBooleanProperty(resizableColumns);\n  }\n  get resizableColumns(): boolean {\n    return this._resizableColumns;\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(selectable: boolean) {\n    this._selectable = coerceBooleanProperty(selectable);\n  }\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  /**\n   * clickable?: boolean\n   * Enables row click events, hover.\n   * Defaults to 'false'\n   */\n  @Input('clickable')\n  set clickable(clickable: boolean) {\n    this._clickable = coerceBooleanProperty(clickable);\n  }\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: boolean) {\n    this._sortable = coerceBooleanProperty(sortable);\n  }\n  get sortable(): boolean {\n    return this._sortable;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n  get sortByColumn(): ITdDataTableColumn {\n    return this._sortBy;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    const sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ? TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n  get sortOrderEnum(): TdDataTableSortingOrder {\n    return this._sortOrder;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output() sortChange: EventEmitter<ITdDataTableSortChangeEvent> = new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output() rowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * rowClick?: function\n   * Event emitted when a row is clicked.\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\n   */\n  @Output() rowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<ITdDataTableRowClickEvent>();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output() selectAll: EventEmitter<ITdDataTableSelectAllEvent> = new EventEmitter<ITdDataTableSelectAllEvent>();\n\n  constructor(\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    private _elementRef: ElementRef,\n    private _domSanitizer: DomSanitizer,\n    _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * compareWith?: function(row, model): boolean\n   * Allows custom comparison between row and model to see if row is selected or not\n   * Default comparation is by reference\n   */\n  @Input() compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\n    return row === model;\n  };\n\n  /**\n   * Initialize observable for resize and scroll events\n   */\n  ngOnInit(): void {\n    // initialize observable for resize calculations\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\n      if (this._rows) {\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\n        });\n      }\n      this._calculateWidths();\n      this._calculateVirtualRows();\n    });\n\n    // initialize observable for column resize calculations\n    this._columnResizeSubs = this._onColumnResize\n      .asObservable()\n      .pipe(debounceTime(0))\n      .subscribe((clientX: number) => {\n        this._columnClientX = clientX;\n        this._calculateWidths();\n        this._changeDetectorRef.markForCheck();\n      });\n    // initialize observable for scroll column header reposition\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable().subscribe((horizontalScroll: number) => {\n      this._scrollHorizontalOffset = horizontalScroll;\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for virtual scroll rendering\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable().subscribe((verticalScroll: number) => {\n      this._scrollVerticalOffset = verticalScroll;\n      this._calculateVirtualRows();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (const template of this._templates.toArray()) {\n      this._templateMap.set(template.tdDataTableTemplate, template.templateRef);\n    }\n  }\n\n  /**\n   * Checks hosts native elements widths to see if it has changed (resize check)\n   */\n  ngAfterContentChecked(): void {\n    // check if the scroll has been reset when element is hidden\n    if (this._scrollVerticalOffset - this._scrollableDiv.nativeElement.scrollTop > 5) {\n      // scroll back to the top if element has been reset\n      this._onVerticalScroll.next(0);\n    }\n    if (this._elementRef.nativeElement) {\n      const newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\n      // if the width has changed then we throw a resize event.\n      if (this._hostWidth !== newHostWidth) {\n        setTimeout(() => {\n          this._hostWidth = newHostWidth;\n          this._onResize.next();\n        }, 0);\n      }\n    }\n    if (this._scrollableDiv.nativeElement) {\n      const newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n      // if the height of the viewport has changed, then we mark for check\n      if (this._hostHeight !== newHostHeight) {\n        this._hostHeight = newHostHeight;\n        this._calculateVirtualRows();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Registers to an observable that checks if all rows have been rendered\n   * so we can start calculating the widths\n   */\n  ngAfterViewInit(): void {\n    this._rowsChangedSubs = this._rows.changes.pipe(debounceTime(0)).subscribe(() => {\n      this._onResize.next();\n    });\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Unsubscribes observables when data table is destroyed\n   */\n  ngOnDestroy(): void {\n    if (this._resizeSubs) {\n      this._resizeSubs.unsubscribe();\n    }\n    if (this._columnResizeSubs) {\n      this._columnResizeSubs.unsubscribe();\n    }\n    if (this._horizontalScrollSubs) {\n      this._horizontalScrollSubs.unsubscribe();\n    }\n    if (this._verticalScrollSubs) {\n      this._verticalScrollSubs.unsubscribe();\n    }\n    if (this._rowsChangedSubs) {\n      this._rowsChangedSubs.unsubscribe();\n    }\n    if (this._valueChangesSubs) {\n      this._valueChangesSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * Method that gets executed every time there is a scroll event\n   * Calls the scroll observable\n   */\n  handleScroll(event: Event): void {\n    const element: HTMLElement = <HTMLElement>event.target;\n    if (element) {\n      const horizontalScroll: number = element.scrollLeft;\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\n        this._onHorizontalScroll.next(horizontalScroll);\n      }\n      const verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._onVerticalScroll.next(verticalScroll);\n      }\n    }\n  }\n\n  /**\n   * Returns the width needed for the columns via index\n   */\n  getColumnWidth(index: number): number {\n    if (this._widths[index]) {\n      return this._widths[index].value;\n    }\n    return undefined;\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n  getTemplateRef(name: string): TemplateRef<any> {\n    return this._templateMap.get(name);\n  }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this.value.splice(0, this.value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n    this._calculateWidths();\n    this._calculateCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  _selectAll(checked: boolean): void {\n    const toggledRows: any[] = [];\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this.value.push(row);\n          // checking which ones are being toggled\n          toggledRows.push(row);\n        }\n      });\n      this._allSelected = true;\n      this._indeterminate = true;\n    } else {\n      this._data.forEach((row: any) => {\n        // checking which ones are being toggled\n        if (this.isRowSelected(row)) {\n          toggledRows.push(row);\n          const modelRow: any = this.value.filter((val: any) => {\n            return this.compareWith(row, val);\n          })[0];\n          const index: number = this.value.indexOf(modelRow);\n          if (index > -1) {\n            this.value.splice(index, 1);\n          }\n        }\n      });\n      this._allSelected = false;\n      this._indeterminate = false;\n    }\n    this.selectAll.emit({ rows: toggledRows, selected: checked });\n    this.onChange(this.value);\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // compare items by [compareWith] function\n    return this.value\n      ? this.value.filter((val: any) => {\n          return this.compareWith(row, val);\n        }).length > 0\n      : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n   * handles cntrl clicks and shift clicks for multi-select\n   */\n  select(row: any, event: Event, currentSelected: number): void {\n    if (this.selectable) {\n      this.blockEvent(event);\n      // Check to see if Shift key is selected and need to select everything in between\n      const mouseEvent: MouseEvent = event as MouseEvent;\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n        let firstIndex: number = currentSelected;\n        let lastIndex: number = this._lastSelectedIndex;\n        if (currentSelected > this._lastSelectedIndex) {\n          firstIndex = this._lastSelectedIndex;\n          lastIndex = currentSelected;\n        }\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n        // else the checkboxes clicked are all after the initial one\n        if (\n          (this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n          (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)\n        ) {\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            if (this._firstSelectedIndex !== i) {\n              this._doSelection(this._data[i], i);\n            }\n          }\n        } else if (this._firstSelectedIndex > currentSelected || this._firstSelectedIndex < currentSelected) {\n          // change indexes depending on where the next checkbox is selected (before or after)\n          if (this._firstSelectedIndex > currentSelected) {\n            lastIndex--;\n          } else if (this._firstSelectedIndex < currentSelected) {\n            firstIndex++;\n          }\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            const rowSelected: boolean = this.isRowSelected(this._data[i]);\n            // if row is selected and first checkbox was selected\n            // or if row was unselected and first checkbox was unselected\n            // we ignore the toggle\n            if ((this._firstCheckboxValue && !rowSelected) || (!this._firstCheckboxValue && rowSelected)) {\n              this._doSelection(this._data[i], i);\n            } else if (\n              this._shiftPreviouslyPressed &&\n              ((currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex))\n            ) {\n              // else if the checkbox selected was in the middle of the last selection and the first selection\n              // then we undo the selections\n              this._doSelection(this._data[i], i);\n            }\n          }\n        }\n        this._shiftPreviouslyPressed = true;\n        // if shift wasnt pressed, then we take the element checked as the first row\n        // incase the next click uses shift\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\n        this._shiftPreviouslyPressed = false;\n        this._firstSelectedIndex = currentSelected;\n      }\n      this._lastSelectedIndex = currentSelected;\n    }\n  }\n\n  /**\n   * Overrides the onselectstart method of the document so other text on the page\n   * doesn't get selected when doing shift selections.\n   */\n  disableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = function(): boolean {\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Resets the original onselectstart method.\n   */\n  enableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = undefined;\n    }\n  }\n\n  /**\n   * emits the onRowClickEvent when a row is clicked\n   * if clickable is true and selectable is false then select the row\n   */\n  handleRowClick(row: any, index: number, event: Event): void {\n    if (this.clickable) {\n      // ignoring linting rules here because attribute it actually null or not there\n      // can't check for undefined\n      const srcElement: any = event.srcElement || event.currentTarget;\n      const element: HTMLElement = event.target as HTMLElement;\n      /* tslint:disable-next-line */\n      if (srcElement.getAttribute('stopRowClick') === null && element.tagName.toLowerCase() !== 'mat-pseudo-checkbox') {\n        this.rowClick.emit({\n          row,\n          index,\n        });\n      }\n    }\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder =\n        this._sortOrder === TdDataTableSortingOrder.Ascending\n          ? TdDataTableSortingOrder.Descending\n          : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.sortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Handle all keyup events when focusing a data table row\n   */\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        /** if user presses enter or space, the row should be selected */\n        if (this.selectable) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case UP_ARROW:\n        /**\n         * if users presses the up arrow, we focus the prev row\n         * unless its the first row\n         */\n        if (index > 0) {\n          this._rows.toArray()[index - 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case DOWN_ARROW:\n        /**\n         * if users presses the down arrow, we focus the next row\n         * unless its the last row\n         */\n        if (index < this._rows.toArray().length - 1) {\n          this._rows.toArray()[index + 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Sets column index of the dragged column and initial clientX of column\n   */\n  _handleStartColumnDrag(index: number, event: MouseEvent): void {\n    this._columnClientX = event.clientX;\n    this._resizingColumn = index;\n  }\n\n  /**\n   * Calculates new width depending on new clientX of dragger column\n   */\n  _handleColumnDrag(event: MouseEvent | DragEvent): void {\n    // check if there was been a separator clicked for resize\n    if (this._resizingColumn !== undefined && event.clientX > 0) {\n      const xPosition: number = event.clientX;\n      // checks if the separator is being moved to try and resize the column, else dont do anything\n      if (xPosition > 0 && this._columnClientX > 0 && xPosition - this._columnClientX !== 0) {\n        // calculate the new width depending if making the column bigger or smaller\n        let proposedManualWidth: number = this._widths[this._resizingColumn].value + (xPosition - this._columnClientX);\n        // if the proposed new width is less than the projected min width of the column, use projected min width\n        if (proposedManualWidth < this._colElements.toArray()[this._resizingColumn].projectedWidth) {\n          proposedManualWidth = this._colElements.toArray()[this._resizingColumn].projectedWidth;\n        }\n        this.columns[this._resizingColumn].width = proposedManualWidth;\n        // update new x position for the resized column\n        this._onColumnResize.next(xPosition);\n      }\n    }\n  }\n\n  /**\n   * Ends dragged flags\n   */\n  _handleEndColumnDrag(): void {\n    this._columnClientX = undefined;\n    this._resizingColumn = undefined;\n  }\n\n  /**\n   * Method to prevent the default events\n   */\n  blockEvent(event: Event): void {\n    event.preventDefault();\n  }\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      const splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n  /**\n   * Does the actual Row Selection\n   */\n  private _doSelection(row: any, rowIndex: number): boolean {\n    const wasSelected: boolean = this.isRowSelected(row);\n    if (!wasSelected) {\n      if (!this._multiple) {\n        this.clearModel();\n      }\n      this.value.push(row);\n    } else {\n      // compare items by [compareWith] function\n      row = this.value.filter((val: any) => {\n        return this.compareWith(row, val);\n      })[0];\n      const index: number = this.value.indexOf(row);\n      if (index > -1) {\n        this.value.splice(index, 1);\n      }\n    }\n    this._calculateCheckboxState();\n    this.rowSelect.emit({ row, index: rowIndex, selected: !wasSelected });\n    this.onChange(this.value);\n    return !wasSelected;\n  }\n\n  /**\n   * Calculate all the state of all checkboxes\n   */\n  private _calculateCheckboxState(): void {\n    if (this._data) {\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\n      this._indeterminate = false;\n      for (const row of this._data) {\n        if (!this.isRowSelected(row)) {\n          continue;\n        }\n        this._indeterminate = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Calculates the widths for columns and cells depending on content\n   */\n  private _calculateWidths(): void {\n    if (this._colElements && this._colElements.length) {\n      this._widths = [];\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\n        this._adjustColumnWidth(index, this._calculateWidth());\n      });\n      this._adjustColumnWidhts();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Adjusts columns after calculation to see if they need to be recalculated.\n   */\n  private _adjustColumnWidhts(): void {\n    let fixedTotalWidth: number = 0;\n    // get the number of total columns that have flexible widths (not fixed or hidden)\n    const flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\n      if (this.columns[index].hidden) {\n        return false;\n      }\n      if (width.limit || width.max || width.min) {\n        fixedTotalWidth += width.value;\n      }\n      return !width.limit && !width.max && !width.min;\n    }).length;\n    // calculate how much pixes are left that could be spread across\n    // the flexible columns\n    let recalculateHostWidth: number = 0;\n    if (fixedTotalWidth < this.hostWidth) {\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n    }\n    // if we have flexible columns and pixels to spare on them\n    // we try and spread the pixels across them\n    if (flexibleWidths && recalculateHostWidth) {\n      const newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\n      let adjustedNumber: number = 0;\n      // adjust the column widths with the spread pixels\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\n        if (\n          (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue) ||\n          (this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue) ||\n          !this._widths[colWidth.index].limit\n        ) {\n          this._adjustColumnWidth(colWidth.index, newValue);\n          adjustedNumber++;\n        }\n      });\n      // if there are still columns that need to be recalculated, we start over\n      const newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\n        return !width.limit && !width.max;\n      }).length;\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\n        this._adjustColumnWidhts();\n      }\n    }\n  }\n\n  /**\n   * Adjusts a single column to see if it can be recalculated\n   */\n  private _adjustColumnWidth(index: number, value: number): void {\n    this._widths[index] = {\n      value,\n      index,\n      limit: false,\n      min: false,\n      max: false,\n    };\n    // flag to see if we need to skip the min width projection\n    // depending if a width or min width has been provided\n    let skipMinWidthProjection: boolean = false;\n    if (this.columns[index]) {\n      // if the provided width has min/max, then we check to see if we need to set it\n      if (typeof this.columns[index].width === 'object') {\n        const widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\n        // if the column width is less than the configured min, we override it\n        skipMinWidthProjection = widthOpts && !!widthOpts.min;\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\n          this._widths[index].value = widthOpts.min;\n          this._widths[index].min = true;\n          // if the column width is more than the configured max, we override it\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n          this._widths[index].value = widthOpts.max;\n          this._widths[index].max = true;\n        }\n        // if it has a fixed width, then we just set it\n      } else if (typeof this.columns[index].width === 'number') {\n        this._widths[index].value = <number>this.columns[index].width;\n        skipMinWidthProjection = this._widths[index].limit = true;\n      }\n    }\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\n    if (!skipMinWidthProjection && this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n      this._widths[index].min = true;\n      this._widths[index].limit = false;\n    }\n  }\n\n  /**\n   * Generic method to calculate column width\n   */\n  private _calculateWidth(): number {\n    const renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\n    return Math.floor(this.hostWidth / renderedColumns.length);\n  }\n\n  /**\n   * Method to calculate the rows to be rendered in the viewport\n   */\n  private _calculateVirtualRows(): void {\n    let scrolledRows: number = 0;\n    if (this._data) {\n      this._totalHeight = 0;\n      let rowHeightSum: number = 0;\n      // loop through all rows to see if we have their height cached\n      // and sum them all to calculate the total height\n      this._data.forEach((d: any, i: number) => {\n        // iterate through all rows at first and assume all\n        // rows are the same height as the first one\n        if (!this._rowHeightCache[i]) {\n          this._rowHeightCache[i] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n        }\n        rowHeightSum += this._rowHeightCache[i];\n        // check how many rows have been scrolled\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\n          scrolledRows++;\n        }\n      });\n      this._totalHeight = rowHeightSum;\n      // set the initial row to be rendered taking into account the row offset\n      const fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n\n      let hostHeight: number = this._hostHeight;\n      let index: number = 0;\n      // calculate how many rows can fit in the viewport\n      while (hostHeight > 0) {\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\n        index++;\n      }\n      // set the last row to be rendered taking into account the row offset\n      const range: number = index - 1 + TD_VIRTUAL_OFFSET * 2;\n      let toRow: number = range + this.fromRow;\n      // if last row is greater than the total length, then we use the total length\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    // calculate the proper offset depending on how many rows have been scrolled\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\n      for (let index: number = 0; index < this.fromRow; index++) {\n        offset += this._rowHeightCache[index];\n      }\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle(\n      'translateY(' + (offset - this.totalHeight) + 'px)',\n    );\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Renderer2,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  ViewChild,\n} from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.scss'],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', { read: ElementRef, static: true }) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input() name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input() sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input() active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input() numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    const sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ? TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output() sortChange: EventEmitter<ITdDataTableSortChangeEvent> = new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click')\n  handleClick(): void {\n    if (this.sortable) {\n      this.sortChange.emit({ name: this.name, order: this._sortOrder });\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n}\n","import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\n\nexport type TdDataTableCellAlign = 'start' | 'center' | 'end';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td[td-data-table-cell]',\n  styleUrls: ['./data-table-cell.component.scss'],\n  templateUrl: './data-table-cell.component.html',\n})\nexport class TdDataTableCellComponent {\n  private _align: TdDataTableCellAlign;\n\n  /**\n   * numeric?: boolean\n   * Makes cell follow the numeric data-table specs.\n   * Defaults to 'false'\n   */\n  @Input() numeric: boolean = false;\n\n  /**\n   * align?: 'start' | 'center' | 'end'\n   * Makes cell content align on demand\n   * Defaults to 'left', overrides numeric\n   */\n  @Input()\n  set align(align: TdDataTableCellAlign) {\n    this._align = align;\n  }\n  get align(): TdDataTableCellAlign {\n    return this._align;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n  }\n}\n","import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'table[td-data-table]',\n  styleUrls: ['./data-table-table.component.scss'],\n  templateUrl: './data-table-table.component.html',\n})\nexport class TdDataTableTableComponent {\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nimport { TdDataTableComponent } from './data-table.component';\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nconst TD_DATA_TABLE: Type<any>[] = [\n  TdDataTableComponent,\n  TdDataTableTemplateDirective,\n\n  TdDataTableColumnComponent,\n  TdDataTableCellComponent,\n  TdDataTableRowComponent,\n  TdDataTableColumnRowComponent,\n  TdDataTableTableComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, MatTooltipModule, MatIconModule, MatPseudoCheckboxModule],\n  declarations: [TD_DATA_TABLE],\n  exports: [TD_DATA_TABLE],\n})\nexport class CovalentDataTableModule {}\n","import { Injectable } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TdDataTableService {\n  /**\n   * params:\n   * - data: any[]\n   * - searchTerm: string\n   * - ignoreCase: boolean = false\n   * - excludedColumns: string[] = []\n   *\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n   */\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\n    const filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n    if (filter) {\n      data = data.filter((item: any) => {\n        const res: any = Object.keys(item).find((key: string) => {\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n            const preItemValue: string = '' + item[key];\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n            return itemValue.indexOf(filter) > -1;\n          }\n        });\n        return typeof res !== 'undefined';\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - sortBy: string\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n   *\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n   */\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\n    if (sortBy) {\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n      data.sort((a: any, b: any) => {\n        const compA: any = a[sortBy];\n        const compB: any = b[sortBy];\n        let direction: number = 0;\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n        } else {\n          if (compA < compB) {\n            direction = -1;\n          } else if (compA > compB) {\n            direction = 1;\n          }\n        }\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - fromRow: number\n   * - toRow: : number\n   *\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n   */\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\n    if (fromRow >= 1) {\n      data = data.slice(fromRow - 1, toRow);\n    }\n    return data;\n  }\n}\n","import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({ selector: 'td-dialog-title' })\nexport class TdDialogTitleDirective {}\n\n@Directive({ selector: 'td-dialog-content' })\nexport class TdDialogContentDirective {}\n\n@Directive({ selector: 'td-dialog-actions' })\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class TdDialogComponent implements AfterContentInit {\n  @ContentChildren(TdDialogTitleDirective) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss'],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  styleUrls: ['./prompt-dialog.component.scss'],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input', { static: true }) _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close();\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport {\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n} from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatDialogModule, MatInputModule, MatButtonModule],\n  declarations: [TD_DIALOGS],\n  exports: [TD_DIALOGS],\n  entryComponents: [TD_DIALOGS_ENTRY_COMPONENTS],\n})\nexport class CovalentDialogsModule {}\n","import {\n  Injectable,\n  ViewContainerRef,\n  Provider,\n  SkipSelf,\n  Optional,\n  Inject,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\nimport { DragDrop, DragRef } from '@angular/cdk/drag-drop';\nimport { DOCUMENT } from '@angular/common';\nimport { CovalentDialogsModule } from '../dialogs.module';\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\nexport interface IDraggableConfig<T> {\n  component: ComponentType<T>;\n  config?: MatDialogConfig;\n  // CSS selectors of element(s) inside the component meant to be drag handle(s)\n  dragHandleSelectors?: string[];\n  // Class that will be added to the component signifying drag-ability\n  draggableClass?: string;\n}\n\n@Injectable({\n  providedIn: CovalentDialogsModule,\n})\nexport class TdDialogService {\n  private _renderer2: Renderer2;\n\n  constructor(\n    @Inject(DOCUMENT) private _document: any,\n    private _dialogService: MatDialog,\n    private _dragDrop: DragDrop,\n    private rendererFactory: RendererFactory2,\n  ) {\n    this._renderer2 = rendererFactory.createRenderer(undefined, undefined);\n  }\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdAlertDialogComponent> = this._dialogService.open(\n      TdAlertDialogComponent,\n      dialogConfig,\n    );\n    const alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdConfirmDialogComponent> = this._dialogService.open(\n      TdConfirmDialogComponent,\n      dialogConfig,\n    );\n    const confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdPromptDialogComponent> = this._dialogService.open(\n      TdPromptDialogComponent,\n      dialogConfig,\n    );\n    const promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * Opens a draggable dialog containing the given component.\n   */\n  public openDraggable<T>({\n    component,\n    config,\n    dragHandleSelectors,\n    draggableClass,\n  }: IDraggableConfig<T>): MatDialogRef<T> {\n    const dialogRef: MatDialogRef<T, any> = this._dialogService.open(component, config);\n\n    const CDK_OVERLAY_PANE_SELECTOR: string = '.cdk-overlay-pane';\n    const CDK_OVERLAY_CONTAINER_SELECTOR: string = '.cdk-overlay-container';\n\n    dialogRef.afterOpened().subscribe(() => {\n      const dialogElement: HTMLElement = <HTMLElement>this._document.getElementById(dialogRef.id);\n      const draggableElement: DragRef = this._dragDrop.createDrag(dialogElement);\n\n      if (draggableClass) {\n        const childComponent: Element = dialogElement.firstElementChild;\n        this._renderer2.addClass(childComponent, draggableClass);\n      }\n\n      if (dragHandleSelectors && dragHandleSelectors.length) {\n        const dragHandles: Element[] = dragHandleSelectors.reduce(\n          (acc: Element[], curr: string) => [...acc, ...Array.from(dialogElement.querySelectorAll(curr))],\n          [],\n        );\n        if (dragHandles.length > 0) {\n          draggableElement.withHandles(<HTMLElement[]>dragHandles);\n        }\n      }\n\n      const rootElement: Element = dialogElement.closest(CDK_OVERLAY_PANE_SELECTOR);\n      if (rootElement) {\n        draggableElement.withRootElement(<HTMLElement>rootElement);\n      }\n      const boundaryElement: Element = dialogElement.closest(CDK_OVERLAY_CONTAINER_SELECTOR);\n      if (boundaryElement) {\n        draggableElement.withBoundaryElement(<HTMLElement>boundaryElement);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    const dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n  ContentChild,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  tdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  tdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styleUrls: ['./expansion-panel.component.scss'],\n  templateUrl: './expansion-panel.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  animations: [tdCollapseAnimation, tdRotateAnimation],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective, { static: false })\n  expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective, { static: false }) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective, { static: false })\n  expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit();\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit();\n  }\n}\n","import {\n  Component,\n  Renderer2,\n  ElementRef,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { TdExpansionPanelComponent } from './expansion-panel.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styleUrls: ['./expansion-panel-group.component.scss'],\n  templateUrl: './expansion-panel-group.component.html',\n})\nexport class TdExpansionPanelGroupComponent implements AfterContentInit, OnDestroy {\n  private _multi: boolean = false;\n\n  private _lastOpenedPanels: TdExpansionPanelComponent[] = [];\n\n  private _destroyed: Subject<boolean> = new Subject<boolean>();\n  private _stopWatchingPanels: Subject<boolean> = new Subject<boolean>();\n\n  /**\n   * multi?: boolean\n   * Sets whether multiple panels can be opened at a given time.\n   * Set to false for accordion mode.\n   * Defaults to false.\n   */\n  @Input('multi')\n  set multi(multi: boolean) {\n    this._multi = coerceBooleanProperty(multi);\n    if (this._multi === false && this._lastOpenedPanels.length > 0) {\n      this._closeAllExcept(this._lastOpenedPanels[this._lastOpenedPanels.length - 1]);\n    }\n  }\n\n  @ContentChildren(TdExpansionPanelComponent) expansionPanels: QueryList<TdExpansionPanelComponent>;\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel-group');\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next(true);\n    this._destroyed.unsubscribe();\n    this._stopWatchingPanels.next(true);\n    this._stopWatchingPanels.unsubscribe();\n  }\n\n  public ngAfterContentInit(): void {\n    if (!this._multi) {\n      const openedPanels: TdExpansionPanelComponent[] = this.expansionPanels.filter(\n        (expansionPanel: TdExpansionPanelComponent) => expansionPanel.expand,\n      );\n      const numOpenedPanels: number = openedPanels.length;\n      if (numOpenedPanels > 1) {\n        this._closeAllExcept(openedPanels[numOpenedPanels - 1]);\n      }\n    }\n\n    this._attachListeners(this.expansionPanels);\n\n    this.expansionPanels.changes\n      .pipe(takeUntil(this._destroyed))\n      .subscribe((expansionPanels: QueryList<TdExpansionPanelComponent>) => {\n        this._stopWatchingPanels.next(true);\n        this._stopWatchingPanels.unsubscribe();\n        this._stopWatchingPanels = new Subject<boolean>();\n        this._attachListeners(expansionPanels);\n      });\n  }\n\n  /**\n   * Opens all expansion panels, only if multi set set to true.\n   */\n  public openAll(): void {\n    if (this._multi) {\n      this.expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n        expansionPanel.open();\n      });\n    }\n  }\n\n  /**\n   * Closes all expansion panels\n   */\n  public closeAll(): void {\n    this.expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.close();\n    });\n  }\n\n  private _attachListeners(expansionPanels: QueryList<TdExpansionPanelComponent>): void {\n    this._lastOpenedPanels = [];\n    expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.expanded.pipe(takeUntil(this._stopWatchingPanels)).subscribe(() => {\n        const indexOfPanel: number = this._lastOpenedPanels.indexOf(expansionPanel);\n        if (indexOfPanel !== -1) {\n          this._lastOpenedPanels.splice(indexOfPanel, 1);\n        }\n        this._lastOpenedPanels.push(expansionPanel);\n\n        if (!this._multi) {\n          this._closeAllExcept(expansionPanel);\n        }\n      });\n\n      expansionPanel.collapsed.pipe(takeUntil(this._stopWatchingPanels)).subscribe(() => {\n        const indexOfPanel: number = this._lastOpenedPanels.indexOf(expansionPanel);\n        if (indexOfPanel !== -1) {\n          this._lastOpenedPanels.splice(indexOfPanel, 1);\n        }\n      });\n    });\n  }\n\n  private _closeAllExcept(expansionPanel: TdExpansionPanelComponent): void {\n    this.expansionPanels.forEach((panel: TdExpansionPanelComponent) => {\n      if (panel !== expansionPanel) {\n        panel.close();\n      }\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport {\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n} from './expansion-panel.component';\nimport { TdExpansionPanelGroupComponent } from './expansion-panel-group.component';\n\nconst TD_EXPANSION_PANEL: Type<any>[] = [\n  TdExpansionPanelGroupComponent,\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatRippleModule, MatIconModule, PortalModule],\n  declarations: [TD_EXPANSION_PANEL],\n  exports: [TD_EXPANSION_PANEL],\n})\nexport class CovalentExpansionPanelModule {}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output() fileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {}\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'fileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'fileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      const fileInputEl: HTMLInputElement = event.target;\n      const files: FileList = fileInputEl.files;\n      if (files.length) {\n        const value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.fileSelect.emit(value);\n      }\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output() fileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'fileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      const transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      const files: FileList = transfer.files;\n      if (files.length) {\n        const value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.fileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    const transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (\n      this.disabled ||\n      (!this._multiple && ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))\n    ) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (\n      types &&\n      (((<any>types).contains && (<any>types).contains('Files')) ||\n        ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1))\n    ) {\n      dropEffect = 'copy';\n    }\n\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput', { static: true }) _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input() color: 'accent' | 'primary' | 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input() accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output() select: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.select.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n  /**\n   * Sets disable to the component. Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ContentChild,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileUploadComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent, { static: false }) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective, { static: false }) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: 'accent' | 'primary' | 'warn'\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input() defaultColor: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * activeColor?: 'accent' | 'primary' | 'warn'\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input() activeColor: 'accent' | 'primary' | 'warn' = 'accent';\n\n  /**\n   * cancelColor?: 'accent' | 'primary' | 'warn'\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input() cancelColor: 'accent' | 'primary' | 'warn' = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input() accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output() select: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output() upload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.upload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.select.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  _cancel(): void {\n    this.value = undefined;\n    this.cancel.emit();\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this._cancel();\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatIconModule, MatButtonModule, PortalModule],\n  declarations: [TD_FILE],\n  exports: [TD_FILE],\n})\nexport class CovalentFileModule {}\n","import { Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent, HttpEventType, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject, Subscriber } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CovalentFileModule } from '../file.module';\n/**\n * @deprecated should be removed in favor of IUploadInit\n * @breaking-change 3.0.0\n */\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: { [key: string]: string };\n  formData?: FormData;\n}\n\nexport interface IUploadExtras {\n  headers?: { [name: string]: string | string[] };\n  params?: { [param: string]: string | string[] };\n}\n\n@Injectable({\n  providedIn: CovalentFileModule,\n})\nexport class TdFileService {\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  /**\n   * Creates a new instance\n   * @param _http the http client instance\n   * @breaking-change 3.0.0 remove 'Optional' decorator once the legay upload method is removed\n   */\n  constructor(@Optional() private readonly _http: HttpClient) {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * Uploads a file to URL.\n   */\n  send(\n    url: string,\n    method: string,\n    body: File | FormData,\n    { headers, params }: IUploadExtras = {},\n  ): Observable<HttpEvent<any>> {\n    if (!this._http) {\n      throw new Error('The HttpClient module needs to be imported at root module level');\n    }\n    const req: HttpRequest<File | FormData> = new HttpRequest(method.toUpperCase(), url, body, {\n      reportProgress: true,\n      headers: new HttpHeaders(headers || {}),\n      params: new HttpParams({ fromObject: params || {} }),\n    });\n    return this._http.request(req).pipe(tap((event: HttpEvent<any>) => this.handleEvent(event)));\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * @deprecated use send instead\n   * @breaking-change 3.0.0\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      const xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round((event.loaded / event.total) * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (const key of Object.keys(options.headers)) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n\n  private handleEvent<T = any>(event: HttpEvent<T>): void {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        this._progressSubject.next(0);\n        break;\n      case HttpEventType.UploadProgress:\n        this._progressSubject.next(Math.round((100 * event.loaded) / event.total));\n        break;\n      case HttpEventType.Response:\n        this._progressSubject.next(100);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styleUrls: ['./json-formatter.component.scss'],\n  templateUrl: './json-formatter.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdJsonFormatterComponent {\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    const elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? 'â¦' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, @Optional() private _dir: Dir) {}\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    const type: string = this.getType(value);\n    if (type === 'undefined' || type === 'null') {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return (\n        value\n          .toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{â¦}'\n      );\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      const date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]' && !Number.isNaN(date.getTime())) {\n        return 'date';\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    const object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n      return 'Object';\n    }\n    const funcNameRegex: RegExp = /function (.{1,})\\(/;\n    const results: RegExpExecArray = funcNameRegex.exec(object.constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      const previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      const previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    const previewString: string = previewData.join(', ');\n    const ellipsis: string =\n      previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n      previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH\n        ? 'â¦'\n        : '';\n    return (\n      startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) + ellipsis + endChar\n    );\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (const key of Object.keys(this._data)) {\n        this._children.push(key);\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [CommonModule, MatTooltipModule, MatIconModule],\n  declarations: [TdJsonFormatterComponent],\n  exports: [TdJsonFormatterComponent],\n})\nexport class CovalentJsonFormatterModule {}\n","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss'],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase {}\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable, private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n  @Input('tdLayoutToggle')\n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  @Input('tdLayoutClose')\n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n  @Input('tdLayoutOpen')\n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss'],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss'],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutNavListToggle')\n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutNavListClose')\n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutNavListOpen')\n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss'],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input() cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input() cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input() cardWidth: number = 70;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss'],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutManageListToggle')\n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutManageListClose')\n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutManageListOpen')\n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss'],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ContentChildren,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  Inject,\n  QueryList,\n  SecurityContext,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss'],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective) _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective) _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input() sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * avatar?: string\n   *\n   * avatar url to be displayed before the title\n   * If [icon] or [logo] are set, then this will not be shown.\n   */\n  @Input() avatar: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      const sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input() name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input() email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n    @Optional() private _router: Router,\n    private _sanitize: DomSanitizer,\n  ) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollDispatchModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [TD_LAYOUTS],\n  exports: [TD_LAYOUTS],\n})\nexport class CovalentLayoutModule {}\n","import {\n  Component,\n  ViewChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  DoCheck,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Observable, Subject } from 'rxjs';\n\nexport enum LoadingType {\n  Circular = 'circular',\n  Linear = 'linear',\n}\n\nexport enum LoadingMode {\n  Determinate = 'determinate',\n  Indeterminate = 'indeterminate',\n}\n\nexport enum LoadingStrategy {\n  Overlay = 'overlay',\n  Replace = 'replace',\n}\n\nexport enum LoadingStyle {\n  FullScreen = 'fullscreen',\n  Overlay = 'overlay',\n  None = 'none',\n}\n\nimport { tdFadeInOutAnimation } from '@covalent/core/common';\n\nexport const TD_CIRCLE_DIAMETER: number = 100;\n\n@Component({\n  selector: 'td-loading',\n  styleUrls: ['./loading.component.scss'],\n  templateUrl: './loading.component.html',\n  animations: [tdFadeInOutAnimation],\n})\nexport class TdLoadingComponent implements DoCheck {\n  private _animationIn: Subject<any> = new Subject<any>();\n  private _animationOut: Subject<any> = new Subject<any>();\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\n  private _value: number = 0;\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\n\n  /**\n   * Flag for animation\n   */\n  animation: boolean = false;\n\n  /**\n   * Content injected into loading component.\n   */\n  content: TemplatePortal<any>;\n\n  /**\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\n   */\n  set mode(mode: LoadingMode) {\n    this._defaultMode = mode;\n  }\n  get mode(): LoadingMode {\n    return this._mode;\n  }\n\n  /**\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\n   */\n  set value(value: number) {\n    this._value = value;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  style: LoadingStyle = LoadingStyle.None;\n\n  /**\n   * height: number\n   * Sets height of [TdLoadingComponent].\n   */\n  height: number;\n\n  /**\n   * type: LoadingType\n   * Sets type of [TdLoadingComponent] rendered.\n   */\n  type: LoadingType = LoadingType.Circular;\n\n  /**\n   * color: primary' | 'accent' | 'warn'\n   * Sets theme color of [TdLoadingComponent] rendered.\n   */\n  color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck(): void {\n    // When overlay is used and the host width has a value greater than 1px\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\n    if (this.isOverlay() && this._hostHeight() > 1 && this.animation) {\n      this._setCircleDiameter();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  getHeight(): string {\n    // Ignore height if style is `overlay` or `fullscreen`.\n    // Add height if child elements have a height and style is `none`, else return default height.\n    if (this.isOverlay() || this.isFullScreen()) {\n      return undefined;\n    } else {\n      return this.height ? `${this.height}px` : '150px';\n    }\n  }\n\n  getCircleDiameter(): number {\n    return this._circleDiameter;\n  }\n\n  getCircleStrokeWidth(): number {\n    // we calculate the stroke width by setting it as 10% of its diameter\n    const strokeWidth: number = this.getCircleDiameter() / 10;\n    return Math.abs(strokeWidth);\n  }\n\n  isCircular(): boolean {\n    return this.type === LoadingType.Circular;\n  }\n\n  isLinear(): boolean {\n    return this.type === LoadingType.Linear;\n  }\n\n  isFullScreen(): boolean {\n    return this.style === LoadingStyle.FullScreen;\n  }\n\n  isOverlay(): boolean {\n    return this.style === LoadingStyle.Overlay;\n  }\n\n  animationComplete(event: AnimationEvent): void {\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\n    if (!event.fromState) {\n      this.inAnimationCompleted();\n    } else {\n      this.outAnimationCompleted();\n    }\n  }\n\n  inAnimationCompleted(): void {\n    this._animationIn.next();\n  }\n\n  outAnimationCompleted(): void {\n    /* little hack to reset the loader value and animation before removing it from DOM\n     * else, the loader will appear with prev value when its registered again\n     * and will do an animation going prev value to 0.\n     */\n    this.value = 0;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    this._animationOut.next();\n  }\n\n  /**\n   * Starts in animation and returns an observable for completition event.\n   */\n  startInAnimation(): Observable<any> {\n    /* need to switch back to the selected mode, so we have saved it in another variable\n     *  and then recover it. (issue with protractor)\n     */\n    this._mode = this._defaultMode;\n    // Set values before the animations starts\n    this._setCircleDiameter();\n    // Check for changes for `OnPush` change detection\n    this.animation = true;\n    this._changeDetectorRef.markForCheck();\n    return this._animationIn.asObservable();\n  }\n\n  /**\n   * Starts out animation and returns an observable for completition event.\n   */\n  startOutAnimation(): Observable<any> {\n    this.animation = false;\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\n     * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\n     */\n    this._mode = LoadingMode.Determinate;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    return this._animationOut.asObservable();\n  }\n\n  /**\n   * Calculate the proper diameter for the circle and set it\n   */\n  private _setCircleDiameter(): void {\n    // we set a default diameter of 100 since this is the default in material\n    let diameter: number = TD_CIRCLE_DIAMETER;\n    // if height is provided, then we take that as diameter\n    if (this.height) {\n      diameter = this.height;\n      // else if its not provided, then we take the host height\n    } else if (this.height === undefined) {\n      diameter = this._hostHeight();\n    }\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\n      this._circleDiameter = Math.floor(diameter);\n    } else {\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\n    }\n  }\n\n  /**\n   * Returns the host height of the loading component\n   */\n  private _hostHeight(): number {\n    if (<HTMLElement>this._elementRef.nativeElement) {\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return 0;\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ChangeDetectorRef,\n  Provider,\n  SkipSelf,\n  Optional,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingStyle } from '../loading.component';\nimport { ITdLoadingConfig } from './loading.service';\n\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\n  height?: number;\n  style?: LoadingStyle;\n}\n\nexport interface ILoadingRef {\n  observable: Observable<any>;\n  componentRef: ComponentRef<any>;\n  subject?: Subject<any>;\n  times?: number;\n}\n\n/**\n * NOTE: @internal usage only.\n */\n@Injectable()\nexport class TdLoadingFactory {\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _overlay: Overlay,\n    private _injector: Injector,\n  ) {}\n\n  /**\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\n   * into it. Leveraging the state and configuration from it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\n    const loadingRef: ILoadingRef = this._initializeContext();\n    let loading: boolean = false;\n    let overlayRef: OverlayRef;\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        overlayRef = this._createOverlay();\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\n        this._mapOptions(options, loadingRef.componentRef.instance);\n        loadingRef.componentRef.instance.startInAnimation();\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        const subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          loadingRef.componentRef.destroy();\n          overlayRef.detach();\n          overlayRef.dispose();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\n   * perfectly when overlaying it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createOverlayComponent(\n    options: ITdLoadingConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<object>,\n  ): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\n    const loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\n    viewContainerRef.clear();\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        loadingRef.componentRef.instance.startOutAnimation();\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Replaces the template with the loading component depending if it was registered or resolved.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createReplaceComponent(\n    options: ITdLoadingConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<object>,\n    context: TdLoadingContext,\n  ): ILoadingRef {\n    const nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling\n      ? nativeElement.nextElementSibling.scrollHeight\n      : undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\n    const loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    // passing context so when the template is attached, we can keep the reference of the variables\n    const contentRef: EmbeddedViewRef<object> = viewContainerRef.createEmbeddedView(templateRef, context);\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        // detach the content and attach the loader if loader is there\n        const index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\n        if (index < 0) {\n          viewContainerRef.detach(viewContainerRef.indexOf(contentRef));\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n        }\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        const subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          // detach loader and attach the content if content is there\n          const index: number = viewContainerRef.indexOf(contentRef);\n          if (index < 0) {\n            viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\n            viewContainerRef.insert(contentRef, 0);\n          }\n          /**\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\n           * with \"OnPush\" change detection\n           */\n          contentRef.detectChanges();\n          contentRef.markForCheck();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a fullscreen overlay for the loading usage.\n   */\n  private _createOverlay(): OverlayRef {\n    const state: OverlayConfig = new OverlayConfig();\n    state.hasBackdrop = false;\n    state.positionStrategy = this._overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n    return this._overlay.create(state);\n  }\n\n  /**\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\n   */\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\n    const compRef: ILoadingRef = this._initializeContext();\n    compRef.componentRef = this._componentFactoryResolver\n      .resolveComponentFactory(TdLoadingComponent)\n      .create(this._injector);\n    this._mapOptions(options, compRef.componentRef.instance);\n    return compRef;\n  }\n\n  /**\n   * Initialize context for loading component.\n   */\n  private _initializeContext(): ILoadingRef {\n    const subject: Subject<any> = new Subject<any>();\n    return {\n      observable: subject.asObservable(),\n      subject,\n      componentRef: undefined,\n      times: 0,\n    };\n  }\n\n  /**\n   * Maps configuration to the loading component instance.\n   */\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\n    instance.style = options.style;\n    if (options.type !== undefined) {\n      instance.type = options.type;\n    }\n    if (options.height !== undefined) {\n      instance.height = options.height;\n    }\n    if (options.mode !== undefined) {\n      instance.mode = options.mode;\n    }\n    if (options.color !== undefined) {\n      instance.color = options.color;\n    }\n  }\n}\n\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\n  parent: TdLoadingFactory,\n  componentFactoryResolver: ComponentFactoryResolver,\n  overlay: Overlay,\n  injector: Injector,\n): TdLoadingFactory {\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\n}\n\nexport const LOADING_FACTORY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingFactory,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\n\nexport interface ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n}\n\nexport class TdLoadingConfig implements ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n\n  constructor(config: ITdLoadingConfig) {\n    this.name = config.name;\n    if (!this.name) {\n      throw Error('Name is required for [TdLoading] configuration.');\n    }\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\n    this.type = config.type ? config.type : LoadingType.Circular;\n    this.color = config.color ? config.color : 'primary';\n  }\n}\n\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\n  strategy?: LoadingStrategy;\n}\n\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\n  name: string;\n  type: LoadingType;\n  mode: LoadingMode;\n  strategy: LoadingStrategy;\n\n  constructor(config: ITdLoadingDirectiveConfig) {\n    super(config);\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\n  }\n}\n\n@Injectable()\nexport class TdLoadingService {\n  private _context: { [key: string]: ILoadingRef } = {};\n  private _timeouts: { [key: string]: any } = {};\n\n  constructor(private _loadingFactory: TdLoadingFactory) {\n    this.create({\n      name: 'td-loading-main',\n    });\n  }\n\n  /**\n   * params:\n   * - config: ILoadingDirectiveConfig\n   * - viewContainerRef: ViewContainerRef\n   * - templateRef: TemplateRef<Object>\n   *\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\n   * Replaces the templateRef with the mask when a request is registered on it.\n   *\n   * NOTE: @internal usage only.\n   */\n  createComponent(\n    config: ITdLoadingDirectiveConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<object>,\n    context: TdLoadingContext,\n  ): ILoadingRef {\n    const directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\n    if (this._context[directiveConfig.name]) {\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\n    }\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(\n        directiveConfig,\n        viewContainerRef,\n        templateRef,\n      );\n    } else {\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(\n        directiveConfig,\n        viewContainerRef,\n        templateRef,\n        context,\n      );\n    }\n    return this._context[directiveConfig.name];\n  }\n\n  /**\n   * params:\n   * - config: ITdLoadingConfig\n   *\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\n   * Only displayed when the mask has a request registered on it.\n   */\n  public create(config: ITdLoadingConfig): void {\n    const fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\n    this.removeComponent(fullscreenConfig.name);\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\n  }\n\n  /**\n   * params:\n   * - name: string\n   *\n   * Removes `loading` component from service context.\n   */\n  public removeComponent(name: string): void {\n    if (this._context[name]) {\n      this._context[name].subject.unsubscribe();\n      if (this._context[name].componentRef) {\n        this._context[name].componentRef.destroy();\n      }\n      this._context[name] = undefined;\n      delete this._context[name];\n    }\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - registers?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass registers argument to set a number of register calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.register()\n   */\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\n    // try registering into the service if the loading component has been instanciated or if it exists.\n    if (this._context[name]) {\n      registers = registers < 1 ? 1 : registers;\n      this._context[name].times += registers;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    } else {\n      // if it doesnt exist, set a timeout so its registered after change detection happens\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\n      if (!this._timeouts[name]) {\n        this._timeouts[name] = setTimeout(() => {\n          this.register(name, registers);\n        });\n      } else {\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\n        this._clearTimeout(name);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - resolves?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass resolves argument to set a number of resolve calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolve()\n   */\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      resolves = resolves < 1 ? 1 : resolves;\n      if (this._context[name].times > 0) {\n        let times: number = this._context[name].times;\n        times -= resolves;\n        this._context[name].times = times < 0 ? 0 : times;\n      }\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * returns: true if successful\n   *\n   * Resolves all request for the loading mask referenced by the name parameter.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolveAll()\n   */\n  public resolveAll(name: string = 'td-loading-main'): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      this._context[name].times = 0;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - value: number\n   * returns: true if successful\n   *\n   * Set value on a loading mask referenced by the name parameter.\n   * Usage only available if its mode is 'determinate' and if loading is showing.\n   */\n  public setValue(name: string, value: number): boolean {\n    if (this._context[name]) {\n      const instance: TdLoadingComponent = this._context[name].componentRef.instance;\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\n        instance.value = value;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Clears timeout linked to the name.\n   * @param name Name of the loading component to be cleared\n   */\n  private _clearTimeout(name: string): void {\n    clearTimeout(this._timeouts[name]);\n    delete this._timeouts[name];\n  }\n}\n\nexport function LOADING_PROVIDER_FACTORY(parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\n  return parent || new TdLoadingService(loadingFactory);\n}\n\nexport const LOADING_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingService,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\n  useFactory: LOADING_PROVIDER_FACTORY,\n};\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\n\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\nimport { TdLoadingService } from '../services/loading.service';\nimport { ILoadingRef } from '../services/loading.factory';\n\n/**\n * Context class for variable reference\n */\nexport class TdLoadingContext {\n  public $implicit: any = undefined;\n  public tdLoading: any = undefined;\n}\n\n// Constant for generation of the id for the next component\nlet TD_LOADING_NEXT_ID: number = 0;\n\n@Directive({\n  selector: '[tdLoading]',\n})\nexport class TdLoadingDirective implements OnInit, OnDestroy {\n  private _context: TdLoadingContext = new TdLoadingContext();\n  private _type: LoadingType;\n  private _mode: LoadingMode;\n  private _strategy: LoadingStrategy;\n  private _name: string;\n  private _loadingRef: ILoadingRef;\n\n  /**\n   * tdLoading: string\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\n   */\n  @Input('tdLoading')\n  set name(name: string) {\n    if (!this._name && name) {\n      this._name = name;\n    }\n  }\n\n  /**\n   * tdLoadingUntil?: any\n   * If its null, undefined or false it will be used to register requests to the mask.\n   * Else if its any value that can be resolved as true, it will resolve the mask.\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\n   */\n  @Input('tdLoadingUntil')\n  set until(until: any) {\n    if (!this._name) {\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\n    }\n    this._context.$implicit = this._context.tdLoading = until;\n    if (!until) {\n      this._loadingService.register(this._name);\n    } else {\n      this._loadingService.resolveAll(this._name);\n    }\n  }\n\n  /**\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\n   * Sets the type of loading mask depending on value.\n   * Defaults to [LoadingType.Circular | 'circular'].\n   */\n  @Input('tdLoadingType')\n  set type(type: LoadingType) {\n    if (type === LoadingType.Linear) {\n      this._type = LoadingType.Linear;\n    } else {\n      this._type = LoadingType.Circular;\n    }\n  }\n\n  /**\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\n   * Sets the mode of loading mask depending on value.\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\n   */\n  @Input('tdLoadingMode')\n  set mode(mode: LoadingMode) {\n    if (mode === LoadingMode.Determinate) {\n      this._mode = LoadingMode.Determinate;\n    } else {\n      this._mode = LoadingMode.Indeterminate;\n    }\n  }\n\n  /**\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\n   * Sets the strategy of loading mask depending on value.\n   * Defaults to [LoadingMode.Replace | 'replace'].\n   */\n  @Input('tdLoadingStrategy')\n  set strategy(strategy: LoadingStrategy) {\n    if (strategy === LoadingStrategy.Overlay) {\n      this._strategy = LoadingStrategy.Overlay;\n    } else {\n      this._strategy = LoadingStrategy.Replace;\n    }\n  }\n\n  /**\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the loading component. Defaults to \"primary\"\n   */\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _templateRef: TemplateRef<TdLoadingContext>,\n    private _loadingService: TdLoadingService,\n  ) {}\n\n  /**\n   * Registers component in the DOM, so it will be available when calling resolve/register.\n   */\n  ngOnInit(): void {\n    this._registerComponent();\n  }\n\n  /**\n   * Remove component when directive is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._loadingService.removeComponent(this._name);\n    this._loadingRef = undefined;\n  }\n\n  /**\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\n   */\n  private _registerComponent(): void {\n    if (!this._name) {\n      throw new Error('Name is needed to register loading directive');\n    }\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\n    if (!this._loadingRef) {\n      this._loadingRef = this._loadingService.createComponent(\n        {\n          name: this._name,\n          type: this._type,\n          mode: this._mode,\n          color: this.color,\n          strategy: this._strategy,\n        },\n        this._viewContainerRef,\n        this._templateRef,\n        this._context,\n      );\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\nimport { TdLoadingDirective } from './directives/loading.directive';\nimport { TdLoadingComponent } from './loading.component';\n\nconst TD_LOADING: Type<any>[] = [TdLoadingComponent, TdLoadingDirective];\n\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [TdLoadingComponent];\n\n@NgModule({\n  imports: [CommonModule, MatProgressBarModule, MatProgressSpinnerModule, OverlayModule, PortalModule],\n  declarations: [TD_LOADING],\n  exports: [TD_LOADING],\n  providers: [LOADING_FACTORY_PROVIDER, LOADING_PROVIDER],\n  entryComponents: [TD_LOADING_ENTRY_COMPONENTS],\n})\nexport class CovalentLoadingModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TdMediaService {\n  private _resizing: boolean = false;\n  private _globalSubscription: Subscription;\n  private _queryMap: Map<string, string> = new Map<string, string>();\n  private _querySources: { [key: string]: BehaviorSubject<boolean> } = {};\n  private _queryObservables: { [key: string]: Observable<boolean> } = {};\n\n  constructor(private _ngZone: NgZone) {\n    this._queryMap.set('xs', '(max-width: 599px)');\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\n    this._queryMap.set('xl', '(min-width: 1920px)');\n    this._queryMap.set('landscape', '(orientation: landscape)');\n    this._queryMap.set('portrait', '(orientation: portrait)');\n    this._queryMap.set('print', 'print');\n\n    this._resizing = false;\n    // we make sure that the resize checking happend outside of Angular since it happens often\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window, 'resize').subscribe(() => {\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\n        if (!this._resizing) {\n          this._resizing = true;\n          setTimeout(() => {\n            this._onResize();\n            this._resizing = false;\n          }, 100);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deregisters a query so its stops being notified or used.\n   */\n  deregisterQuery(query: string): void {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    this._querySources[query].unsubscribe();\n    delete this._querySources[query];\n    delete this._queryObservables[query];\n  }\n\n  /**\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\n   */\n  public query(query: string): boolean {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    return this._ngZone.run(() => {\n      return matchMedia(query).matches;\n    });\n  }\n\n  /**\n   * Registers a media query and returns an [Observable] that will re-evaluate and\n   * return if the given media query matches on window resize.\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\n   */\n  public registerQuery(query: string): Observable<boolean> {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    if (!this._querySources[query]) {\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\n      this._queryObservables[query] = this._querySources[query].asObservable();\n    }\n    return this._queryObservables[query];\n  }\n\n  /**\n   * Trigger a match media event on all subscribed observables.\n   */\n  public broadcast(): void {\n    this._onResize();\n  }\n\n  private _onResize(): void {\n    for (const query of Object.keys(this._querySources)) {\n      this._ngZone.run(() => {\n        this._matchMediaTrigger(query);\n      });\n    }\n  }\n\n  private _matchMediaTrigger(query: string): void {\n    this._querySources[query].next(matchMedia(query).matches);\n  }\n}\n","import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: { [key: string]: string } = {};\n  private _styles: { [key: string]: string } = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) {}\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (const attr in this._attributes) {\n      if (this._matches) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\n      }\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      if (this._matches) {\n        this._renderer.addClass(this._elementRef.nativeElement, className);\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\n      }\n    });\n  }\n\n  private _changeStyles(): void {\n    for (const style in this._styles) {\n      if (this._matches) {\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\n      } else {\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\n      }\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { TdMediaToggleDirective } from './directives/media-toggle.directive';\n\nconst TD_MEDIA: Type<any>[] = [TdMediaToggleDirective];\n\n@NgModule({\n  declarations: [TD_MEDIA],\n  exports: [TD_MEDIA],\n})\nexport class CovalentMediaModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class TdMenuComponent {}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdMenuComponent } from './menu.component';\n\nconst TD_MENU: Type<any>[] = [TdMenuComponent];\n\n@NgModule({\n  imports: [CommonModule, MatMenuModule, MatDividerModule],\n  declarations: [TD_MENU],\n  exports: [TD_MENU],\n})\nexport class CovalentMenuModule {}\n","import {\n  Component,\n  ViewChild,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  Optional,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Dir } from '@angular/cdk/bidi';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\n\nimport { debounceTime, skip } from 'rxjs/operators';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchInputMixinBase = mixinControlValueAccessor(TdSearchInputBase);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdSearchInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('searchState', [\n      state(\n        'hide-left',\n        style({\n          transform: 'translateX(-150%)',\n          display: 'none',\n        }),\n      ),\n      state(\n        'hide-right',\n        style({\n          transform: 'translateX(150%)',\n          display: 'none',\n        }),\n      ),\n      state(\n        'show',\n        style({\n          transform: 'translateX(0%)',\n          display: 'block',\n        }),\n      ),\n      transition('* => show', animate('200ms ease-in')),\n      transition('show => *', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchInputComponent extends _TdSearchInputMixinBase implements IControlValueAccessor, OnInit {\n  @ViewChild(MatInput, { static: true }) _input: MatInput;\n\n  /**\n   * appearance?: MatFormFieldAppearance\n   * Appearance style for the underlying input component.\n   */\n  @Input() appearance: MatFormFieldAppearance;\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input() showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input() debounce: number = 400;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input() placeholder: string;\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input() clearIcon: string = 'cancel';\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output() searchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output() clear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output() blur: EventEmitter<void> = new EventEmitter<void>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._input.ngControl.valueChanges\n      .pipe(\n        debounceTime(this.debounce),\n        skip(1), // skip first change when value is set to undefined\n      )\n      .subscribe((value: string) => {\n        this._searchTermChanged(value);\n      });\n  }\n\n  /**\n   * Method to focus to underlying input.\n   */\n  focus(): void {\n    this._input.focus();\n  }\n\n  handleBlur(): void {\n    this.blur.emit();\n  }\n\n  stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  handleSearch(event: Event): void {\n    this.stopPropagation(event);\n    this.search.emit(this.value);\n  }\n\n  /**\n   * Method to clear the underlying input.\n   */\n  clearSearch(): void {\n    this.value = '';\n    this._changeDetectorRef.markForCheck();\n    this.clear.emit();\n  }\n\n  private _searchTermChanged(value: string): void {\n    this.searchDebounce.emit(value);\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';\n\nimport { TdSearchInputComponent } from '../search-input/search-input.component';\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchBoxBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdSearchBoxComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('inputState', [\n      state(\n        '0',\n        style({\n          width: '0%',\n          margin: '0px',\n        }),\n      ),\n      state(\n        '1',\n        style({\n          width: '100%',\n          margin: AUTO_STYLE,\n        }),\n      ),\n      transition('0 => 1', animate('200ms ease-in')),\n      transition('1 => 0', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {\n  private _searchVisible: boolean = false;\n  @ViewChild(TdSearchInputComponent, { static: true }) _searchInput: TdSearchInputComponent;\n\n  get searchVisible(): boolean {\n    return this._searchVisible;\n  }\n\n  /**\n   * backIcon?: string\n   * The icon used to close the search toggle, only shown when [alwaysVisible] is false.\n   * Defaults to 'search' icon.\n   */\n  @Input() backIcon: string = 'search';\n\n  /**\n   * searchIcon?: string\n   * The icon used to open/focus the search toggle.\n   * Defaults to 'search' icon.\n   */\n  @Input() searchIcon: string = 'search';\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input() clearIcon: string = 'cancel';\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input() showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input() debounce: number = 400;\n\n  /**\n   * alwaysVisible?: boolean\n   * Sets if the input should always be visible. Defaults to 'false'.\n   */\n  @Input() alwaysVisible: boolean = false;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input() placeholder: string;\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output() searchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output() clear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output() blur: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when the search icon is clicked.\n   */\n  searchClicked(): void {\n    if (!this.alwaysVisible && this._searchVisible) {\n      this.value = '';\n      this.handleClear();\n    } else if (this.alwaysVisible || !this._searchVisible) {\n      this._searchInput.focus();\n    }\n    this.toggleVisibility();\n  }\n\n  toggleVisibility(): void {\n    this._searchVisible = !this._searchVisible;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  handleSearchDebounce(value: string): void {\n    this.searchDebounce.emit(value);\n  }\n\n  handleSearch(value: string): void {\n    this.search.emit(value);\n  }\n\n  handleClear(): void {\n    this.clear.emit();\n  }\n\n  handleBlur(): void {\n    this.blur.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdSearchInputComponent } from './search-input/search-input.component';\nimport { TdSearchBoxComponent } from './search-box/search-box.component';\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatInputModule, MatIconModule, MatButtonModule],\n  declarations: [TdSearchInputComponent, TdSearchBoxComponent],\n  exports: [TdSearchInputComponent, TdSearchBoxComponent],\n})\nexport class CovalentSearchModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  separatorIcon: string = 'chevron_right';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input() separatorIcon: string = 'chevron_right';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(debounceTime(10)),\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    const element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    const style: CSSStyleDeclaration = window.getComputedStyle(element);\n    const borderLeft: number = parseInt(style.borderLeft, 10);\n    const borderRight: number = parseInt(style.borderRight, 10);\n    const marginLeft: number = parseInt(style.marginLeft, 10);\n    const marginRight: number = parseInt(style.marginRight, 10);\n    const paddingLeft: number = parseInt(style.paddingLeft, 10);\n    const paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    const breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private _calculateVisibility(): void {\n    const crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    const hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      const breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if (crumbWidthSum + breadcrumb.width > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n  exports: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n})\nexport class CovalentBreadcrumbsModule {}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ContentChild,\n  OnInit,\n} from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective, TemplatePortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nexport enum StepState {\n  None = 'none',\n  Required = 'required',\n  Complete = 'complete',\n}\n\n@Directive({\n  selector: '[td-step-label]ng-template',\n})\nexport class TdStepLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-actions]ng-template',\n})\nexport class TdStepActionsDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-summary]ng-template',\n})\nexport class TdStepSummaryDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdStepBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepMixinBase = mixinDisableRipple(mixinDisabled(TdStepBase));\n\n@Component({\n  selector: 'td-step',\n  inputs: ['disabled', 'disableRipple'],\n  templateUrl: './step.component.html',\n})\nexport class TdStepComponent extends _TdStepMixinBase implements OnInit, ICanDisable, ICanDisableRipple {\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  private _contentPortal: TemplatePortal<any>;\n  get stepContent(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef, { static: true }) _content: TemplateRef<any>;\n  @ContentChild(TdStepLabelDirective, { static: false }) stepLabel: TdStepLabelDirective;\n  @ContentChild(TdStepActionsDirective, { static: false }) stepActions: TdStepActionsDirective;\n  @ContentChild(TdStepSummaryDirective, { static: false }) stepSummary: TdStepSummaryDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdStepComponent] header.\n   * Defaults to 'Step #'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdStepComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles [TdStepComponent] between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._setActive(coerceBooleanProperty(active));\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of [TdStepComponent] depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * activated?: function\n   * Event emitted when [TdStepComponent] is activated.\n   */\n  @Output() activated: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * deactivated?: function\n   * Event emitted when [TdStepComponent] is deactivated.\n   */\n  @Output() deactivated: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n  /**\n   * Toggle active state of [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setActive(!this._active);\n  }\n\n  /**\n   * Opens [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setActive(true);\n  }\n\n  /**\n   * Closes [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setActive(false);\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this._state === StepState.Complete;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._active) {\n      this._active = false;\n      this._onDeactivated();\n    }\n  }\n\n  /**\n   * Method to change active state internally and emit the [activated] event if 'true' or [deactivated]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   * returns true if successfully changed state\n   */\n  private _setActive(newActive: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._active !== newActive) {\n      this._active = newActive;\n      if (newActive) {\n        this._onActivated();\n      } else {\n        this._onDeactivated();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onActivated(): void {\n    this.activated.emit();\n  }\n\n  private _onDeactivated(): void {\n    this.deactivated.emit();\n  }\n}\n","import { Component, Input, Output } from '@angular/core';\nimport { OnDestroy, AfterContentInit } from '@angular/core';\nimport { EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdStepComponent } from './step.component';\n\nexport interface IStepChangeEvent {\n  newStep: TdStepComponent;\n  prevStep: TdStepComponent;\n}\n\nexport enum StepMode {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\n@Component({\n  selector: 'td-steps',\n  styleUrls: ['./steps.component.scss'],\n  templateUrl: './steps.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps',\n  },\n})\nexport class TdStepsComponent implements OnDestroy, AfterContentInit {\n  private _subcriptions: Subscription[];\n  private _mode: StepMode = StepMode.Vertical;\n  private _steps: QueryList<TdStepComponent>;\n\n  @ContentChildren(TdStepComponent)\n  set stepsContent(steps: QueryList<TdStepComponent>) {\n    if (steps) {\n      this._steps = steps;\n      this._registerSteps();\n    }\n  }\n\n  get steps(): TdStepComponent[] {\n    return this._steps.toArray();\n  }\n  prevStep: TdStepComponent;\n\n  /**\n   * mode?: StepMode or [\"vertical\" | \"horizontal\"]\n   * Defines if the mode of the [TdStepsComponent].  Defaults to [StepMode.Vertical | \"vertical\"]\n   */\n  @Input('mode')\n  set mode(mode: StepMode) {\n    if (mode === StepMode.Horizontal) {\n      this._mode = StepMode.Horizontal;\n    } else {\n      this._mode = StepMode.Vertical;\n    }\n  }\n  get mode(): StepMode {\n    return this._mode;\n  }\n\n  /**\n   * stepChange?: function\n   * Method to be executed when [stepChange] event is emitted.\n   * Emits an [IStepChangeEvent] implemented object.\n   */\n  @Output() stepChange: EventEmitter<IStepChangeEvent> = new EventEmitter<IStepChangeEvent>();\n\n  /**\n   * Executed after content is initialized, loops through any [TdStepComponent] children elements,\n   * assigns them a number and subscribes as an observer to their [activated] event.\n   */\n  ngAfterContentInit(): void {\n    this._registerSteps();\n  }\n\n  /**\n   * Unsubscribes from [TdStepComponent] children elements when component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._deregisterSteps();\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Horizontal | 'horizontal'], else 'false'.\n   */\n  isHorizontal(): boolean {\n    return this._mode === StepMode.Horizontal;\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Vertical | 'vertical'], else 'false'.\n   */\n  isVertical(): boolean {\n    return this._mode === StepMode.Vertical;\n  }\n\n  areStepsActive(): boolean {\n    return (\n      this._steps.filter((step: TdStepComponent) => {\n        return step.active;\n      }).length > 0\n    );\n  }\n\n  /**\n   * Wraps previous and new [TdStepComponent] numbers in an object that implements [IStepChangeEvent]\n   * and emits [stepChange] event.\n   */\n  private _onStepSelection(step: TdStepComponent): void {\n    if (this.prevStep !== step) {\n      const prevStep: TdStepComponent = this.prevStep;\n      this.prevStep = step;\n      const event: IStepChangeEvent = {\n        newStep: step,\n        prevStep,\n      };\n      this._deactivateAllBut(step);\n      this.stepChange.emit(event);\n    }\n  }\n\n  /**\n   * Loops through [TdStepComponent] children elements and deactivates them ignoring the one passed as an argument.\n   */\n  private _deactivateAllBut(activeStep: TdStepComponent): void {\n    this._steps\n      .filter((step: TdStepComponent) => step !== activeStep)\n      .forEach((step: TdStepComponent) => {\n        step.active = false;\n      });\n  }\n\n  private _registerSteps(): void {\n    this._subcriptions = [];\n    this._steps.toArray().forEach((step: TdStepComponent) => {\n      const subscription: Subscription = step.activated.asObservable().subscribe(() => {\n        this._onStepSelection(step);\n      });\n      this._subcriptions.push(subscription);\n    });\n  }\n\n  private _deregisterSteps(): void {\n    if (this._subcriptions) {\n      this._subcriptions.forEach((subs: Subscription) => {\n        subs.unsubscribe();\n      });\n      this._subcriptions = undefined;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nimport { StepState } from '../step.component';\n\nexport class TdStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdStepHeaderBase));\n\n@Component({\n  selector: 'td-step-header',\n  inputs: ['disabled', 'disableRipple'],\n  styleUrls: ['./step-header.component.scss'],\n  templateUrl: './step-header.component.html',\n})\nexport class TdStepHeaderComponent extends _TdStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n  /**\n   * Number assigned to [TdStepHeaderComponent].\n   */\n  @Input() number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input() active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input() state: StepState = StepState.None;\n\n  /**\n   * tabIndex?: number\n   * tabIndex of the step header for a11y\n   */\n  @Input() tabIndex: number;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\nimport { StepState } from '../step.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  selector: 'td-step-body',\n  styleUrls: ['./step-body.component.scss'],\n  templateUrl: './step-body.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdStepBodyComponent {\n  @ViewChild('contentRef', { read: ElementRef, static: true }) contentRef: ElementRef;\n\n  get hasContent(): boolean {\n    return (\n      this.contentRef &&\n      (this.contentRef.nativeElement.children.length > 0 || !!this.contentRef.nativeElement.textContent.trim())\n    );\n  }\n\n  @ViewChild('actionsRef', { read: ElementRef, static: true }) actionsRef: ElementRef;\n\n  get hasActions(): boolean {\n    return (\n      this.actionsRef &&\n      (this.actionsRef.nativeElement.children.length > 0 || !!this.actionsRef.nativeElement.textContent.trim())\n    );\n  }\n\n  @ViewChild('summaryRef', { read: ElementRef, static: true }) summaryRef: ElementRef;\n\n  get hasSummary(): boolean {\n    return (\n      this.summaryRef &&\n      (this.summaryRef.nativeElement.children.length > 0 || !!this.summaryRef.nativeElement.textContent.trim())\n    );\n  }\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on body.\n   */\n  @Input() active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of body.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input() state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n}\n","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, ElementRef } from '@angular/core';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, ICanDisableRipple } from '@covalent/core/common';\nimport { _TdStepMixinBase, StepState } from '../../step.component';\n\n@Component({\n  selector: '[td-step-link],[tdStepLink]',\n  styleUrls: ['./nav-step-link.component.scss'],\n  templateUrl: './nav-step-link.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    '[class.td-step-link]': 'true',\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[class.mat-disabled]': 'disabled || null',\n    '(click)': '_handleClick($event)',\n  },\n})\nexport class TdNavStepLinkComponent extends _TdStepMixinBase implements ICanDisable, ICanDisableRipple {\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  // Number to display in step header\n  number: number;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of component depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * label?: string\n   * Label to display in step header\n   * Defaults to empty\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sublabel to display in step header\n   * Defaults to empty\n   */\n  @Input() sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles component between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._active = coerceBooleanProperty(active);\n    this._changeDetectorRef.markForCheck();\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * tabIndex?: number\n   * tabIndex for component\n   */\n  @Input() tabIndex: number;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, public elementRef: ElementRef) {\n    super();\n  }\n\n  _handleClick(click: Event): void {\n    if (this.disabled) {\n      click.preventDefault();\n      click.stopImmediatePropagation();\n    }\n  }\n}\n","import {\n  Component,\n  Optional,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  AfterContentChecked,\n  ChangeDetectorRef,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\n\nimport { Subject, merge, of } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][horizontal]',\n  styleUrls: ['./nav-steps-horizontal.component.scss'],\n  templateUrl: './nav-steps-horizontal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    'class': 'td-steps td-steps-horizontal',\n    '[class.td-step-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.td-step-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class TdNavStepsHorizontalComponent implements AfterContentChecked, AfterContentInit, OnDestroy {\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  private _widthSubject: Subject<number> = new Subject<number>();\n\n  private _scrollDistance: number = 0;\n  private _scrollDistanceChanged: boolean = false;\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls: boolean = false;\n\n  /** Whether the step list can be scrolled more towards the end. */\n  _disableScrollAfter: boolean = true;\n\n  /** Whether the step list can be scrolled more towards the beginning. */\n  _disableScrollBefore: boolean = true;\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepListContainer', { static: true }) _stepListContainer: ElementRef;\n  @ViewChild('stepList', { static: true }) _stepList: ElementRef;\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    const element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    const style: CSSStyleDeclaration = window.getComputedStyle(element);\n    const borderLeft: number = parseInt(style.borderLeft, 10);\n    const borderRight: number = parseInt(style.borderRight, 10);\n    const marginLeft: number = parseInt(style.marginLeft, 10);\n    const marginRight: number = parseInt(style.marginRight, 10);\n    const paddingLeft: number = parseInt(style.paddingLeft, 10);\n    const paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewportRuler: ViewportRuler,\n    @Optional() private _dir: Directionality,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterContentInit(): void {\n    merge(\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n      this._viewportRuler.change(150),\n      this._dir ? this._dir.change : of(undefined),\n      this._steps.changes,\n    )\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._configureSteps();\n        this.updatePagination();\n        this._changeDetectorRef.markForCheck();\n      });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentChecked(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n    if (this._scrollDistanceChanged) {\n      this._updateStepScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Listen to right and left key events to move the the viewport.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._scrollHeader('before');\n        event.preventDefault();\n        break;\n      case RIGHT_ARROW:\n        this._scrollHeader('after');\n        event.preventDefault();\n        break;\n      default:\n      // do something\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   */\n  updatePagination(): void {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateStepScrollPosition();\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the step list that will cause the list to scroll. */\n  _updateStepScrollPosition(): void {\n    const translateX: number = this._getLayoutDirection() === 'ltr' ? -this.scrollDistance : this.scrollDistance;\n    // Move step list the amount of pixels scrolled\n    this._stepList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off.\n    if (this._getLayoutDirection() === 'ltr') {\n      this._stepListContainer.nativeElement.scrollLeft = 0;\n    } else {\n      this._stepListContainer.nativeElement.scrollLeft = this._getMaxScrollDistance();\n    }\n  }\n\n  /** Sets the distance in pixels that the step header should be transformed in the X-axis. */\n  get scrollDistance(): number {\n    return this._scrollDistance;\n  }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the step list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively).\n   */\n  _scrollHeader(scrollDir: ScrollDirection): void {\n    // Move the scroll distance one-half the length of the step list's viewport.\n    this.scrollDistance += ((scrollDir === 'before' ? -1 : 1) * this._stepListContainer.nativeElement.offsetWidth) / 2;\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * step list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   */\n  _checkPaginationEnabled(): void {\n    const isEnabled: boolean = this._stepList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   */\n  _checkScrollingControls(): void {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance === 0;\n    this._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the step list container and step header container.\n   */\n  _getMaxScrollDistance(): number {\n    return this._stepList.nativeElement.scrollWidth - this._stepListContainer.nativeElement.offsetWidth || 0;\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    const stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        const separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-horizontal-line');\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ElementRef,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n@Component({\n  selector: 'nav[td-steps][vertical]',\n  styleUrls: ['./nav-steps-vertical.component.scss'],\n  templateUrl: './nav-steps-vertical.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-vertical',\n  },\n})\nexport class TdNavStepsVerticalComponent implements AfterContentInit, OnDestroy {\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepList', { static: true }) _stepList: ElementRef;\n\n  constructor(private _renderer: Renderer2, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._configureSteps();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    const stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        const separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-vertical-line-wrapper');\n        const separatorChild: any = this._renderer.createElement('div');\n        this._renderer.addClass(separatorChild, 'td-vertical-line');\n        this._renderer.appendChild(separator, separatorChild);\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\n\n// Steps\nimport { TdStepsComponent } from './steps.component';\nimport { TdStepHeaderComponent } from './step-header/step-header.component';\nimport { TdStepBodyComponent } from './step-body/step-body.component';\nimport {\n  TdStepComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n} from './step.component';\n\n// Nav Steps\nimport { TdNavStepsHorizontalComponent } from './nav/nav-steps-horizontal/nav-steps-horizontal.component';\nimport { TdNavStepsVerticalComponent } from './nav/nav-steps-vertical/nav-steps-vertical.component';\nimport { TdNavStepLinkComponent } from './nav/nav-step-link/nav-step-link.component';\n\nconst TD_STEPS: Type<any>[] = [\n  TdStepsComponent,\n  TdStepComponent,\n  TdStepHeaderComponent,\n  TdStepBodyComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n  TdNavStepsHorizontalComponent,\n  TdNavStepsVerticalComponent,\n  TdNavStepLinkComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, PortalModule, ScrollDispatchModule, CovalentCommonModule],\n  declarations: [TD_STEPS],\n  exports: [TD_STEPS],\n})\nexport class CovalentStepsModule {}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { mixinDisabled, ICanDisable } from '@covalent/core/common';\n\nexport class TdTabOptionBase {\n  constructor(public _viewContainerRef: ViewContainerRef, public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabOptionMixinBase = mixinDisabled(TdTabOptionBase);\n\n@Component({\n  selector: 'td-tab-option',\n  templateUrl: './tab-option.component.html',\n  styleUrls: ['./tab-option.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  inputs: ['disabled'],\n})\nexport class TdTabOptionComponent extends _TdTabOptionMixinBase implements ICanDisable, OnInit {\n  private _contentPortal: TemplatePortal<any>;\n  get content(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef, { static: true }) _content: TemplateRef<any>;\n\n  /**\n   * Value to which the option will be binded to.\n   */\n  @Input() value: any;\n\n  constructor(_viewContainerRef: ViewContainerRef, _changeDetectorRef: ChangeDetectorRef) {\n    super(_viewContainerRef, _changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  AfterContentInit,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  ICanDisable,\n  mixinDisabled,\n  IControlValueAccessor,\n  mixinControlValueAccessor,\n  ICanDisableRipple,\n  mixinDisableRipple,\n} from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdTabOptionComponent } from './tab-option.component';\n\nexport class TdTabSelectBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabSelectMixinBase = mixinControlValueAccessor(mixinDisabled(mixinDisableRipple(TdTabSelectBase)));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdTabSelectComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-tab-select',\n  templateUrl: './tab-select.component.html',\n  styleUrls: ['./tab-select.component.scss'],\n  /* tslint:disable-next-line */\n  inputs: ['value', 'disabled', 'disableRipple'],\n})\nexport class TdTabSelectComponent extends _TdTabSelectMixinBase\n  implements IControlValueAccessor, ICanDisable, ICanDisableRipple, OnInit, AfterContentInit, OnDestroy {\n  private _subs: Subscription[] = [];\n\n  private _values: any[] = [];\n  private _selectedIndex: number = 0;\n  private _stretchTabs: boolean = false;\n\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Gets all tab option children\n   */\n  @ContentChildren(TdTabOptionComponent) readonly _tabOptions: QueryList<TdTabOptionComponent>;\n\n  get tabOptions(): TdTabOptionComponent[] {\n    return this._tabOptions ? this._tabOptions.toArray() : undefined;\n  }\n\n  /**\n   * Makes the tabs stretch to fit the parent container.\n   */\n  @Input('stretchTabs')\n  set stretchTabs(stretchTabs: boolean) {\n    this._stretchTabs = coerceBooleanProperty(stretchTabs);\n  }\n  get stretchTabs(): boolean {\n    return this._stretchTabs;\n  }\n\n  /**\n   * Color of the tab group.\n   */\n  @Input() color: ThemePalette;\n\n  /**\n   * Background color of the tab group.\n   */\n  @Input() backgroundColor: ThemePalette;\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // subscribe to check if value changes and update the selectedIndex internally.\n    this._subs.push(\n      this.valueChanges.subscribe((value: any) => {\n        this._setValue(value);\n      }),\n    );\n  }\n\n  ngAfterContentInit(): void {\n    // subscribe to listen to any tab changes.\n    this._refreshValues();\n    this._subs.push(\n      this._tabOptions.changes.subscribe(() => {\n        this._refreshValues();\n      }),\n    );\n    // initialize value\n    Promise.resolve().then(() => {\n      this._setValue(this.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs && this._subs.length) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * Method executed when user selects a different tab\n   * This updates the new selectedIndex and infers what value should be mapped to.\n   */\n  selectedIndexChange(selectedIndex: number): void {\n    this._selectedIndex = selectedIndex;\n    const value: any = this._values[selectedIndex];\n    this.value = value;\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  /**\n   * Refresh the values array whenever the number of tabs gets updated\n   */\n  private _refreshValues(): void {\n    this._values = this.tabOptions.map((tabOption: TdTabOptionComponent) => {\n      return tabOption.value;\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Try to set value depending if its part of our options\n   * else set the value of the first tab.\n   */\n  private _setValue(value: any): void {\n    const index: number = this._values.indexOf(value);\n    if (index > -1) {\n      this._selectedIndex = index;\n    } else {\n      this.value = this._values.length ? this._values[0] : undefined;\n      this._selectedIndex = 0;\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TdTabSelectComponent } from './tab-select.component';\nimport { TdTabOptionComponent } from './tab-option.component';\n\n@NgModule({\n  declarations: [TdTabSelectComponent, TdTabOptionComponent], // directives, components, and pipes owned by this NgModule\n  imports: [\n    /** Angular Modules */\n    CommonModule,\n    FormsModule,\n    /** Material Modules */\n    PortalModule,\n    MatTabsModule,\n  ], // modules needed to run this module\n  exports: [TdTabSelectComponent, TdTabOptionComponent],\n})\nexport class CovalentTabSelectModule {}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { tdCollapseAnimation, tdRotateAnimation } from '@covalent/core/common';\n\nexport interface ITdNavNode {\n  label: string;\n  show?: boolean;\n}\n\nexport interface ITdNavHeader extends ITdNavNode {\n  children: ITdLink[];\n}\n\nexport interface ITdNavExpansion extends ITdNavHeader {\n  collapsable?: boolean;\n}\n\nexport interface ITdLink extends ITdNavNode {\n  link: { href: string; openInNewTab?: boolean } | { routerLink: string | string[]; openInNewTab?: boolean };\n  icon: { fontSet?: string; name: string };\n}\n\nlet nextUniqueId: number = 0;\n\n@Component({\n  selector: 'td-nav-links',\n  templateUrl: './nav-links.component.html',\n  styleUrls: ['./nav-links.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [tdCollapseAnimation, tdRotateAnimation],\n})\nexport class TdNavLinksComponent {\n  private _uniqueId: string = `td-nav-links-${++nextUniqueId}`;\n\n  private _collapsedSet: Set<ITdNavExpansion> = new Set<ITdNavExpansion>();\n\n  @Input() id: string = this._uniqueId;\n\n  /**\n   * Links to be rendered by component.\n   */\n  /* tslint:disable-next-line */\n  @Input() links: Array<ITdNavExpansion | ITdNavHeader | ITdLink>;\n\n  /**\n   * Event trigger after a navigation click\n   */\n  @Output() afterNavigation: EventEmitter<ITdLink> = new EventEmitter<ITdLink>();\n\n  _linkClicked(link: ITdLink): void {\n    this.afterNavigation.emit(link);\n  }\n\n  _href(link: ITdLink): string {\n    return link.link && (<{ href?: string }>link.link).href;\n  }\n\n  _routerLink(link: ITdLink): string | string[] {\n    return link.link && (<{ routerLink?: string | string[] }>link.link).routerLink;\n  }\n\n  /**\n   * @param link\n   * Toggles expand/collapse state of expansion link.\n   * Only applied when `collapsable` is true\n   */\n  _toggle(link: ITdNavExpansion): void {\n    if (this._isCollapsed(link)) {\n      this._collapsedSet.delete(link);\n    } else {\n      this._collapsedSet.add(link);\n    }\n  }\n\n  /**\n   * @param link\n   * Returns true if the state of provided expansion link is collapsed.\n   */\n  _isCollapsed(link: ITdNavExpansion): boolean {\n    return this._collapsedSet.has(link);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\nimport { CovalentExpansionPanelModule } from '@covalent/core/expansion-panel';\n\nimport { TdNavLinksComponent } from './nav-links.component';\n\n@NgModule({\n  declarations: [TdNavLinksComponent], // directives, components, and pipes owned by this NgModule\n  exports: [TdNavLinksComponent],\n  imports: [\n    CommonModule,\n    CovalentCommonModule,\n    CovalentExpansionPanelModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatListModule,\n    MatIconModule,\n    MatDividerModule,\n    RouterModule,\n  ], // modules needed to run this module\n})\nexport class CovalentNavLinksModule {}\n","/**\n * Assign a text value to the system clipboard. Note: Due to browser\n * security restrictions, the copy will only succeed if this method\n * is invoked as a result of a user action (eg. user button click).\n *\n * @param value text value to be assigned to clipboard.\n * @returns boolean indicating success/failure of copy operation.\n */\nexport function copyToClipboard(value: string): boolean {\n  // Create a temporary textarea element and append to DOM\n  const fakeTextArea: HTMLTextAreaElement = document.createElement('textarea');\n  document.body.appendChild(fakeTextArea);\n\n  // Assign value to be copied to clipboard\n  fakeTextArea.value = value;\n  fakeTextArea.select();\n\n  // Copy to clipboard\n  const success: boolean = document.execCommand('copy');\n\n  // Remove temporary textarea\n  document.body.removeChild(fakeTextArea);\n\n  // Return boolean indicating if exec command succeeded\n  return success;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisableRipple {\n  disableRipple: boolean;\n  onDisableRippleChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disableRipple(): boolean {\n      return this._disableRipple;\n    }\n    set disableRipple(value: boolean) {\n      const newValue: boolean = coerceBooleanProperty(value);\n      if (this._disableRipple !== newValue) {\n        this._disableRipple = newValue;\n        this.onDisableRippleChange(this._disableRipple);\n      }\n    }\n\n    onDisableRippleChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisable {\n  disabled: boolean;\n  onDisabledChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disabled(): boolean {\n      return this._disabled;\n    }\n    set disabled(value: boolean) {\n      const newValue: boolean = coerceBooleanProperty(value);\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.onDisabledChange(this._disabled);\n      }\n    }\n\n    onDisabledChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","/**\n * Read file as UTF-8 text. Return string contents on read completion.\n *\n * @param file filename or File object\n * @returns promise that resolves to file content string\n */\nexport function readFile(file: File): Promise<string> {\n  return new Promise<string>((resolve: (value: string) => void) => {\n    const reader: FileReader = new FileReader();\n    reader.readAsText(file, 'UTF-8');\n    reader.onload = () => {\n      resolve(<string>reader.result);\n    };\n  });\n}\n"]}