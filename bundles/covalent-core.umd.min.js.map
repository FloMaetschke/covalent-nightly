{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@covalent/core/paging/paging-bar.component.ts","ng://@covalent/core/paging/paging.module.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-row.directive.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-container.component.ts","ng://@covalent/core/virtual-scroll/virtual-scroll.module.ts","ng://@covalent/core/notifications/notification-count.component.ts","ng://@covalent/core/notifications/notifications.module.ts","ng://@covalent/core/common/forms/auto-trim/auto-trim.directive.ts","ng://@covalent/core/common/directives/fullscreen/fullscreen.directive.ts","ng://@covalent/core/common/pipes/time-ago/time-ago.pipe.ts","ng://@covalent/core/common/pipes/time-difference/time-difference.pipe.ts","ng://@covalent/core/common/pipes/time-until/time-until.pipe.ts","ng://@covalent/core/common/pipes/bytes/bytes.pipe.ts","ng://@covalent/core/common/pipes/decimal-bytes/decimal-bytes.pipe.ts","ng://@covalent/core/common/pipes/digits/digits.pipe.ts","ng://@covalent/core/common/pipes/truncate/truncate.pipe.ts","ng://@covalent/core/common/common.module.ts","ng://@covalent/core/common/animations/rotate/rotate.animation.ts","ng://@covalent/core/common/animations/collapse/collapse.animation.ts","ng://@covalent/core/common/animations/fade/fadeInOut.animation.ts","ng://@covalent/core/common/animations/bounce/bounce.animation.ts","ng://@covalent/core/common/animations/flash/flash.animation.ts","ng://@covalent/core/common/animations/headshake/headshake.animation.ts","ng://@covalent/core/common/animations/jello/jello.animation.ts","ng://@covalent/core/common/animations/pulse/pulse.animation.ts","ng://@covalent/core/common/behaviors/control-value-accesor.mixin.ts","ng://@covalent/core/common/forms/validators/validators.ts","ng://@covalent/core/common/functions/convert.ts","ng://@covalent/core/common/functions/download.ts","ng://@covalent/core/message/message.component.ts","ng://@covalent/core/message/message.module.ts","ng://@covalent/core/chips/chips.component.ts","ng://@covalent/core/chips/chips.module.ts","ng://@covalent/core/data-table/data-table-row/data-table-row.component.ts","ng://@covalent/core/data-table/directives/data-table-template.directive.ts","ng://@covalent/core/data-table/data-table.component.ts","ng://@covalent/core/data-table/data-table-column/data-table-column.component.ts","ng://@covalent/core/data-table/data-table-cell/data-table-cell.component.ts","ng://@covalent/core/data-table/data-table-table/data-table-table.component.ts","ng://@covalent/core/data-table/data-table.module.ts","ng://@covalent/core/data-table/services/data-table.service.ts","ng://@covalent/core/dialogs/dialog.component.ts","ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts","ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts","ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts","ng://@covalent/core/dialogs/dialogs.module.ts","ng://@covalent/core/dialogs/services/dialog.service.ts","ng://@covalent/core/expansion-panel/expansion-panel.component.ts","ng://@covalent/core/expansion-panel/expansion-panel-group.component.ts","ng://@covalent/core/expansion-panel/expansion-panel.module.ts","ng://@covalent/core/file/directives/file-select.directive.ts","ng://@covalent/core/file/directives/file-drop.directive.ts","ng://@covalent/core/file/file-input/file-input.component.ts","ng://@covalent/core/file/file-upload/file-upload.component.ts","ng://@covalent/core/file/file.module.ts","ng://@covalent/core/file/services/file.service.ts","ng://@covalent/core/json-formatter/json-formatter.component.ts","ng://@covalent/core/json-formatter/json-formatter.module.ts","ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts","ng://@covalent/core/loading/loading.component.ts","ng://@covalent/core/loading/services/loading.factory.ts","ng://@covalent/core/loading/services/loading.service.ts","ng://@covalent/core/loading/directives/loading.directive.ts","ng://@covalent/core/loading/loading.module.ts","ng://@covalent/core/media/services/media.service.ts","ng://@covalent/core/media/directives/media-toggle.directive.ts","ng://@covalent/core/media/media.module.ts","ng://@covalent/core/menu/menu.component.ts","ng://@covalent/core/menu/menu.module.ts","ng://@covalent/core/search/search-input/search-input.component.ts","ng://@covalent/core/search/search-box/search-box.component.ts","ng://@covalent/core/search/search.module.ts","ng://@covalent/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.module.ts","ng://@covalent/core/steps/step.component.ts","ng://@covalent/core/steps/steps.component.ts","ng://@covalent/core/steps/step-header/step-header.component.ts","ng://@covalent/core/steps/step-body/step-body.component.ts","ng://@covalent/core/steps/nav/nav-step-link/nav-step-link.component.ts","ng://@covalent/core/steps/nav/nav-steps-horizontal/nav-steps-horizontal.component.ts","ng://@covalent/core/steps/nav/nav-steps-vertical/nav-steps-vertical.component.ts","ng://@covalent/core/steps/steps.module.ts","ng://@covalent/core/tab-select/tab-option.component.ts","ng://@covalent/core/tab-select/tab-select.component.ts","ng://@covalent/core/tab-select/tab-select.module.ts","ng://@covalent/core/nav-links/nav-links.component.ts","ng://@covalent/core/nav-links/nav-links.module.ts","ng://@covalent/core/common/functions/clipboard.ts","ng://@covalent/core/common/behaviors/disable-ripple.mixin.ts","ng://@covalent/core/common/behaviors/disabled.mixin.ts","ng://@covalent/core/common/functions/file.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","TdPagingBarComponent","_dir","_changeDetectorRef","_pageSize","_total","_page","_fromRow","_toRow","_initialized","_pageLinks","_pageLinkCount","_hitEnd","_hitStart","firstLast","initialPage","change","EventEmitter","defineProperty","pageLinkCount","coerceNumberProperty","_calculatePageLinks","markForCheck","pageSize","_handleOnChange","total","_calculateRows","Math","ceil","dir","ngOnInit","navigateToPage","page","maxPage","floor","firstPage","prevPage","nextPage","lastPage","isMinPage","isMaxPage","top","actualPageLinkCount","middlePageLinks","x","event","fromRow","toRow","emit","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","Dir","decorators","type","Optional","ChangeDetectorRef","Input","Output","CovalentPagingModule","NgModule","imports","CommonModule","MatIconModule","MatButtonModule","declarations","exports","TdVirtualScrollRowDirective","templateRef","viewContainerRef","_super","Directive","TemplateRef","ViewContainerRef","TemplatePortalDirective","TdVirtualScrollContainerComponent","_elementRef","_domSanitizer","_renderer","_subs","_bottom","Subject","_totalHeight","_hostHeight","_scrollVerticalOffset","bottom","trackBy","index","item","_data","data","_calculateVirtualRows","_virtualData","_rows","toArray","nativeElement","getBoundingClientRect","height","_offsetTransform","ngAfterViewInit","_this","changes","subscribe","pipe","debounceTime","lastRow","lastIndex","ngAfterViewChecked","newHostHeight","ngOnDestroy","forEach","sub","unsubscribe","handleScroll","element","verticalScroll","scrollTop","rowHeight","refresh","scrollTo","row","scrollToStart","scrollToEnd","totalHeight","TD_VIRTUAL_OFFSET","isFinite","offset","bypassSecurityTrustStyle","slice","Promise","resolve","then","ElementRef","DomSanitizer","Renderer2","ViewChildren","ContentChild","static","HostListener","TD_VIRTUAL_SCROLL","CovalentVirtualScrollModule","Top","Bottom","Center","Before","After","DEFAULT_NOTIFICATION_LIMIT","TdNotificationCountComponent","_notifications","_limit","color","_positionX","positionX","_positionY","positionY","notifications","limit","show","_hasContent","toString","isNaN","ngAfterContentInit","TdNotificationCountPositionX","TdNotificationCountPositionY","content","contentElement","children","textContent","trim","ViewChild","HostBinding","TD_NOTIFICATIONS","CovalentNotificationsModule","TdAutoTrimDirective","_model","onBlur","update","NgModel","Host","TdFullscreenDirective","_document","_el","fullScreenIsActive","fsChangeHandler","srcElement","_getFullScreenElement","toggleFullScreen","exitFullScreen","enterFullScreen","enterFullScreenMap","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","_b","keys","_c","handler","exitFullScreenMap","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","_d","tdFullScreenElementMap","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","props","exportAs","Inject","DOCUMENT","TdTimeAgoPipe","transform","time","reference","Date","ref","getTime","startTime","now","diff","Pipe","name","TdTimeDifferencePipe","start","end","endTime","undefined","days","hours","minutes","seconds","daysFormatted","substring","TdTimeUntilPipe","TdBytesPipe","bytes","precision","parseInt","log","parseFloat","pow","toFixed","TdDecimalBytesPipe","TdDigitsPipe","_locale","_decimalPipe","DecimalPipe","digits","size","LOCALE_ID","TdTruncatePipe","text","truncated","substr","lastIndexOf","TD_DIRECTIVES","TD_VALIDATORS","TD_PIPES","CovalentCommonModule","FormsModule","tdRotateAnimation","trigger","state","style","params","degressStart","degreesEnd","transition","group","query","animateChild","optional","animate","duration","delay","ease","tdCollapseAnimation","overflow","AUTO_STYLE","tdFadeInOutAnimation","opacity","visibility","easeOnIn","easeOnOut","tdBounceAnimation","keyframes","animationTimingFunction","tdFlashAnimation","tdHeadshakeAnimation","tdJelloAnimation","tdPulseAnimation","noop","CovalentValidators","min","minValue","c","Validators","required","v","actualValue","max","maxValue","numberRequired","Number","convertObjectsToCSV","objects","keySeparator","lineSeparator","outputString","key","line","headers","join","formatJSON","json","indent","JSON","stringify","downloadFile","fileName","contents","mimeType","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","setAttribute","href","body","appendChild","click","revokeObjectURL","removeChild","TdMessageContainerDirective","viewContainer","TdMessageComponent","_opened","_hidden","_animating","icon","addClass","_color","removeClass","opened","open","close","animationDoneListener","_detach","_attach","_startAnimationState","toggle","_childElement","createEmbeddedView","_template","clear","animations","TD_MESSAGE","CovalentMessageModule","TdChipDirective","TdAutocompleteOptionDirective","_TdChipsMixinBase","mixinControlValueAccessor","mixinDisabled","TdChipsBase","TdChipsComponent","_outsideClickSubs","Subscription","EMPTY","_inputValueChangesSubs","_isMousedown","_length","_stacked","_requireMatch","_inputPosition","_chipAddition","_chipRemoval","_focused","_required","_tabIndex","_touchendDebounce","_internalClick","_internalActivateOption","inputControl","FormControl","debounce","add","remove","inputChange","chipFocus","chipBlur","compareWith","o1","o2","_items","items","_setFirstOptionActive","stacked","coerceBooleanProperty","inputPosition","requireMatch","chipAddition","_toggleInput","disabled","chipRemoval","canAddChip","placeholder","focusListener","focus","preventDefault","mousedownListener","timer","toPromise","clickListener","clickTarget","className","indexOf","stopPropagation","keydownListener","keyCode","TAB","removeFocusedState","ESCAPE","_inputChild","focused","_nativeInput","blur","_closeAutocomplete","valueChanges","_watchOutsideClick","ngDoCheck","onChange","_setInternalClick","onDisabledChange","_handleAddChip","selectedOptions","_options","filter","option","active","setInactiveStyles","_autocompleteTrigger","activeOption","addChip","setFocusedState","_openAutocomplete","setValue","findIndex","removeChip","removedValues","splice","_totalChips","_focusChip","_handleChipBlur","_handleChipFocus","_handleFocus","_focusFirstChip","_inputKeydown","UP_ARROW","LEFT_ARROW","DELETE","BACKSPACE","_focusLastChip","RIGHT_ARROW","_chipKeydown","canRemoveChip","DOWN_ARROW","_removeInputDisplay","panelOpen","openPanel","closePanel","_chipsChildren","enable","disable","setActiveStyles","merge","fromEvent","setTimeout","contains","onTouched","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","MatInput","MatAutocompleteTrigger","MatChip","MatOption","CovalentChipsModule","ReactiveFormsModule","MatInputModule","MatChipsModule","MatAutocompleteModule","TdDataTableColumnRowComponent","TdDataTableRowComponent","_selected","selected","TdDataTableTemplateDirective","Ascending","Descending","TdDataTableBase","_TdDataTableMixinBase","TdDataTableComponent","_hostWidth","_resizableColumns","_columnClientX","_onColumnResize","_widths","_onResize","_scrollHorizontalOffset","_onHorizontalScroll","_onVerticalScroll","_rowHeightCache","_selectable","_clickable","_multiple","_allSelected","_indeterminate","_sortable","_sortOrder","TdDataTableSortingOrder","_shiftPreviouslyPressed","_lastSelectedIndex","_firstSelectedIndex","_firstCheckboxValue","_templateMap","Map","sortChange","rowSelect","rowClick","selectAll","model","_resizingColumn","selectable","_scrollableDiv","_columns","hasData","k","find","label","cols","resizableColumns","clickable","multiple","sortable","columnName","column","columns","Error","_sortBy","order","sortOrder","toUpperCase","_resizeSubs","asObservable","_calculateWidths","_columnResizeSubs","clientX","_horizontalScrollSubs","horizontalScroll","_verticalScrollSubs","_valueChangesSubs","_templates","set","tdDataTableTemplate","ngAfterContentChecked","newHostWidth_1","width","_rowsChangedSubs","scrollLeft","getColumnWidth","getCellValue","nested","_getNestedValue","getTemplateRef","get","clearModel","_calculateCheckboxState","_selectAll","checked","toggledRows","isRowSelected","modelRow","val","rows","select","currentSelected","blockEvent","mouseEvent","shiftKey","firstIndex","_doSelection","rowSelected","disableTextSelection","onselectstart","enableTextSelection","handleRowClick","currentTarget","getAttribute","tagName","toLowerCase","handleSort","_rowKeyup","ENTER","SPACE","_handleStartColumnDrag","_handleColumnDrag","xPosition","proposedManualWidth","_colElements","projectedWidth","_handleEndColumnDrag","splitName","split","rowIndex","wasSelected","col","_adjustColumnWidth","_calculateWidth","_adjustColumnWidhts","fixedTotalWidth","flexibleWidths","hidden","recalculateHostWidth","hostWidth","newValue_1","adjustedNumber_1","colWidth","newFlexibleWidths","skipMinWidthProjection","widthOpts","renderedColumns","scrolledRows","rowHeightSum_1","hostHeight","ContentChildren","descendants","TdDataTableColumnComponent","numeric","_columnContent","handleClick","isAscending","isDescending","read","TdDataTableCellComponent","_align","align","TdDataTableTableComponent","TD_DATA_TABLE","CovalentDataTableModule","MatCheckboxModule","MatTooltipModule","MatPseudoCheckboxModule","TdDataTableService","filterData","searchTerm","ignoreCase","excludedColumns","preItemValue","sortData","sortBy","from","sort","compA","compB","direction","pageData","Injectable","providedIn","TdDialogTitleDirective","TdDialogContentDirective","TdDialogActionsDirective","TdDialogComponent","dialogTitle","dialogContent","dialogActions","TdAlertDialogComponent","_dialogRef","closeButton","MatDialogRef","TdConfirmDialogComponent","cancelButton","acceptButton","cancel","accept","TdPromptDialogComponent","_input","handleInputFocus","TD_DIALOGS","TD_DIALOGS_ENTRY_COMPONENTS","CovalentDialogsModule","MatDialogModule","entryComponents","TdDialogService","_dialogService","_dragDrop","rendererFactory","_renderer2","createRenderer","component","config","closeAll","openAlert","dialogConfig","_createConfig","dialogRef","alertDialogComponent","componentInstance","title","message","openConfirm","confirmDialogComponent","openPrompt","promptDialogComponent","openDraggable","_a","dragHandleSelectors","draggableClass","afterOpened","dialogElement","getElementById","id","draggableElement","createDrag","childComponent","firstElementChild","dragHandles","reduce","acc","curr","querySelectorAll","withHandles","rootElement","closest","withRootElement","boundaryElement","withBoundaryElement","MatDialogConfig","assign","MatDialog","DragDrop","RendererFactory2","TdExpansionPanelHeaderDirective","TdExpansionPanelLabelDirective","TdExpansionPanelSublabelDirective","TdExpansionPanelSummaryComponent","_TdExpansionPanelMixinBase","mixinDisableRipple","TdExpansionPanelBase","TdExpansionPanelComponent","_expand","expanded","collapsed","expand","_setExpand","clickEvent","_onCollapsed","newExpand","_onExpanded","TdExpansionPanelGroupComponent","_multi","_lastOpenedPanels","_destroyed","_stopWatchingPanels","_closeAllExcept","openedPanels","expansionPanels","expansionPanel","numOpenedPanels","_attachListeners","takeUntil","openAll","indexOfPanel","panel","TD_EXPANSION_PANEL","CovalentExpansionPanelModule","MatRippleModule","PortalModule","TdFileSelectDirective","fileSelect","target","HTMLInputElement","files","_TdFileDropMixinBase","TdFileDropBase","TdFileDropDirective","_element","fileDrop","onDrop","dataTransfer","_stopEvent","onDragOver","transfer","dropEffect","_typeCheck","types","mozItemCount","onDragEnter","onDragLeave","TdFileInputLabelDirective","_TdFileInputMixinBase","TdFileInputBase","TdFileInputComponent","_inputElement","handleSelect","writeValue","setProperty","inputElement","setDisabledState","isDisabled","_TdFileUploadMixinBase","TdFileUploadBase","TdFileUploadComponent","defaultColor","activeColor","cancelColor","upload","uploadPressed","_cancel","fileInput","TD_FILE","CovalentFileModule","TdFileService","_http","_progressSubject","_progressObservable","send","method","req","HttpRequest","reportProgress","HttpHeaders","HttpParams","fromObject","request","tap","handleEvent","options","Observable","subscriber","xhr","XMLHttpRequest","formData","FormData","file","append","onprogress","progress","lengthComputable","round","loaded","onreadystatechange","readyState","status","response","complete","setRequestHeader","HttpEventType","Sent","UploadProgress","Response","HttpClient","TdJsonFormatterComponent","_open","_levelsOpen","levelsOpen","isInteger","elipsis","_key","KEY_MAX_LENGTH","parseChildren","_children","isObject","getType","isArray","hasChildren","getValue","replace","getObjectName","object","date","results","exec","getPreview","previewData","startChar","endChar","PREVIEW_LIMIT","map","obj","previewString","ellipsis","PREVIEW_STRING_MAX_LENGTH","CovalentJsonFormatterModule","TdLayoutComponent","mode","sidenavWidth","containerAutosize","sidenav","MatSidenav","LayoutToggleBase","_TdLayoutToggleMixinBase","LayoutToggle","_layout","_hideWhenOpened","_noLayoutMessage","hideWhenOpened","_toggleVisibility","_toggleSubs","_animationStarted","onClick","setStyle","console","warn","TdLayoutToggleDirective","layout","renderer","elementRef","tdLayoutToggle","TdLayoutCloseDirective","tdLayoutClose","TdLayoutOpenDirective","tdLayoutOpen","TdLayoutNavComponent","_router","navigationRoute","handleNavigationClick","routerEnabled","navigateByUrl","Router","TdLayoutNavListComponent","TdLayoutNavListToggleDirective","tdLayoutNavListToggle","TdLayoutNavListCloseDirective","tdLayoutNavListClose","TdLayoutNavListOpenDirective","tdLayoutNavListOpen","TdLayoutCardOverComponent","cardWidth","TdLayoutManageListComponent","TdLayoutManageListToggleDirective","tdLayoutManageListToggle","TdLayoutManageListCloseDirective","tdLayoutManageListClose","TdLayoutManageListOpenDirective","tdLayoutManageListOpen","TdLayoutFooterComponent","TdNavigationDrawerMenuDirective","TdNavigationDrawerToolbarDirective","TdNavigationDrawerComponent","_sanitize","_menuToggled","_drawerMenu","_toolbar","_backgroundImage","backgroundUrl","sanitizedUrl","sanitize","SecurityContext","RESOURCE_URL","STYLE","_closeSubscription","openedChange","toggleMenu","isMenuAvailable","TD_LAYOUTS","CovalentLayoutModule","ScrollingModule","MatSidenavModule","MatToolbarModule","MatCardModule","MatDividerModule","Circular","Linear","Determinate","Indeterminate","Overlay","Replace","FullScreen","None","TD_CIRCLE_DIAMETER","TdLoadingComponent","_animationIn","_animationOut","_mode","LoadingMode","_defaultMode","_value","_circleDiameter","animation","LoadingStyle","LoadingType","isOverlay","_setCircleDiameter","getHeight","isFullScreen","getCircleDiameter","getCircleStrokeWidth","strokeWidth","abs","isCircular","isLinear","animationComplete","fromState","outAnimationCompleted","inAnimationCompleted","startInAnimation","startOutAnimation","diameter","TdLoadingFactory","_componentFactoryResolver","_overlay","_injector","createFullScreenComponent","overlayRef","loadingRef","_initializeContext","loading","observable","distinctUntilChanged","registered","_createOverlay","componentRef","attach","ComponentPortal","_mapOptions","instance","changeDetectorRef","detectChanges","subs_1","destroy","detach","dispose","createOverlayComponent","_createComponent","TemplatePortal","insert","hostView","createReplaceComponent","context","nextElementSibling","scrollHeight","contentRef","subs_2","OverlayConfig","hasBackdrop","positionStrategy","position","global","centerHorizontally","centerVertically","compRef","resolveComponentFactory","subject","times","ComponentFactoryResolver","Injector","LOADING_FACTORY_PROVIDER_FACTORY","parent","componentFactoryResolver","overlay","injector","LOADING_FACTORY_PROVIDER","deps","SkipSelf","useFactory","TdLoadingConfig","TdLoadingDirectiveConfig","strategy","LoadingStrategy","TdLoadingService","_loadingFactory","_context","_timeouts","createComponent","directiveConfig","fullscreenConfig","removeComponent","register","registers","_clearTimeout","resolves","resolveAll","clearTimeout","LOADING_PROVIDER_FACTORY","loadingFactory","LOADING_PROVIDER","$implicit","tdLoading","TD_LOADING_NEXT_ID","TdLoadingDirective","_viewContainerRef","_templateRef","_loadingService","TdLoadingContext","_name","until","_type","_strategy","_registerComponent","_loadingRef","TD_LOADING","TD_LOADING_ENTRY_COMPONENTS","CovalentLoadingModule","MatProgressBarModule","MatProgressSpinnerModule","OverlayModule","TdMediaService","_ngZone","_resizing","_queryMap","_querySources","_queryObservables","_globalSubscription","runOutsideAngular","deregisterQuery","run","matchMedia","matches","registerQuery","BehaviorSubject","broadcast","this_1","_matchMediaTrigger","NgZone","TdMediaToggleDirective","_mediaService","_matches","_attributes","_styles","_classes","_query","attributes","classes","styles","_mediaChange","_subscription","_changeAttributes","_changeClasses","_changeStyles","attr","removeAttribute","removeStyle","TD_MEDIA","CovalentMediaModule","TdMenuComponent","TD_MENU","CovalentMenuModule","MatMenuModule","_TdSearchInputMixinBase","TdSearchInputBase","TdSearchInputComponent","showUnderline","clearIcon","searchDebounce","search","ngControl","skip","_searchTermChanged","handleBlur","handleSearch","clearSearch","display","_TdSearchBoxMixinBase","TdSearchBoxBase","TdSearchBoxComponent","_searchVisible","backIcon","searchIcon","alwaysVisible","searchClicked","handleClear","_searchInput","toggleVisibility","handleSearchDebounce","margin","CovalentSearchModule","TdBreadcrumbComponent","_displayCrumb","_width","separatorIcon","_displayIcon","shouldDisplay","_handleIconClick","host","class","TdBreadcrumbsComponent","_resizeSubscription","_widthSubject","hiddenBreadcrumbs","_calculateVisibility","nativeElementWidth","setCrumbIcons","getComputedStyle","borderLeft","borderRight","marginLeft","marginRight","paddingLeft","paddingRight","_breadcrumbs","breadcrumbArray","breadcrumb","crumbsArray","crumbWidthSum","hiddenCrumbs","displayCrumb","CovalentBreadcrumbsModule","Required","Complete","TdStepLabelDirective","TdStepActionsDirective","TdStepSummaryDirective","_TdStepMixinBase","TdStepBase","TdStepComponent","_active","_state","StepState","activated","deactivated","_contentPortal","_setActive","_content","isComplete","_onDeactivated","newActive","_onActivated","Vertical","Horizontal","TdStepsComponent","StepMode","stepChange","steps","_steps","_registerSteps","_deregisterSteps","isHorizontal","isVertical","areStepsActive","step","_onStepSelection","prevStep","event_1","newStep","_deactivateAllBut","activeStep","_subcriptions","subscription","subs","_TdStepHeaderMixinBase","TdStepHeaderBase","TdStepHeaderComponent","apply","isRequired","TdStepBodyComponent","actionsRef","summaryRef","TdNavStepLinkComponent","_handleClick","stopImmediatePropagation","[class.td-step-link]","[attr.tabindex]","[attr.disabled]","[class.mat-disabled]","(click)","TdNavStepsHorizontalComponent","_viewportRuler","_separators","_scrollDistance","_scrollDistanceChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","of","_configureSteps","updatePagination","_updateStepScrollPosition","_handleKeydown","_scrollHeader","_checkPaginationEnabled","_checkScrollingControls","_getLayoutDirection","translateX","scrollDistance","_stepList","_stepListContainer","_getMaxScrollDistance","scrollDir","offsetWidth","isEnabled","scrollWidth","separator","stepsArray","insertBefore","number","[class.td-step-header-pagination-controls-enabled]","[class.td-step-header-rtl]","ViewportRuler","Directionality","TdNavStepsVerticalComponent","separatorChild","TD_STEPS","CovalentStepsModule","_TdTabOptionMixinBase","TdTabOptionBase","TdTabOptionComponent","_TdTabSelectMixinBase","TdTabSelectBase","TdTabSelectComponent","_values","_selectedIndex","_stretchTabs","valueChange","_tabOptions","stretchTabs","_setValue","_refreshValues","selectedIndexChange","selectedIndex","tabOptions","tabOption","CovalentTabSelectModule","MatTabsModule","nextUniqueId","TdNavLinksComponent","_uniqueId","_collapsedSet","Set","afterNavigation","_linkClicked","link","_href","_routerLink","routerLink","_toggle","_isCollapsed","delete","has","CovalentNavLinksModule","MatListModule","RouterModule","csv","csvArray","newObjects","newObject","values","j","fakeTextArea","success","execCommand","fileBaseName","format","parse","base","initialValue","class_1","_i","_","_subjectValueChanges","registerOnChange","fn","registerOnTouched","_disableRipple","newValue","onDisableRippleChange","_disabled","reader","FileReader","readAsText","onload"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  Optional,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Dir } from '@angular/cdk/bidi';\n\nexport interface IPageChangeEvent {\n  page: number;\n  maxPage: number;\n  pageSize: number;\n  total: number;\n  fromRow: number;\n  toRow: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-paging-bar',\n  templateUrl: './paging-bar.component.html',\n  styleUrls: ['./paging-bar.component.scss'],\n})\nexport class TdPagingBarComponent implements OnInit {\n  private _pageSize: number = 50;\n  private _total: number = 0;\n  private _page: number = 1;\n  private _fromRow: number = 1;\n  private _toRow: number = 1;\n  private _initialized: boolean = false;\n  private _pageLinks: number[] = [];\n  private _pageLinkCount: number = 0;\n  // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n  private _hitEnd: boolean = false;\n  // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n  private _hitStart: boolean = false;\n\n  /**\n   * firstLast?: boolean\n   * Shows or hides the first and last page buttons of the paging bar. Defaults to 'false'\n   */\n  @Input() firstLast: boolean = true;\n\n  /**\n   * initialPage?: number\n   * Sets starting page for the paging bar. Defaults to '1'\n   */\n  @Input() initialPage: number = 1;\n\n  /**\n   * pageLinkCount?: number\n   * Amount of page navigation links for the paging bar. Defaults to '0'\n   */\n  @Input('pageLinkCount')\n  set pageLinkCount(pageLinkCount: number) {\n    this._pageLinkCount = coerceNumberProperty(pageLinkCount);\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageLinkCount(): number {\n    return this._pageLinkCount;\n  }\n\n  /**\n   * pageSize?: number\n   * Selected page size for the pagination. Defaults 50.\n   */\n  @Input('pageSize')\n  set pageSize(pageSize: number) {\n    this._pageSize = coerceNumberProperty(pageSize);\n    this._page = 1;\n    if (this._initialized) {\n      this._handleOnChange();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  /**\n   * total: number\n   * Total rows for the pagination.\n   */\n  @Input('total')\n  set total(total: number) {\n    this._total = coerceNumberProperty(total);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get total(): number {\n    return this._total;\n  }\n\n  /**\n   * pageLinks: number[]\n   * Returns the pageLinks in an array\n   */\n  get pageLinks(): number[] {\n    return this._pageLinks;\n  }\n\n  /**\n   * range: string\n   * Returns the range of the rows.\n   */\n  get range(): string {\n    return `${!this._toRow ? 0 : this._fromRow}-${this._toRow}`;\n  }\n\n  /**\n   * page: number\n   * Returns the current page.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * page: number\n   * Returns the max page for the current pageSize and total.\n   */\n  get maxPage(): number {\n    return Math.ceil(this._total / this._pageSize);\n  }\n\n  /**\n   * change?: function\n   * Method to be executed when page size changes or any button is clicked in the paging bar.\n   * Emits an [IPageChangeEvent] implemented object.\n   */\n  @Output() change: EventEmitter<IPageChangeEvent> = new EventEmitter<IPageChangeEvent>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._page = coerceNumberProperty(this.initialPage);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._initialized = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * navigateToPage?: function\n   * Navigates to a specific valid page. Returns 'true' if page is valid, else 'false'.\n   */\n  navigateToPage(page: number): boolean {\n    if (page === 1 || (page >= 1 && page <= this.maxPage)) {\n      this._page = coerceNumberProperty(Math.floor(page));\n      this._handleOnChange();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * firstPage?: function\n   * Navigates to the first page. Returns 'true' if page is valid, else 'false'.\n   */\n  firstPage(): boolean {\n    return this.navigateToPage(1);\n  }\n\n  /**\n   * prevPage?: function\n   * Navigates to the previous page. Returns 'true' if page is valid, else 'false'.\n   */\n  prevPage(): boolean {\n    return this.navigateToPage(this._page - 1);\n  }\n\n  /**\n   * nextPage?: function\n   * Navigates to the next page. Returns 'true' if page is valid, else 'false'.\n   */\n  nextPage(): boolean {\n    return this.navigateToPage(this._page + 1);\n  }\n\n  /**\n   * lastPage?: function\n   * Navigates to the last page. Returns 'true' if page is valid, else 'false'.\n   */\n  lastPage(): boolean {\n    return this.navigateToPage(this.maxPage);\n  }\n\n  isMinPage(): boolean {\n    return this._page <= 1;\n  }\n\n  isMaxPage(): boolean {\n    return this._page >= this.maxPage;\n  }\n\n  private _calculateRows(): void {\n    const top: number = this._pageSize * this._page;\n    this._fromRow = this._pageSize * (this._page - 1) + 1;\n    this._toRow = this._total > top ? top : this._total;\n  }\n\n  /**\n   * _calculatePageLinks?: function\n   * Calculates the page links that should be shown to the user based on the current state of the paginator\n   */\n  private _calculatePageLinks(): void {\n    // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n    if (this.isMaxPage()) {\n      this._hitEnd = true;\n      this._hitStart = false;\n    }\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n    if (this.isMinPage()) {\n      this._hitEnd = false;\n      this._hitStart = true;\n    }\n    // If the pageLinkCount goes above max possible pages based on perpage setting then reset it to maxPage\n    let actualPageLinkCount: number = this.pageLinkCount;\n    if (this.pageLinkCount > this.maxPage) {\n      actualPageLinkCount = this.maxPage;\n    }\n    // reset the pageLinks array\n    this._pageLinks = [];\n    // fill in the array with the pageLinks based on the current selected page\n    const middlePageLinks: number = Math.floor(actualPageLinkCount / 2);\n    for (let x: number = 0; x < actualPageLinkCount; x++) {\n      // don't go past the maxPage in the pageLinks\n      // have to handle even and odd pageLinkCounts differently so can still lead to the next numbers\n      if (\n        (actualPageLinkCount % 2 === 0 && this.page + middlePageLinks > this.maxPage) ||\n        (actualPageLinkCount % 2 !== 0 && this.page + middlePageLinks >= this.maxPage)\n      ) {\n        this._pageLinks[x] = this.maxPage - (actualPageLinkCount - (x + 1));\n        // if the selected page is after the middle then set that page as middle and get the correct balance on left and right\n        // special handling when there are only 2 pageLinks to just drop to next if block so can lead to next numbers when moving to right\n        // when moving to the left then go into this block\n      } else if (\n        (actualPageLinkCount > 2 || (actualPageLinkCount <= 2 && this._hitEnd)) &&\n        this.page - middlePageLinks > 0\n      ) {\n        this._pageLinks[x] = this.page - middlePageLinks + x;\n        // if the selected page is before the middle then set the pages based on the x index leading up to and after selected page\n      } else if (this.page - middlePageLinks <= 0) {\n        this._pageLinks[x] = x + 1;\n        // other wise just set the array in order starting from the selected page\n      } else {\n        this._pageLinks[x] = this.page + x;\n      }\n    }\n  }\n\n  private _handleOnChange(): void {\n    this._calculateRows();\n    this._calculatePageLinks();\n    const event: IPageChangeEvent = {\n      page: this._page,\n      maxPage: this.maxPage,\n      pageSize: this._pageSize,\n      total: this._total,\n      fromRow: this._fromRow,\n      toRow: this._toRow,\n    };\n    this._changeDetectorRef.markForCheck();\n    this.change.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdPagingBarComponent } from './paging-bar.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatButtonModule],\n  declarations: [TdPagingBarComponent],\n  exports: [TdPagingBarComponent],\n})\nexport class CovalentPagingModule {}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({ selector: '[tdVirtualScrollRow]' })\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  QueryList,\n  ViewChildren,\n  ElementRef,\n  HostListener,\n  Renderer2,\n  AfterViewChecked,\n  OnDestroy,\n  TrackByFunction,\n} from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\n\nconst TD_VIRTUAL_OFFSET: number = 2;\nconst SCROLL_DEBOUNCE: number = 200;\n\nexport interface ITdVirtualScrollBottomEvent {\n  lastRow: any;\n  lastIndex: number;\n}\n\n@Component({\n  selector: 'td-virtual-scroll-container',\n  styleUrls: ['./virtual-scroll-container.component.scss'],\n  templateUrl: './virtual-scroll-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n  private _subs: Subscription[] = [];\n  private _bottom: Subject<any> = new Subject();\n  private _initialized: boolean = false;\n\n  private _totalHeight: number = 0;\n  private _hostHeight: number = 0;\n  private _scrollVerticalOffset: number = 0;\n  private _offsetTransform: SafeStyle;\n\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  private _data: any[];\n  private _virtualData: any[];\n\n  /**\n   * data: any[]\n   * List of items to virtually iterate on.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    if (this._initialized) {\n      this._calculateVirtualRows();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * bottom: function\n   * Method to be executed when user scrolled to the last item of the list.\n   * An [ITdVirtualScrollBottomEvent] event is emitted\n   */\n  @Output() bottom: EventEmitter<ITdVirtualScrollBottomEvent> = new EventEmitter<ITdVirtualScrollBottomEvent>();\n\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\n\n  @ContentChild(TdVirtualScrollRowDirective, { static: false }) _rowTemplate: TdVirtualScrollRowDirective;\n\n  get rowHeight(): number {\n    if (this._rows && this._rows.toArray()[0]) {\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\n    }\n    return 0;\n  }\n\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _domSanitizer: DomSanitizer,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this._subs.push(\n      this._rows.changes.subscribe(() => {\n        this._calculateVirtualRows();\n      }),\n    );\n    this._initialized = true;\n    this._calculateVirtualRows();\n\n    this._subs.push(\n      this._bottom.pipe(debounceTime(SCROLL_DEBOUNCE)).subscribe(() => {\n        this.bottom.emit({\n          lastRow: this._data[this._data.length - 1],\n          lastIndex: this.toRow,\n        });\n      }),\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    const newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\n    if (this._hostHeight !== newHostHeight) {\n      this._hostHeight = newHostHeight;\n      if (this._initialized) {\n        this._calculateVirtualRows();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * trackBy?: TrackByFunction\n   * This accepts the same trackBy function [ngFor] does.\n   * https://angular.io/api/core/TrackByFunction\n   */\n  @Input() trackBy: TrackByFunction<any> = (index: number, item: any) => {\n    return item;\n  };\n\n  @HostListener('scroll', ['$event'])\n  handleScroll(event: Event): void {\n    const element: HTMLElement = <HTMLElement>event.target;\n    if (element) {\n      const verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._scrollVerticalOffset = verticalScroll;\n        if (this._initialized) {\n          this._calculateVirtualRows();\n        }\n      }\n      if (this._initialized && this._data.length * this.rowHeight - (verticalScroll + this._hostHeight) === 0) {\n        // check to see if bottom was hit to throw the bottom event\n        this._bottom.next();\n      }\n    }\n  }\n\n  /**\n   * Method to refresh and recalculate the virtual rows\n   * e.g. after changing the [data] content\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Method to scroll to a specific row of the list.\n   */\n  scrollTo(row: number): void {\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the start of the list.\n   */\n  scrollToStart(): void {\n    this.scrollTo(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the end of the list.\n   */\n  scrollToEnd(): void {\n    this.scrollTo(this.totalHeight / this.rowHeight);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _calculateVirtualRows(): void {\n    if (this._data) {\n      this._totalHeight = this._data.length * this.rowHeight;\n      const fromRow: number = Math.floor(this._scrollVerticalOffset / this.rowHeight) - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n      const range: number = Math.floor(this._hostHeight / this.rowHeight) + TD_VIRTUAL_OFFSET * 2;\n      let toRow: number = range + this.fromRow;\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    if (this._scrollVerticalOffset > TD_VIRTUAL_OFFSET * this.rowHeight) {\n      offset = this.fromRow * this.rowHeight;\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle(\n      'translateY(' + (offset - this.totalHeight) + 'px)',\n    );\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\n\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [TdVirtualScrollRowDirective, TdVirtualScrollContainerComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TD_VIRTUAL_SCROLL],\n  exports: [TD_VIRTUAL_SCROLL],\n})\nexport class CovalentVirtualScrollModule {}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  AfterContentInit,\n} from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\nexport const DEFAULT_NOTIFICATION_LIMIT: number = 99;\n\n@Component({\n  selector: 'td-notification-count',\n  styleUrls: ['./notification-count.component.scss'],\n  templateUrl: './notification-count.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n  private _limit: number = DEFAULT_NOTIFICATION_LIMIT;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content', { static: true }) content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n  /**\n   * limit?: number\n   * Limit for notification count. If the number of notifications is greater than limit, then + will be added. Defaults to 99.\n   */\n  @Input()\n  set limit(limit: number) {\n    this._limit = limit;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > this._limit) {\n      return `${this._limit}+`;\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      const contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [TdNotificationCountComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TD_NOTIFICATIONS],\n  exports: [TD_NOTIFICATIONS],\n})\nexport class CovalentNotificationsModule {}\n","import { Directive } from '@angular/core';\nimport { HostListener, Host, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdAutoTrim]',\n})\nexport class TdAutoTrimDirective {\n  constructor(@Optional() @Host() private _model: NgModel) {}\n\n  /**\n   * Listens to host's (blur) event and trims value.\n   */\n  @HostListener('blur', ['$event'])\n  onBlur(event: Event): void {\n    if (this._model && this._model.value && typeof this._model.value === 'string') {\n      this._model.update.emit(this._model.value.trim());\n    }\n  }\n}\n","import { Directive, HostListener, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\ninterface IFsDocument extends HTMLDocument {\n  fullscreenElement: Element;\n  webkitFullscreenElement: Element;\n  mozFullscreenElement: Element;\n  msFullscreenElement: Element;\n  webkitExitFullscreen: () => void;\n  mozCancelFullScreen: () => void;\n  msExitFullscreen: () => void;\n}\n\n@Directive({\n  selector: '[tdFullScreen]',\n  exportAs: 'tdFullScreen',\n})\nexport class TdFullscreenDirective {\n  fullScreenIsActive: boolean = false;\n  constructor(@Inject(DOCUMENT) private _document: IFsDocument, private _el: ElementRef) {}\n\n  @HostListener('document:fullscreenchange', ['$event'])\n  @HostListener('document:webkitfullscreenchange', ['$event'])\n  @HostListener('document:mozfullscreenchange', ['$event'])\n  @HostListener('document:msfullscreenchange', ['$event'])\n  public fsChangeHandler(event: Event): void {\n    this.fullScreenIsActive = event.srcElement === this._getFullScreenElement();\n  }\n\n  public toggleFullScreen(): void {\n    this._getFullScreenElement() === this._el.nativeElement ? this.exitFullScreen() : this.enterFullScreen();\n  }\n\n  public enterFullScreen(): void {\n    const {\n      _el: { nativeElement },\n    }: TdFullscreenDirective = this;\n    const enterFullScreenMap: object = {\n      requestFullscreen: () => nativeElement.requestFullscreen(), // Chrome\n      webkitRequestFullscreen: () => nativeElement.webkitRequestFullscreen(), // Safari\n      mozRequestFullScreen: () => nativeElement.mozRequestFullScreen(), // Firefox\n      msRequestFullscreen: () => nativeElement.msRequestFullscreen(), // IE\n    };\n\n    for (const handler of Object.keys(enterFullScreenMap)) {\n      if (nativeElement[handler]) {\n        enterFullScreenMap[handler]();\n      }\n    }\n  }\n\n  public exitFullScreen(): void {\n    const {\n      _document,\n      _el: { nativeElement },\n    }: TdFullscreenDirective = this;\n    const exitFullScreenMap: object = {\n      exitFullscreen: () => _document.exitFullscreen(), // Chrome\n      webkitExitFullscreen: () => _document.webkitExitFullscreen(), // Safari\n      mozCancelFullScreen: () => _document.mozCancelFullScreen(), // Firefox\n      msExitFullscreen: () => _document.msExitFullscreen(), // IE\n    };\n\n    for (const handler of Object.keys(exitFullScreenMap)) {\n      if (_document[handler] && this._getFullScreenElement() === nativeElement) {\n        exitFullScreenMap[handler]();\n      }\n    }\n  }\n\n  private _getFullScreenElement(): Element {\n    const { _document }: TdFullscreenDirective = this;\n    const tdFullScreenElementMap: object = {\n      fullscreenElement: () => _document.fullscreenElement, // Chrome, Opera\n      webkitFullscreenElement: () => _document.webkitFullscreenElement, // Safari\n      mozFullscreenElement: () => _document.mozFullscreenElement, // Firefox\n      msFullscreenElement: () => _document.msFullscreenElement, // IE, Edge\n    };\n    for (const props of Object.keys(tdFullScreenElementMap)) {\n      if (_document[props]) {\n        return _document[props];\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TdTimeAgoPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    const ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    const startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((startTime - time.getTime()) / 1000);\n\n    if (diff < 2) {\n      return '1 second ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' seconds ago';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 minute ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' minutes ago';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 hour ago';\n    }\n    if (diff < 24) {\n      return Math.floor(diff) + ' hours ago';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return '1 day ago';\n    }\n    if (diff < 30) {\n      return Math.floor(diff) + ' days ago';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return '1 month ago';\n    }\n    if (diff < 12) {\n      return Math.floor(diff) + ' months ago';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return '1 year ago';\n    } else {\n      return Math.floor(diff) + ' years ago';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeDifference',\n})\nexport class TdTimeDifferencePipe implements PipeTransform {\n  transform(start: any, end?: any): string {\n    const startTime: Date = new Date(start);\n    let endTime: Date;\n\n    if (end !== undefined) {\n      endTime = new Date(end);\n    } else {\n      endTime = new Date();\n    }\n\n    if (!startTime.getTime() || !endTime.getTime()) {\n      return 'Invalid Date';\n    }\n\n    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\n\n    const days: number = Math.floor(diff / (60 * 60 * 24));\n    diff = diff - days * (60 * 60 * 24);\n\n    const hours: number = Math.floor(diff / (60 * 60));\n    diff = diff - hours * (60 * 60);\n\n    const minutes: number = Math.floor(diff / 60);\n    diff -= minutes * 60;\n\n    const seconds: number = diff;\n\n    const pad: string = '00';\n\n    let daysFormatted: string = '';\n\n    if (days > 0 && days < 2) {\n      daysFormatted = ' day - ';\n    } else if (days > 1) {\n      daysFormatted = ' days - ';\n    }\n\n    return (\n      (days > 0 ? days + daysFormatted : daysFormatted) +\n      pad.substring(0, pad.length - (hours + '').length) +\n      hours +\n      ':' +\n      pad.substring(0, pad.length - (minutes + '').length) +\n      minutes +\n      ':' +\n      pad.substring(0, pad.length - (seconds + '').length) +\n      seconds\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeUntil',\n})\nexport class TdTimeUntilPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    const ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    const startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((time.getTime() - startTime) / 1000);\n\n    if (diff < 2) {\n      return 'in 1 second';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' seconds';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 minute';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' minutes';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 hour';\n    }\n    if (diff < 24) {\n      return 'in ' + Math.floor(diff) + ' hours';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return 'in 1 day';\n    }\n    if (diff < 30) {\n      return 'in ' + Math.floor(diff) + ' days';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return 'in 1 month';\n    }\n    if (diff < 12) {\n      return 'in ' + Math.floor(diff) + ' months';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return 'in 1 year';\n    } else {\n      return 'in ' + Math.floor(diff) + ' years';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes',\n})\nexport class TdBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    const k: number = 1024;\n    const sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimalBytes',\n})\nexport class TdDecimalBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    const k: number = 1000;\n    const sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'digits',\n})\nexport class TdDigitsPipe implements PipeTransform {\n  private _decimalPipe: DecimalPipe;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {\n    this._decimalPipe = new DecimalPipe(this._locale);\n  }\n\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return the value */\n      return digits;\n    } else if (digits < 1) {\n      return this._decimalPipe.transform(digits.toFixed(precision));\n    }\n    const k: number = 1000;\n    const sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    const i: number = Math.floor(Math.log(digits) / Math.log(k));\n    const size: string = sizes[i];\n    return (\n      this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '')\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\nexport class TdTruncatePipe implements PipeTransform {\n  transform(text: any, length: number): string {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    // Truncate\n    let truncated: string = text.substr(0, length);\n\n    if (text.length > length) {\n      if (truncated.lastIndexOf(' ') > 0) {\n        truncated = truncated.trim();\n      }\n\n      truncated += 'â¦';\n    }\n\n    return truncated;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * Directives\n */\nimport { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';\nimport { TdFullscreenDirective } from './directives/fullscreen/fullscreen.directive';\n\nconst TD_DIRECTIVES: Type<any>[] = [TdAutoTrimDirective, TdFullscreenDirective];\n\n// Validators\nconst TD_VALIDATORS: Type<any>[] = [];\n\n/**\n * PIPES\n */\nimport { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';\nimport { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';\nimport { TdTimeUntilPipe } from './pipes/time-until/time-until.pipe';\nimport { TdBytesPipe } from './pipes/bytes/bytes.pipe';\nimport { TdDecimalBytesPipe } from './pipes/decimal-bytes/decimal-bytes.pipe';\nimport { TdDigitsPipe } from './pipes/digits/digits.pipe';\nimport { TdTruncatePipe } from './pipes/truncate/truncate.pipe';\n\nconst TD_PIPES: Type<any>[] = [\n  TdTimeAgoPipe,\n  TdTimeDifferencePipe,\n  TdTimeUntilPipe,\n  TdBytesPipe,\n  TdDecimalBytesPipe,\n  TdDigitsPipe,\n  TdTruncatePipe,\n];\n\n/**\n * Services\n */\n\n@NgModule({\n  imports: [FormsModule, CommonModule],\n  declarations: [TD_DIRECTIVES, TD_PIPES, TD_VALIDATORS],\n  exports: [FormsModule, CommonModule, TD_DIRECTIVES, TD_PIPES, TD_VALIDATORS],\n})\nexport class CovalentCommonModule {}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\n\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IRotateAnimation extends IAnimationOptions {\n  degrees?: number;\n  ease?: string;\n}\n\n/**\n * const tdRotateAnimation\n *\n * Parameter Options:\n * * degressStart: Degrees of rotation that the dom object will end up in during the \"false\" state\n * * degreesEnd: Degrees of rotation that the dom object will end up in during the \"true\" state\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerates and decelerates. Defaults to ease-in.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a rotation animation.\n *\n * usage: [@tdRotate]=\"{ value: true | false, params: { degreesEnd: 90 }}\"\n */\n\nexport const tdRotateAnimation: AnimationTriggerMetadata = trigger('tdRotate', [\n  state(\n    '0',\n    style({\n      transform: 'rotate({{ degressStart }}deg)',\n    }),\n    { params: { degressStart: 0 } },\n  ),\n  state(\n    '1',\n    style({\n      transform: 'rotate({{ degreesEnd }}deg)',\n    }),\n    { params: { degreesEnd: 180 } },\n  ),\n  transition(\n    '0 <=> 1',\n    [group([query('@*', animateChild(), { optional: true }), animate('{{ duration }}ms {{ delay }}ms {{ ease }}')])],\n    { params: { duration: 250, delay: '0', ease: 'ease-in' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface ICollapseAnimation extends IAnimationOptions {\n  easeOnClose?: string;\n  easeOnOpen?: string;\n}\n\n/**\n * const tdCollapseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnClose: Animation accelerates and decelerates when closing. Defaults to ease-in.\n * * easeOnOpen: Animation accelerates and decelerates when opening. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a collapse/expand animation.\n *\n * usage: [@tdCollapse]=\"{ value: true | false, params: { duration: 500 }}\"\n */\nexport const tdCollapseAnimation: AnimationTriggerMetadata = trigger('tdCollapse', [\n  state(\n    '1',\n    style({\n      height: '0',\n      overflow: 'hidden',\n    }),\n  ),\n  state(\n    '0',\n    style({\n      height: AUTO_STYLE,\n      overflow: AUTO_STYLE,\n    }),\n  ),\n  transition(\n    '0 => 1',\n    [\n      style({\n        overflow: 'hidden',\n        height: AUTO_STYLE,\n      }),\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          style({\n            height: '0',\n            overflow: 'hidden',\n          }),\n        ),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', ease: 'ease-in' } },\n  ),\n  transition(\n    '1 => 0',\n    [\n      style({\n        height: '0',\n        overflow: 'hidden',\n      }),\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          style({\n            overflow: 'hidden',\n            height: AUTO_STYLE,\n          }),\n        ),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IFadeInOutAnimation extends IAnimationOptions {\n  easeOnIn?: string;\n  easeOnOut?: string;\n}\n\n/**\n * const tdFadeInOutAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnIn: Animation accelerates and decelerates when fading in. Defaults to ease-in.\n * * easeOnOut: Animation accelerates and decelerates when fading out. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a fade animation.\n *\n * usage: [@tdFadeInOut]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger('tdFadeInOut', [\n  state(\n    '0',\n    style({\n      opacity: '0',\n      visibility: 'hidden',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      opacity: AUTO_STYLE,\n      visibility: AUTO_STYLE,\n    }),\n  ),\n  transition(\n    '0 => 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' } },\n  ),\n  transition(\n    '1 => 0',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdBounceAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a bounce animation.\n *\n * usage: [@tdBounce]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdBounceAnimation: AnimationTriggerMetadata = trigger('tdBounce', [\n  state(\n    '0',\n    style({\n      transform: 'translate3d(0, 0, 0)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'translate3d(0, 0, 0)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.2,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -30px, 0)',\n              offset: 0.4,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -30px, 0)',\n              offset: 0.43,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.53,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -15px, 0)',\n              offset: 0.7,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.8,\n            }),\n            style({ transform: 'translate3d(0, -4px, 0)', offset: 0.9 }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 1.0,\n            }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdFlashAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a flash animation.\n *\n * usage: [@tdFlash]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFlashAnimation: AnimationTriggerMetadata = trigger('tdFlash', [\n  state(\n    '0',\n    style({\n      opacity: 1,\n    }),\n  ),\n  state(\n    '1',\n    style({\n      opacity: 1,\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ opacity: 1, offset: 0 }),\n            style({ opacity: 0, offset: 0.25 }),\n            style({ opacity: 1, offset: 0.5 }),\n            style({ opacity: 0, offset: 0.75 }),\n            style({ opacity: 1, offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdHeadshakeAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a headshake animation.\n *\n * usage: [@tdHeadshake]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger('tdHeadshake', [\n  state(\n    '0',\n    style({\n      transform: 'translateX(0)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'translateX(0)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'translateX(0)', offset: 0 }),\n            style({ transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065 }),\n            style({ transform: 'translateX(5px) rotateY(7deg)', offset: 0.185 }),\n            style({ transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315 }),\n            style({ transform: 'translateX(2px) rotateY(3deg)', offset: 0.435 }),\n            style({ transform: 'translateX(0)', offset: 0.5 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdJelloAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a jello animation.\n *\n * usage: [@tdJello]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdJelloAnimation: AnimationTriggerMetadata = trigger('tdJello', [\n  state(\n    '0',\n    style({\n      transform: 'none',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'none',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'none', offset: 0 }),\n            style({ transform: 'none', offset: 0.011 }),\n            style({ transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222 }),\n            style({ transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333 }),\n            style({ transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444 }),\n            style({ transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555 }),\n            style({ transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666 }),\n            style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777 }),\n            style({ transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdPulseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a pulse animation.\n *\n * usage: [@tdPulse]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdPulseAnimation: AnimationTriggerMetadata = trigger('tdPulse', [\n  state(\n    '0',\n    style({\n      transform: 'scale3d(1, 1, 1)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'scale3d(1, 1, 1)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),\n            style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),\n            style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import { ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport { Observable, Subject } from 'rxjs';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport interface IControlValueAccessor extends ControlValueAccessor {\n  value: any;\n  valueChanges: Observable<any>;\n  onChange: (_: any) => any;\n  onTouched: () => any;\n}\n\nexport interface IHasChangeDetectorRef {\n  _changeDetectorRef: ChangeDetectorRef;\n}\n\n/** Mixin to augment a component with ngModel support. */\nexport function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>(\n  base: T,\n  initialValue?: any,\n): Constructor<IControlValueAccessor> & T {\n  return class extends base {\n    private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;\n    private _subjectValueChanges: Subject<any>;\n    valueChanges: Observable<any>;\n\n    constructor(...args: any[]) {\n      super(...args);\n      this._subjectValueChanges = new Subject<any>();\n      this.valueChanges = this._subjectValueChanges.asObservable();\n    }\n\n    set value(v: any) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n        this._changeDetectorRef.markForCheck();\n        this._subjectValueChanges.next(v);\n      }\n    }\n    get value(): any {\n      return this._value;\n    }\n\n    writeValue(value: any): void {\n      this.value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n    }\n\n    onChange = (_: any) => noop;\n    onTouched = () => noop;\n  };\n}\n","import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CovalentValidators {\n  static min(minValue: any): ValidatorFn {\n    // tslint:disable-next-line:prefer-immediate-return\n    const func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {\n      if (!!Validators.required(c) || (!minValue && minValue !== 0)) {\n        return undefined;\n      }\n      const v: number = c.value;\n      return v < minValue ? { min: { minValue, actualValue: v } } : undefined;\n    };\n    return func;\n  }\n\n  static max(maxValue: any): ValidatorFn {\n    // tslint:disable-next-line:prefer-immediate-return\n    const func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {\n      if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {\n        return undefined;\n      }\n      const v: number = c.value;\n      return v > maxValue ? { max: { maxValue, actualValue: v } } : undefined;\n    };\n    return func;\n  }\n\n  static numberRequired(c: AbstractControl): { [key: string]: any } {\n    return Number.isNaN(c.value) ? { required: true } : undefined;\n  }\n}\n","/**\n * Conversion function that takes an array of objects and converts\n * them to CSV format. Custom key and line separators can be specified.\n *\n * @param objects list of strings in JSON format or actual objects\n * @param keySeparator optional parameter to specify custom value separator\n * @param lineSeparator optional parameter to specify custom end of line separator\n * @returns CSV formatted string\n */\nexport function convertObjectsToCSV(\n  objects: any[],\n  keySeparator: string = ',',\n  lineSeparator: string = '\\r\\n',\n): string {\n  if (!objects) {\n    return '';\n  }\n\n  let outputString: string = '';\n\n  // Iterate through array, creating one output line per object\n  objects.forEach((value: object, key: number) => {\n    let line: string = '';\n    for (const index of Object.keys(objects[key])) {\n      if (line !== '') {\n        line += keySeparator;\n      }\n      if (objects[key][index] === null || objects[key][index] === undefined) {\n        objects[key][index] = '';\n      }\n      line += objects[key][index];\n    }\n    outputString += `${line}${lineSeparator}`;\n  });\n\n  // Append header row identifying keys into output\n  if (objects[0]) {\n    const headers: string = Object.keys(objects[0]).join(keySeparator);\n    outputString = `${headers}${lineSeparator}${outputString}`;\n  }\n\n  return outputString;\n}\n\n/**\n * Conversion function that takes a CSV representation\n * of objects and converts them to JSON.\n * The first row in the input must be the object keys.\n * Custom key separator and line separator can be specified.\n * Indentation size for output JSON can be specified.\n *\n * @param csv list of strings in JSON format or actual objects\n * @param keySeparator optional parameter to specify custom value separator\n * @param lineSeparator optional parameter to specify custom end of line separator\n * @param indent optional parameter indicating space indentation for pretty output. Default is 2.\n * @returns JSON formatted string\n */\nexport function convertCSVToJSON(\n  csv: string,\n  keySeparator: string = ',',\n  lineSeparator: string = '\\r\\n',\n  indent: number = 2,\n): string {\n  if (!csv) {\n    return '';\n  }\n\n  const csvArray: string[] = csv.split(lineSeparator);\n  // Input CSV must have a minimum of two rows\n  if (csvArray.length < 2) {\n    return '';\n  }\n\n  const newObjects: any[] = [];\n\n  // Extract object keys from header row\n  const keys: string[] = csvArray[0].split(keySeparator);\n  // Iterate through array, creating one output line per object\n  for (let i: number = 1; i < csvArray.length; i++) {\n    const newObject: any = {};\n\n    const values: string[] = csvArray[i].split(keySeparator);\n    if (values.length !== keys.length) {\n      continue;\n    }\n    for (let j: number = 0; j < keys.length; j++) {\n      newObject[keys[j]] = values[j];\n    }\n    newObjects.push(newObject);\n  }\n\n  return formatJSON(newObjects, indent);\n}\n\n/**\n * Convert object to JSON using stringify. Indentation size for output JSON can be specified.\n *\n * @param json object to be converted\n * @param indent optional parameter indicating space indentation for pretty output. Default is 2.\n */\nexport function formatJSON(json: object, indent: number = 2): string {\n  return JSON.stringify(json, undefined, indent);\n}\n","import { convertObjectsToCSV, formatJSON } from './convert';\n\n/**\n * Download CSV content to the specified file with .csv extension\n * appended to the provided base file name.\n *\n * @param fileBaseName base name of destination file\n * @param csv CSV contents\n */\nexport function downloadCSV(fileBaseName: string, csv: string): void {\n  downloadFile(`${fileBaseName}.csv`, csv, 'text/csv');\n}\n\n/**\n * Download JSON content to the specified file with .json extension\n * appended to the provided base file name.\n *\n * @param fileBaseName base name of destination file\n * @param json JSON contents\n * @param format indicates if JSON should be prettied\n * @param indent optional parameter indicating space indentation for pretty output. Default is 2\n */\nexport function downloadJSON(fileBaseName: string, json: string, format: boolean = false, indent: number = 2): void {\n  downloadFile(`${fileBaseName}.json`, format ? formatJSON(JSON.parse(json), indent) : json, 'application/json');\n}\n\n/**\n * Convert objects to CSV format and download to file with .csv\n * extension appended to the provided base file name. Custom key\n * separator and line separator can be specified.\n *\n * @param fileBaseName base name of destination file\n * @param objects object array to be converted to CSV format\n *   prior to writing to download destination\n * @param keySeparator optional parameter to specify custom value separator\n * @param lineSeparator optional parameter to specify custom end of line separator\n */\nexport function downloadObjectsToCSV(\n  fileBaseName: string,\n  objects: any[],\n  keySeparator: string = ',',\n  lineSeparator: string = '\\r\\n',\n): void {\n  downloadFile(`${fileBaseName}.csv`, convertObjectsToCSV(objects, keySeparator, lineSeparator), 'text/csv');\n}\n\n/**\n * Convert objects to JSON format and download to file with .json\n * extension appended to the provided base file name.\n *\n * @param fileBaseName base name of destination file\n * @param objects object array to be converted to JSON format\n *   prior to writing to download destination\n * @param indent optional parameter indicating space indentation for pretty output. Default is 2\n */\nexport function downloadObjectsToJSON(fileBaseName: string, objects: any[], indent: number = 2): void {\n  downloadFile(`${fileBaseName}.json`, formatJSON(objects, indent), 'application/json');\n}\n\n/**\n * Download string content to the specified file with desired mime type.\n *\n * @param fileName full filename (including appropriate extension) of destination file\n * @param contents string contents to be written to download destination\n * @param mimeType mime type appropriate to file content to support consumption of destination file\n */\nexport function downloadFile(fileName: string, contents: string, mimeType: string = 'text/plain'): void {\n  if (!fileName || !contents) {\n    return;\n  }\n\n  // Create blob object and assign URL\n  const blob: Blob = new Blob([contents], { type: mimeType });\n  const url: string = window.URL.createObjectURL(blob);\n\n  // Construct anchor for URL, append to DOM, click and cleanup.\n  const a: HTMLAnchorElement = document.createElement('a');\n  a.setAttribute('style', 'display: none');\n  a.setAttribute('download', fileName);\n  a.href = url;\n  document.body.appendChild(a);\n  a.click();\n  window.URL.revokeObjectURL(url);\n  document.body.removeChild(a);\n  window.URL.revokeObjectURL(url);\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Renderer2,\n  ElementRef,\n  AfterViewInit,\n  ViewContainerRef,\n  TemplateRef,\n  ViewChild,\n  HostBinding,\n  HostListener,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) {}\n}\n\n@Component({\n  selector: 'td-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [tdCollapseAnimation],\n})\nexport class TdMessageComponent implements AfterViewInit {\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective, { static: true }) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef, { static: false }) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): any {\n    return { value: !this._opened, duration: 100 };\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input() icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n  ) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [TdMessageComponent, TdMessageContainerDirective];\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TD_MESSAGE],\n  exports: [TD_MESSAGE],\n})\nexport class CovalentMessageModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  forwardRef,\n  DoCheck,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnInit,\n  HostListener,\n  ElementRef,\n  Optional,\n  Inject,\n  Directive,\n  TemplateRef,\n  ViewContainerRef,\n  ContentChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterViewInit,\n  OnDestroy,\n  HostBinding,\n  Renderer2,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  ESCAPE,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  DELETE,\n  BACKSPACE,\n  ENTER,\n  SPACE,\n  TAB,\n  HOME,\n} from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable, Subscription, timer, merge, fromEvent } from 'rxjs';\nimport { filter, debounceTime } from 'rxjs/operators';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdChipsComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./chips.component.scss'],\n  templateUrl: './chips.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase\n  implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n  private _outsideClickSubs: Subscription = Subscription.EMPTY;\n  private _inputValueChangesSubs: Subscription = Subscription.EMPTY;\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _required: boolean = false;\n  private _tabIndex: number = 0;\n  private _touchendDebounce: number = 100;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input', { static: true }) _nativeInput: ElementRef;\n  @ViewChild(MatInput, { static: true }) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger, { static: true }) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective, { static: false }) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective, { static: false })\n  _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * required?: boolean\n   * Value is set to true if at least one chip is needed\n   * Defaults to false\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * returns the display placeholder\n   */\n  get displayPlaceHolder(): string {\n    if (!this.canAddChip) {\n      return '';\n    }\n    return this._required ? `${this.placeholder} *` : this.placeholder;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input() placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input() debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output() add: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output() inputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output() chipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output() chipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * compareWith? function\n   * Function used to check whether a chip value already exists.\n   * Defaults to strict equality comparison ===\n   */\n  @Input() compareWith: (o1: any, o2: any) => boolean = (o1: any, o2: any) => {\n    return o1 === o2;\n  };\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n    // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    timer()\n      .toPromise()\n      .then(() => {\n        this._isMousedown = false;\n      });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement || clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        timer()\n          .toPromise()\n          .then(() => {\n            this.removeFocusedState();\n          });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  ngOnInit(): void {\n    this._inputValueChangesSubs = this.inputControl.valueChanges\n      .pipe(debounceTime(this.debounce))\n      .subscribe((value: string) => {\n        this.inputChange.emit(value ? value : '');\n      });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._outsideClickSubs.unsubscribe();\n    this._inputValueChangesSubs.unsubscribe();\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      const selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n\n    this._closeAutocomplete();\n    timer(this.debounce)\n      .toPromise()\n      .then(() => {\n        this.setFocusedState();\n        this._setFirstOptionActive();\n        this._openAutocomplete();\n      });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.findIndex((item: any) => this.compareWith(item, value)) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.add.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    const removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === this._totalChips - 1 && index === 0) {\n      this._inputChild.focus();\n    } else if (index < this._totalChips - 1) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.remove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.chipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.chipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          const length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n          this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === this._totalChips - 1) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < this._totalChips - 1) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    const chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      timer()\n        .toPromise()\n        .then(() => {\n          if (this.focused && this._options && this._options.length > 0) {\n            // clean up of previously active options\n            this._options.toArray().forEach((option: MatOption) => {\n              option.setInactiveStyles();\n            });\n            // set the first one as active\n            this._options.toArray()[0].setActiveStyles();\n            this._internalActivateOption = true;\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      this._outsideClickSubs = merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n        .pipe(\n          debounceTime(this._touchendDebounce),\n          filter((event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return (\n              this.focused &&\n              clickTarget !== this._elementRef.nativeElement &&\n              !this._elementRef.nativeElement.contains(clickTarget) &&\n              !this._internalClick\n            );\n          }),\n        )\n        .subscribe(() => {\n          if (this.focused) {\n            this._autocompleteTrigger.closePanel();\n            this.removeFocusedState();\n            this.onTouched();\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n    }\n    return undefined;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [ReactiveFormsModule, CommonModule, MatInputModule, MatIconModule, MatChipsModule, MatAutocompleteModule],\n  declarations: [TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective],\n  exports: [TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective],\n})\nexport class CovalentChipsModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  Renderer2,\n  ElementRef,\n  ContentChildren,\n  QueryList,\n  HostListener,\n} from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styleUrls: ['./data-table-row.component.scss'],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableColumnRowComponent {\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styleUrls: ['./data-table-row.component.scss'],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableRowComponent {\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click')\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({ selector: '[tdDataTableTemplate]ng-template' })\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\n  @Input() tdDataTableTemplate: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  OnDestroy,\n  AfterViewInit,\n  ContentChildren,\n  TemplateRef,\n  AfterContentInit,\n  QueryList,\n  Inject,\n  Optional,\n  ViewChildren,\n  ElementRef,\n  OnInit,\n  AfterContentChecked,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\n\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\nimport {\n  ITdDataTableSortChangeEvent,\n  TdDataTableColumnComponent,\n} from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport enum TdDataTableSortingOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface ITdDataTableColumnWidth {\n  min?: number;\n  max?: number;\n}\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n  sortable?: boolean;\n  hidden?: boolean;\n  filter?: boolean;\n  width?: ITdDataTableColumnWidth | number;\n}\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n  index: number;\n}\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\nexport interface ITdDataTableRowClickEvent {\n  row: any;\n  index: number;\n}\n\nexport interface IInternalColumnWidth {\n  value: number;\n  limit: boolean;\n  index: number;\n  min?: boolean;\n  max?: boolean;\n}\n\n/**\n * Constant to set the rows offset before and after the viewport\n */\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n/**\n * Constant to set default row height if none is provided\n */\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\n\nexport class TdDataTableBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdDataTableComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-data-table',\n  styleUrls: ['./data-table.component.scss'],\n  templateUrl: './data-table.component.html',\n  inputs: ['value'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent extends _TdDataTableMixinBase\n  implements IControlValueAccessor, OnInit, AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\n  /** responsive width calculations */\n  private _resizeSubs: Subscription;\n  private _rowsChangedSubs: Subscription;\n  private _hostWidth: number = 0;\n\n  /** manually resizable columns */\n  private _resizableColumns: boolean = false;\n  private _columnClientX: number = 0;\n  private _columnResizeSubs: Subscription;\n  private _resizingColumn: number;\n  private _onColumnResize: Subject<number> = new Subject<number>();\n\n  get resizingColumn(): number {\n    return this._resizingColumn;\n  }\n\n  get hostWidth(): number {\n    // if the checkboxes are rendered, we need to remove their width\n    // from the total width to calculate properly\n    if (this.selectable) {\n      return this._hostWidth - 42;\n    }\n    return this._hostWidth;\n  }\n\n  private _widths: IInternalColumnWidth[] = [];\n  private _onResize: Subject<void> = new Subject<void>();\n\n  /** column header reposition and viewpoort */\n  private _verticalScrollSubs: Subscription;\n  private _horizontalScrollSubs: Subscription;\n  private _scrollHorizontalOffset: number = 0;\n\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\n\n  // Array of cached row heights to allow dynamic row heights\n  private _rowHeightCache: number[] = [];\n  // Total pseudo height of all the elements\n  private _totalHeight: number = 0;\n  // Total host height for the viewport\n  private _hostHeight: number = 0;\n  // Scrolled vertical pixels\n  private _scrollVerticalOffset: number = 0;\n  // Style to move the content a certain offset depending on scrolled offset\n  private _offsetTransform: SafeStyle;\n\n  // Variables that set from and to which rows will be rendered\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  /**\n   * Returns the offset style with a proper calculation on how much it should move\n   * over the y axis of the total height\n   */\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  /**\n   * Returns the assumed total height of the rows\n   */\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  /**\n   * Returns the initial row to render in the viewport\n   */\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  /**\n   * Returns the last row to render in the viewport\n   */\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  private _valueChangesSubs: Subscription;\n  /** internal attributes */\n  private _data: any[];\n  // data virtually iterated by component\n  private _virtualData: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _clickable: boolean = false;\n  private _multiple: boolean = true;\n  private _allSelected: boolean = false;\n  private _indeterminate: boolean = false;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** shift select */\n  private _shiftPreviouslyPressed: boolean = false;\n  private _lastSelectedIndex: number = -1;\n  private _firstSelectedIndex: number = -1;\n  private _firstCheckboxValue: boolean = false;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective, { descendants: true }) _templates: QueryList<\n    TdDataTableTemplateDirective\n  >;\n\n  @ViewChild('scrollableDiv', { static: true }) _scrollableDiv: ElementRef;\n\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\n\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\n\n  /**\n   * Returns scroll position to reposition column headers\n   */\n  get columnsLeftScroll(): number {\n    return this._scrollHorizontalOffset * -1;\n  }\n\n  /**\n   * Returns true if all values are selected.\n   */\n  get allSelected(): boolean {\n    return this._allSelected;\n  }\n\n  /**\n   * Returns true if all values are not deselected\n   * and at least one is.\n   */\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    this._rowHeightCache = [];\n    Promise.resolve().then(() => {\n      this.refresh();\n      // scroll back to the top if the data has changed\n      this._scrollableDiv.nativeElement.scrollTop = 0;\n    });\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      const row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * resizableColumns?: boolean\n   * Enables manual column resize.\n   * Defaults to 'false'\n   */\n  @Input('resizableColumns')\n  set resizableColumns(resizableColumns: boolean) {\n    this._resizableColumns = coerceBooleanProperty(resizableColumns);\n  }\n  get resizableColumns(): boolean {\n    return this._resizableColumns;\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(selectable: boolean) {\n    this._selectable = coerceBooleanProperty(selectable);\n  }\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  /**\n   * clickable?: boolean\n   * Enables row click events, hover.\n   * Defaults to 'false'\n   */\n  @Input('clickable')\n  set clickable(clickable: boolean) {\n    this._clickable = coerceBooleanProperty(clickable);\n  }\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: boolean) {\n    this._sortable = coerceBooleanProperty(sortable);\n  }\n  get sortable(): boolean {\n    return this._sortable;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n  get sortByColumn(): ITdDataTableColumn {\n    return this._sortBy;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    const sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ? TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n  get sortOrderEnum(): TdDataTableSortingOrder {\n    return this._sortOrder;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output() sortChange: EventEmitter<ITdDataTableSortChangeEvent> = new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output() rowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * rowClick?: function\n   * Event emitted when a row is clicked.\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\n   */\n  @Output() rowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<ITdDataTableRowClickEvent>();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output() selectAll: EventEmitter<ITdDataTableSelectAllEvent> = new EventEmitter<ITdDataTableSelectAllEvent>();\n\n  constructor(\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    private _elementRef: ElementRef,\n    private _domSanitizer: DomSanitizer,\n    _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * compareWith?: function(row, model): boolean\n   * Allows custom comparison between row and model to see if row is selected or not\n   * Default comparation is by reference\n   */\n  @Input() compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\n    return row === model;\n  };\n\n  /**\n   * Initialize observable for resize and scroll events\n   */\n  ngOnInit(): void {\n    // initialize observable for resize calculations\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\n      if (this._rows) {\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\n        });\n      }\n      this._calculateWidths();\n      this._calculateVirtualRows();\n    });\n\n    // initialize observable for column resize calculations\n    this._columnResizeSubs = this._onColumnResize\n      .asObservable()\n      .pipe(debounceTime(0))\n      .subscribe((clientX: number) => {\n        this._columnClientX = clientX;\n        this._calculateWidths();\n        this._changeDetectorRef.markForCheck();\n      });\n    // initialize observable for scroll column header reposition\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable().subscribe((horizontalScroll: number) => {\n      this._scrollHorizontalOffset = horizontalScroll;\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for virtual scroll rendering\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable().subscribe((verticalScroll: number) => {\n      this._scrollVerticalOffset = verticalScroll;\n      this._calculateVirtualRows();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (const template of this._templates.toArray()) {\n      this._templateMap.set(template.tdDataTableTemplate, template.templateRef);\n    }\n  }\n\n  /**\n   * Checks hosts native elements widths to see if it has changed (resize check)\n   */\n  ngAfterContentChecked(): void {\n    // check if the scroll has been reset when element is hidden\n    if (this._scrollVerticalOffset - this._scrollableDiv.nativeElement.scrollTop > 5) {\n      // scroll back to the top if element has been reset\n      this._onVerticalScroll.next(0);\n    }\n    if (this._elementRef.nativeElement) {\n      const newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\n      // if the width has changed then we throw a resize event.\n      if (this._hostWidth !== newHostWidth) {\n        setTimeout(() => {\n          this._hostWidth = newHostWidth;\n          this._onResize.next();\n        }, 0);\n      }\n    }\n    if (this._scrollableDiv.nativeElement) {\n      const newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n      // if the height of the viewport has changed, then we mark for check\n      if (this._hostHeight !== newHostHeight) {\n        this._hostHeight = newHostHeight;\n        this._calculateVirtualRows();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Registers to an observable that checks if all rows have been rendered\n   * so we can start calculating the widths\n   */\n  ngAfterViewInit(): void {\n    this._rowsChangedSubs = this._rows.changes.pipe(debounceTime(0)).subscribe(() => {\n      this._onResize.next();\n    });\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Unsubscribes observables when data table is destroyed\n   */\n  ngOnDestroy(): void {\n    if (this._resizeSubs) {\n      this._resizeSubs.unsubscribe();\n    }\n    if (this._columnResizeSubs) {\n      this._columnResizeSubs.unsubscribe();\n    }\n    if (this._horizontalScrollSubs) {\n      this._horizontalScrollSubs.unsubscribe();\n    }\n    if (this._verticalScrollSubs) {\n      this._verticalScrollSubs.unsubscribe();\n    }\n    if (this._rowsChangedSubs) {\n      this._rowsChangedSubs.unsubscribe();\n    }\n    if (this._valueChangesSubs) {\n      this._valueChangesSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * Method that gets executed every time there is a scroll event\n   * Calls the scroll observable\n   */\n  handleScroll(event: Event): void {\n    const element: HTMLElement = <HTMLElement>event.target;\n    if (element) {\n      const horizontalScroll: number = element.scrollLeft;\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\n        this._onHorizontalScroll.next(horizontalScroll);\n      }\n      const verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._onVerticalScroll.next(verticalScroll);\n      }\n    }\n  }\n\n  /**\n   * Returns the width needed for the columns via index\n   */\n  getColumnWidth(index: number): number {\n    if (this._widths[index]) {\n      return this._widths[index].value;\n    }\n    return undefined;\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n  getTemplateRef(name: string): TemplateRef<any> {\n    return this._templateMap.get(name);\n  }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this.value.splice(0, this.value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n    this._calculateWidths();\n    this._calculateCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  _selectAll(checked: boolean): void {\n    const toggledRows: any[] = [];\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this.value.push(row);\n          // checking which ones are being toggled\n          toggledRows.push(row);\n        }\n      });\n      this._allSelected = true;\n      this._indeterminate = true;\n    } else {\n      this._data.forEach((row: any) => {\n        // checking which ones are being toggled\n        if (this.isRowSelected(row)) {\n          toggledRows.push(row);\n          const modelRow: any = this.value.filter((val: any) => {\n            return this.compareWith(row, val);\n          })[0];\n          const index: number = this.value.indexOf(modelRow);\n          if (index > -1) {\n            this.value.splice(index, 1);\n          }\n        }\n      });\n      this._allSelected = false;\n      this._indeterminate = false;\n    }\n    this.selectAll.emit({ rows: toggledRows, selected: checked });\n    this.onChange(this.value);\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // compare items by [compareWith] function\n    return this.value\n      ? this.value.filter((val: any) => {\n          return this.compareWith(row, val);\n        }).length > 0\n      : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n   * handles cntrl clicks and shift clicks for multi-select\n   */\n  select(row: any, event: Event, currentSelected: number): void {\n    if (this.selectable) {\n      this.blockEvent(event);\n      // Check to see if Shift key is selected and need to select everything in between\n      const mouseEvent: MouseEvent = event as MouseEvent;\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n        let firstIndex: number = currentSelected;\n        let lastIndex: number = this._lastSelectedIndex;\n        if (currentSelected > this._lastSelectedIndex) {\n          firstIndex = this._lastSelectedIndex;\n          lastIndex = currentSelected;\n        }\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n        // else the checkboxes clicked are all after the initial one\n        if (\n          (this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n          (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)\n        ) {\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            if (this._firstSelectedIndex !== i) {\n              this._doSelection(this._data[i], i);\n            }\n          }\n        } else if (this._firstSelectedIndex > currentSelected || this._firstSelectedIndex < currentSelected) {\n          // change indexes depending on where the next checkbox is selected (before or after)\n          if (this._firstSelectedIndex > currentSelected) {\n            lastIndex--;\n          } else if (this._firstSelectedIndex < currentSelected) {\n            firstIndex++;\n          }\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            const rowSelected: boolean = this.isRowSelected(this._data[i]);\n            // if row is selected and first checkbox was selected\n            // or if row was unselected and first checkbox was unselected\n            // we ignore the toggle\n            if ((this._firstCheckboxValue && !rowSelected) || (!this._firstCheckboxValue && rowSelected)) {\n              this._doSelection(this._data[i], i);\n            } else if (\n              this._shiftPreviouslyPressed &&\n              ((currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex))\n            ) {\n              // else if the checkbox selected was in the middle of the last selection and the first selection\n              // then we undo the selections\n              this._doSelection(this._data[i], i);\n            }\n          }\n        }\n        this._shiftPreviouslyPressed = true;\n        // if shift wasnt pressed, then we take the element checked as the first row\n        // incase the next click uses shift\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\n        this._shiftPreviouslyPressed = false;\n        this._firstSelectedIndex = currentSelected;\n      }\n      this._lastSelectedIndex = currentSelected;\n    }\n  }\n\n  /**\n   * Overrides the onselectstart method of the document so other text on the page\n   * doesn't get selected when doing shift selections.\n   */\n  disableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = function(): boolean {\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Resets the original onselectstart method.\n   */\n  enableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = undefined;\n    }\n  }\n\n  /**\n   * emits the onRowClickEvent when a row is clicked\n   * if clickable is true and selectable is false then select the row\n   */\n  handleRowClick(row: any, index: number, event: Event): void {\n    if (this.clickable) {\n      // ignoring linting rules here because attribute it actually null or not there\n      // can't check for undefined\n      const srcElement: any = event.srcElement || event.currentTarget;\n      const element: HTMLElement = event.target as HTMLElement;\n      /* tslint:disable-next-line */\n      if (srcElement.getAttribute('stopRowClick') === null && element.tagName.toLowerCase() !== 'mat-pseudo-checkbox') {\n        this.rowClick.emit({\n          row,\n          index,\n        });\n      }\n    }\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder =\n        this._sortOrder === TdDataTableSortingOrder.Ascending\n          ? TdDataTableSortingOrder.Descending\n          : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.sortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Handle all keyup events when focusing a data table row\n   */\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        /** if user presses enter or space, the row should be selected */\n        if (this.selectable) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case UP_ARROW:\n        /**\n         * if users presses the up arrow, we focus the prev row\n         * unless its the first row\n         */\n        if (index > 0) {\n          this._rows.toArray()[index - 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case DOWN_ARROW:\n        /**\n         * if users presses the down arrow, we focus the next row\n         * unless its the last row\n         */\n        if (index < this._rows.toArray().length - 1) {\n          this._rows.toArray()[index + 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Sets column index of the dragged column and initial clientX of column\n   */\n  _handleStartColumnDrag(index: number, event: MouseEvent): void {\n    this._columnClientX = event.clientX;\n    this._resizingColumn = index;\n  }\n\n  /**\n   * Calculates new width depending on new clientX of dragger column\n   */\n  _handleColumnDrag(event: MouseEvent | DragEvent): void {\n    // check if there was been a separator clicked for resize\n    if (this._resizingColumn !== undefined && event.clientX > 0) {\n      const xPosition: number = event.clientX;\n      // checks if the separator is being moved to try and resize the column, else dont do anything\n      if (xPosition > 0 && this._columnClientX > 0 && xPosition - this._columnClientX !== 0) {\n        // calculate the new width depending if making the column bigger or smaller\n        let proposedManualWidth: number = this._widths[this._resizingColumn].value + (xPosition - this._columnClientX);\n        // if the proposed new width is less than the projected min width of the column, use projected min width\n        if (proposedManualWidth < this._colElements.toArray()[this._resizingColumn].projectedWidth) {\n          proposedManualWidth = this._colElements.toArray()[this._resizingColumn].projectedWidth;\n        }\n        this.columns[this._resizingColumn].width = proposedManualWidth;\n        // update new x position for the resized column\n        this._onColumnResize.next(xPosition);\n      }\n    }\n  }\n\n  /**\n   * Ends dragged flags\n   */\n  _handleEndColumnDrag(): void {\n    this._columnClientX = undefined;\n    this._resizingColumn = undefined;\n  }\n\n  /**\n   * Method to prevent the default events\n   */\n  blockEvent(event: Event): void {\n    event.preventDefault();\n  }\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      const splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n  /**\n   * Does the actual Row Selection\n   */\n  private _doSelection(row: any, rowIndex: number): boolean {\n    const wasSelected: boolean = this.isRowSelected(row);\n    if (!wasSelected) {\n      if (!this._multiple) {\n        this.clearModel();\n      }\n      this.value.push(row);\n    } else {\n      // compare items by [compareWith] function\n      row = this.value.filter((val: any) => {\n        return this.compareWith(row, val);\n      })[0];\n      const index: number = this.value.indexOf(row);\n      if (index > -1) {\n        this.value.splice(index, 1);\n      }\n    }\n    this._calculateCheckboxState();\n    this.rowSelect.emit({ row, index: rowIndex, selected: !wasSelected });\n    this.onChange(this.value);\n    return !wasSelected;\n  }\n\n  /**\n   * Calculate all the state of all checkboxes\n   */\n  private _calculateCheckboxState(): void {\n    if (this._data) {\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\n      this._indeterminate = false;\n      for (const row of this._data) {\n        if (!this.isRowSelected(row)) {\n          continue;\n        }\n        this._indeterminate = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Calculates the widths for columns and cells depending on content\n   */\n  private _calculateWidths(): void {\n    if (this._colElements && this._colElements.length) {\n      this._widths = [];\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\n        this._adjustColumnWidth(index, this._calculateWidth());\n      });\n      this._adjustColumnWidhts();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Adjusts columns after calculation to see if they need to be recalculated.\n   */\n  private _adjustColumnWidhts(): void {\n    let fixedTotalWidth: number = 0;\n    // get the number of total columns that have flexible widths (not fixed or hidden)\n    const flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\n      if (this.columns[index].hidden) {\n        return false;\n      }\n      if (width.limit || width.max || width.min) {\n        fixedTotalWidth += width.value;\n      }\n      return !width.limit && !width.max && !width.min;\n    }).length;\n    // calculate how much pixes are left that could be spread across\n    // the flexible columns\n    let recalculateHostWidth: number = 0;\n    if (fixedTotalWidth < this.hostWidth) {\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n    }\n    // if we have flexible columns and pixels to spare on them\n    // we try and spread the pixels across them\n    if (flexibleWidths && recalculateHostWidth) {\n      const newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\n      let adjustedNumber: number = 0;\n      // adjust the column widths with the spread pixels\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\n        if (\n          (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue) ||\n          (this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue) ||\n          !this._widths[colWidth.index].limit\n        ) {\n          this._adjustColumnWidth(colWidth.index, newValue);\n          adjustedNumber++;\n        }\n      });\n      // if there are still columns that need to be recalculated, we start over\n      const newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\n        return !width.limit && !width.max;\n      }).length;\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\n        this._adjustColumnWidhts();\n      }\n    }\n  }\n\n  /**\n   * Adjusts a single column to see if it can be recalculated\n   */\n  private _adjustColumnWidth(index: number, value: number): void {\n    this._widths[index] = {\n      value,\n      index,\n      limit: false,\n      min: false,\n      max: false,\n    };\n    // flag to see if we need to skip the min width projection\n    // depending if a width or min width has been provided\n    let skipMinWidthProjection: boolean = false;\n    if (this.columns[index]) {\n      // if the provided width has min/max, then we check to see if we need to set it\n      if (typeof this.columns[index].width === 'object') {\n        const widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\n        // if the column width is less than the configured min, we override it\n        skipMinWidthProjection = widthOpts && !!widthOpts.min;\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\n          this._widths[index].value = widthOpts.min;\n          this._widths[index].min = true;\n          // if the column width is more than the configured max, we override it\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n          this._widths[index].value = widthOpts.max;\n          this._widths[index].max = true;\n        }\n        // if it has a fixed width, then we just set it\n      } else if (typeof this.columns[index].width === 'number') {\n        this._widths[index].value = <number>this.columns[index].width;\n        skipMinWidthProjection = this._widths[index].limit = true;\n      }\n    }\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\n    if (!skipMinWidthProjection && this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n      this._widths[index].min = true;\n      this._widths[index].limit = false;\n    }\n  }\n\n  /**\n   * Generic method to calculate column width\n   */\n  private _calculateWidth(): number {\n    const renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\n    return Math.floor(this.hostWidth / renderedColumns.length);\n  }\n\n  /**\n   * Method to calculate the rows to be rendered in the viewport\n   */\n  private _calculateVirtualRows(): void {\n    let scrolledRows: number = 0;\n    if (this._data) {\n      this._totalHeight = 0;\n      let rowHeightSum: number = 0;\n      // loop through all rows to see if we have their height cached\n      // and sum them all to calculate the total height\n      this._data.forEach((d: any, i: number) => {\n        // iterate through all rows at first and assume all\n        // rows are the same height as the first one\n        if (!this._rowHeightCache[i]) {\n          this._rowHeightCache[i] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n        }\n        rowHeightSum += this._rowHeightCache[i];\n        // check how many rows have been scrolled\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\n          scrolledRows++;\n        }\n      });\n      this._totalHeight = rowHeightSum;\n      // set the initial row to be rendered taking into account the row offset\n      const fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n\n      let hostHeight: number = this._hostHeight;\n      let index: number = 0;\n      // calculate how many rows can fit in the viewport\n      while (hostHeight > 0) {\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\n        index++;\n      }\n      // set the last row to be rendered taking into account the row offset\n      const range: number = index - 1 + TD_VIRTUAL_OFFSET * 2;\n      let toRow: number = range + this.fromRow;\n      // if last row is greater than the total length, then we use the total length\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    // calculate the proper offset depending on how many rows have been scrolled\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\n      for (let index: number = 0; index < this.fromRow; index++) {\n        offset += this._rowHeightCache[index];\n      }\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle(\n      'translateY(' + (offset - this.totalHeight) + 'px)',\n    );\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Renderer2,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  ViewChild,\n} from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.scss'],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', { read: ElementRef, static: true }) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input() name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input() sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input() active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input() numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    const sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ? TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output() sortChange: EventEmitter<ITdDataTableSortChangeEvent> = new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click')\n  handleClick(): void {\n    if (this.sortable) {\n      this.sortChange.emit({ name: this.name, order: this._sortOrder });\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n}\n","import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\n\nexport type TdDataTableCellAlign = 'start' | 'center' | 'end';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td[td-data-table-cell]',\n  styleUrls: ['./data-table-cell.component.scss'],\n  templateUrl: './data-table-cell.component.html',\n})\nexport class TdDataTableCellComponent {\n  private _align: TdDataTableCellAlign;\n\n  /**\n   * numeric?: boolean\n   * Makes cell follow the numeric data-table specs.\n   * Defaults to 'false'\n   */\n  @Input() numeric: boolean = false;\n\n  /**\n   * align?: 'start' | 'center' | 'end'\n   * Makes cell content align on demand\n   * Defaults to 'left', overrides numeric\n   */\n  @Input()\n  set align(align: TdDataTableCellAlign) {\n    this._align = align;\n  }\n  get align(): TdDataTableCellAlign {\n    return this._align;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n  }\n}\n","import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'table[td-data-table]',\n  styleUrls: ['./data-table-table.component.scss'],\n  templateUrl: './data-table-table.component.html',\n})\nexport class TdDataTableTableComponent {\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nimport { TdDataTableComponent } from './data-table.component';\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nconst TD_DATA_TABLE: Type<any>[] = [\n  TdDataTableComponent,\n  TdDataTableTemplateDirective,\n\n  TdDataTableColumnComponent,\n  TdDataTableCellComponent,\n  TdDataTableRowComponent,\n  TdDataTableColumnRowComponent,\n  TdDataTableTableComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, MatTooltipModule, MatIconModule, MatPseudoCheckboxModule],\n  declarations: [TD_DATA_TABLE],\n  exports: [TD_DATA_TABLE],\n})\nexport class CovalentDataTableModule {}\n","import { Injectable } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TdDataTableService {\n  /**\n   * params:\n   * - data: any[]\n   * - searchTerm: string\n   * - ignoreCase: boolean = false\n   * - excludedColumns: string[] = []\n   *\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n   */\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\n    const filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n    if (filter) {\n      data = data.filter((item: any) => {\n        const res: any = Object.keys(item).find((key: string) => {\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n            const preItemValue: string = '' + item[key];\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n            return itemValue.indexOf(filter) > -1;\n          }\n        });\n        return typeof res !== 'undefined';\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - sortBy: string\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n   *\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n   */\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\n    if (sortBy) {\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n      data.sort((a: any, b: any) => {\n        const compA: any = a[sortBy];\n        const compB: any = b[sortBy];\n        let direction: number = 0;\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n        } else {\n          if (compA < compB) {\n            direction = -1;\n          } else if (compA > compB) {\n            direction = 1;\n          }\n        }\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - fromRow: number\n   * - toRow: : number\n   *\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n   */\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\n    if (fromRow >= 1) {\n      data = data.slice(fromRow - 1, toRow);\n    }\n    return data;\n  }\n}\n","import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({ selector: 'td-dialog-title' })\nexport class TdDialogTitleDirective {}\n\n@Directive({ selector: 'td-dialog-content' })\nexport class TdDialogContentDirective {}\n\n@Directive({ selector: 'td-dialog-actions' })\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class TdDialogComponent implements AfterContentInit {\n  @ContentChildren(TdDialogTitleDirective, { descendants: true }) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective, { descendants: true }) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective, { descendants: true }) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss'],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  styleUrls: ['./prompt-dialog.component.scss'],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input', { static: true }) _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close();\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport {\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n} from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatDialogModule, MatInputModule, MatButtonModule],\n  declarations: [TD_DIALOGS],\n  exports: [TD_DIALOGS],\n  entryComponents: [TD_DIALOGS_ENTRY_COMPONENTS],\n})\nexport class CovalentDialogsModule {}\n","import {\n  Injectable,\n  ViewContainerRef,\n  Provider,\n  SkipSelf,\n  Optional,\n  Inject,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\nimport { DragDrop, DragRef } from '@angular/cdk/drag-drop';\nimport { DOCUMENT } from '@angular/common';\nimport { CovalentDialogsModule } from '../dialogs.module';\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\nexport interface IDraggableConfig<T> {\n  component: ComponentType<T>;\n  config?: MatDialogConfig;\n  // CSS selectors of element(s) inside the component meant to be drag handle(s)\n  dragHandleSelectors?: string[];\n  // Class that will be added to the component signifying drag-ability\n  draggableClass?: string;\n}\n\n@Injectable({\n  providedIn: CovalentDialogsModule,\n})\nexport class TdDialogService {\n  private _renderer2: Renderer2;\n\n  constructor(\n    @Inject(DOCUMENT) private _document: any,\n    private _dialogService: MatDialog,\n    private _dragDrop: DragDrop,\n    private rendererFactory: RendererFactory2,\n  ) {\n    this._renderer2 = rendererFactory.createRenderer(undefined, undefined);\n  }\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdAlertDialogComponent> = this._dialogService.open(\n      TdAlertDialogComponent,\n      dialogConfig,\n    );\n    const alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdConfirmDialogComponent> = this._dialogService.open(\n      TdConfirmDialogComponent,\n      dialogConfig,\n    );\n    const confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    const dialogConfig: MatDialogConfig = this._createConfig(config);\n    const dialogRef: MatDialogRef<TdPromptDialogComponent> = this._dialogService.open(\n      TdPromptDialogComponent,\n      dialogConfig,\n    );\n    const promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * Opens a draggable dialog containing the given component.\n   */\n  public openDraggable<T>({\n    component,\n    config,\n    dragHandleSelectors,\n    draggableClass,\n  }: IDraggableConfig<T>): MatDialogRef<T> {\n    const dialogRef: MatDialogRef<T, any> = this._dialogService.open(component, config);\n\n    const CDK_OVERLAY_PANE_SELECTOR: string = '.cdk-overlay-pane';\n    const CDK_OVERLAY_CONTAINER_SELECTOR: string = '.cdk-overlay-container';\n\n    dialogRef.afterOpened().subscribe(() => {\n      const dialogElement: HTMLElement = <HTMLElement>this._document.getElementById(dialogRef.id);\n      const draggableElement: DragRef = this._dragDrop.createDrag(dialogElement);\n\n      if (draggableClass) {\n        const childComponent: Element = dialogElement.firstElementChild;\n        this._renderer2.addClass(childComponent, draggableClass);\n      }\n\n      if (dragHandleSelectors && dragHandleSelectors.length) {\n        const dragHandles: Element[] = dragHandleSelectors.reduce(\n          (acc: Element[], curr: string) => [...acc, ...Array.from(dialogElement.querySelectorAll(curr))],\n          [],\n        );\n        if (dragHandles.length > 0) {\n          draggableElement.withHandles(<HTMLElement[]>dragHandles);\n        }\n      }\n\n      const rootElement: Element = dialogElement.closest(CDK_OVERLAY_PANE_SELECTOR);\n      if (rootElement) {\n        draggableElement.withRootElement(<HTMLElement>rootElement);\n      }\n      const boundaryElement: Element = dialogElement.closest(CDK_OVERLAY_CONTAINER_SELECTOR);\n      if (boundaryElement) {\n        draggableElement.withBoundaryElement(<HTMLElement>boundaryElement);\n      }\n    });\n\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    const dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n  ContentChild,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  tdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  tdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styleUrls: ['./expansion-panel.component.scss'],\n  templateUrl: './expansion-panel.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  animations: [tdCollapseAnimation, tdRotateAnimation],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective, { static: false })\n  expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective, { static: false }) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective, { static: false })\n  expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit();\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit();\n  }\n}\n","import {\n  Component,\n  Renderer2,\n  ElementRef,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { TdExpansionPanelComponent } from './expansion-panel.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styleUrls: ['./expansion-panel-group.component.scss'],\n  templateUrl: './expansion-panel-group.component.html',\n})\nexport class TdExpansionPanelGroupComponent implements AfterContentInit, OnDestroy {\n  private _multi: boolean = false;\n\n  private _lastOpenedPanels: TdExpansionPanelComponent[] = [];\n\n  private _destroyed: Subject<boolean> = new Subject<boolean>();\n  private _stopWatchingPanels: Subject<boolean> = new Subject<boolean>();\n\n  /**\n   * multi?: boolean\n   * Sets whether multiple panels can be opened at a given time.\n   * Set to false for accordion mode.\n   * Defaults to false.\n   */\n  @Input('multi')\n  set multi(multi: boolean) {\n    this._multi = coerceBooleanProperty(multi);\n    if (this._multi === false && this._lastOpenedPanels.length > 0) {\n      this._closeAllExcept(this._lastOpenedPanels[this._lastOpenedPanels.length - 1]);\n    }\n  }\n\n  @ContentChildren(TdExpansionPanelComponent, { descendants: true }) expansionPanels: QueryList<\n    TdExpansionPanelComponent\n  >;\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel-group');\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next(true);\n    this._destroyed.unsubscribe();\n    this._stopWatchingPanels.next(true);\n    this._stopWatchingPanels.unsubscribe();\n  }\n\n  public ngAfterContentInit(): void {\n    if (!this._multi) {\n      const openedPanels: TdExpansionPanelComponent[] = this.expansionPanels.filter(\n        (expansionPanel: TdExpansionPanelComponent) => expansionPanel.expand,\n      );\n      const numOpenedPanels: number = openedPanels.length;\n      if (numOpenedPanels > 1) {\n        this._closeAllExcept(openedPanels[numOpenedPanels - 1]);\n      }\n    }\n\n    this._attachListeners(this.expansionPanels);\n\n    this.expansionPanels.changes\n      .pipe(takeUntil(this._destroyed))\n      .subscribe((expansionPanels: QueryList<TdExpansionPanelComponent>) => {\n        this._stopWatchingPanels.next(true);\n        this._stopWatchingPanels.unsubscribe();\n        this._stopWatchingPanels = new Subject<boolean>();\n        this._attachListeners(expansionPanels);\n      });\n  }\n\n  /**\n   * Opens all expansion panels, only if multi set set to true.\n   */\n  public openAll(): void {\n    if (this._multi) {\n      this.expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n        expansionPanel.open();\n      });\n    }\n  }\n\n  /**\n   * Closes all expansion panels\n   */\n  public closeAll(): void {\n    this.expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.close();\n    });\n  }\n\n  private _attachListeners(expansionPanels: QueryList<TdExpansionPanelComponent>): void {\n    this._lastOpenedPanels = [];\n    expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.expanded.pipe(takeUntil(this._stopWatchingPanels)).subscribe(() => {\n        const indexOfPanel: number = this._lastOpenedPanels.indexOf(expansionPanel);\n        if (indexOfPanel !== -1) {\n          this._lastOpenedPanels.splice(indexOfPanel, 1);\n        }\n        this._lastOpenedPanels.push(expansionPanel);\n\n        if (!this._multi) {\n          this._closeAllExcept(expansionPanel);\n        }\n      });\n\n      expansionPanel.collapsed.pipe(takeUntil(this._stopWatchingPanels)).subscribe(() => {\n        const indexOfPanel: number = this._lastOpenedPanels.indexOf(expansionPanel);\n        if (indexOfPanel !== -1) {\n          this._lastOpenedPanels.splice(indexOfPanel, 1);\n        }\n      });\n    });\n  }\n\n  private _closeAllExcept(expansionPanel: TdExpansionPanelComponent): void {\n    this.expansionPanels.forEach((panel: TdExpansionPanelComponent) => {\n      if (panel !== expansionPanel) {\n        panel.close();\n      }\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport {\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n} from './expansion-panel.component';\nimport { TdExpansionPanelGroupComponent } from './expansion-panel-group.component';\n\nconst TD_EXPANSION_PANEL: Type<any>[] = [\n  TdExpansionPanelGroupComponent,\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatRippleModule, MatIconModule, PortalModule],\n  declarations: [TD_EXPANSION_PANEL],\n  exports: [TD_EXPANSION_PANEL],\n})\nexport class CovalentExpansionPanelModule {}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output() fileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {}\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'fileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'fileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      const fileInputEl: HTMLInputElement = event.target;\n      const files: FileList = fileInputEl.files;\n      if (files.length) {\n        const value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.fileSelect.emit(value);\n      }\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output() fileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'fileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      const transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      const files: FileList = transfer.files;\n      if (files.length) {\n        const value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.fileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    const transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (\n      this.disabled ||\n      (!this._multiple && ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))\n    ) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (\n      types &&\n      (((<any>types).contains && (<any>types).contains('Files')) ||\n        ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1))\n    ) {\n      dropEffect = 'copy';\n    }\n\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput', { static: true }) _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input() color: 'accent' | 'primary' | 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input() accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output() select: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.select.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n  /**\n   * Sets disable to the component. Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ContentChild,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileUploadComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent, { static: false }) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective, { static: false }) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: 'accent' | 'primary' | 'warn'\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input() defaultColor: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * activeColor?: 'accent' | 'primary' | 'warn'\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input() activeColor: 'accent' | 'primary' | 'warn' = 'accent';\n\n  /**\n   * cancelColor?: 'accent' | 'primary' | 'warn'\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input() cancelColor: 'accent' | 'primary' | 'warn' = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input() accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output() select: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output() upload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.upload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.select.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  _cancel(): void {\n    this.value = undefined;\n    this.cancel.emit();\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this._cancel();\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatIconModule, MatButtonModule, PortalModule],\n  declarations: [TD_FILE],\n  exports: [TD_FILE],\n})\nexport class CovalentFileModule {}\n","import { Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent, HttpEventType, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject, Subscriber } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CovalentFileModule } from '../file.module';\n/**\n * @deprecated should be removed in favor of IUploadInit\n * @breaking-change 3.0.0\n */\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: { [key: string]: string };\n  formData?: FormData;\n}\n\nexport interface IUploadExtras {\n  headers?: { [name: string]: string | string[] };\n  params?: { [param: string]: string | string[] };\n}\n\n@Injectable({\n  providedIn: CovalentFileModule,\n})\nexport class TdFileService {\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  /**\n   * Creates a new instance\n   * @param _http the http client instance\n   * @breaking-change 3.0.0 remove 'Optional' decorator once the legay upload method is removed\n   */\n  constructor(@Optional() private readonly _http: HttpClient) {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * Uploads a file to URL.\n   */\n  send(\n    url: string,\n    method: string,\n    body: File | FormData,\n    { headers, params }: IUploadExtras = {},\n  ): Observable<HttpEvent<any>> {\n    if (!this._http) {\n      throw new Error('The HttpClient module needs to be imported at root module level');\n    }\n    const req: HttpRequest<File | FormData> = new HttpRequest(method.toUpperCase(), url, body, {\n      reportProgress: true,\n      headers: new HttpHeaders(headers || {}),\n      params: new HttpParams({ fromObject: params || {} }),\n    });\n    return this._http.request(req).pipe(tap((event: HttpEvent<any>) => this.handleEvent(event)));\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * @deprecated use send instead\n   * @breaking-change 3.0.0\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      const xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round((event.loaded / event.total) * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (const key of Object.keys(options.headers)) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n\n  private handleEvent<T = any>(event: HttpEvent<T>): void {\n    switch (event.type) {\n      case HttpEventType.Sent:\n        this._progressSubject.next(0);\n        break;\n      case HttpEventType.UploadProgress:\n        this._progressSubject.next(Math.round((100 * event.loaded) / event.total));\n        break;\n      case HttpEventType.Response:\n        this._progressSubject.next(100);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styleUrls: ['./json-formatter.component.scss'],\n  templateUrl: './json-formatter.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdJsonFormatterComponent {\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    const elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? 'â¦' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, @Optional() private _dir: Dir) {}\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    const type: string = this.getType(value);\n    if (type === 'undefined' || type === 'null') {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return (\n        value\n          .toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{â¦}'\n      );\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      const date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]' && !Number.isNaN(date.getTime())) {\n        return 'date';\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    const object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n      return 'Object';\n    }\n    const funcNameRegex: RegExp = /function (.{1,})\\(/;\n    const results: RegExpExecArray = funcNameRegex.exec(object.constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      const previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      const previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    const previewString: string = previewData.join(', ');\n    const ellipsis: string =\n      previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n      previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH\n        ? 'â¦'\n        : '';\n    return (\n      startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) + ellipsis + endChar\n    );\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (const key of Object.keys(this._data)) {\n        this._children.push(key);\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [CommonModule, MatTooltipModule, MatIconModule],\n  declarations: [TdJsonFormatterComponent],\n  exports: [TdJsonFormatterComponent],\n})\nexport class CovalentJsonFormatterModule {}\n","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss'],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase {}\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable, private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n  @Input('tdLayoutToggle')\n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  @Input('tdLayoutClose')\n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n  @Input('tdLayoutOpen')\n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss'],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss'],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutNavListToggle')\n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutNavListClose')\n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutNavListOpen')\n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss'],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input() cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input() cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input() cardWidth: number = 70;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss'],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutManageListToggle')\n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutManageListClose')\n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutManageListOpen')\n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss'],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ContentChildren,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  Inject,\n  QueryList,\n  SecurityContext,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss'],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective, { descendants: true }) _drawerMenu: QueryList<\n    TdNavigationDrawerMenuDirective\n  >;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective, { descendants: true }) _toolbar: QueryList<\n    TdNavigationDrawerToolbarDirective\n  >;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input() sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * avatar?: string\n   *\n   * avatar url to be displayed before the title\n   * If [icon] or [logo] are set, then this will not be shown.\n   */\n  @Input() avatar: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      const sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input() name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input() email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n    @Optional() private _router: Router,\n    private _sanitize: DomSanitizer,\n  ) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [TD_LAYOUTS],\n  exports: [TD_LAYOUTS],\n})\nexport class CovalentLayoutModule {}\n","import {\n  Component,\n  ViewChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  DoCheck,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Observable, Subject } from 'rxjs';\n\nexport enum LoadingType {\n  Circular = 'circular',\n  Linear = 'linear',\n}\n\nexport enum LoadingMode {\n  Determinate = 'determinate',\n  Indeterminate = 'indeterminate',\n}\n\nexport enum LoadingStrategy {\n  Overlay = 'overlay',\n  Replace = 'replace',\n}\n\nexport enum LoadingStyle {\n  FullScreen = 'fullscreen',\n  Overlay = 'overlay',\n  None = 'none',\n}\n\nimport { tdFadeInOutAnimation } from '@covalent/core/common';\n\nexport const TD_CIRCLE_DIAMETER: number = 100;\n\n@Component({\n  selector: 'td-loading',\n  styleUrls: ['./loading.component.scss'],\n  templateUrl: './loading.component.html',\n  animations: [tdFadeInOutAnimation],\n})\nexport class TdLoadingComponent implements DoCheck {\n  private _animationIn: Subject<any> = new Subject<any>();\n  private _animationOut: Subject<any> = new Subject<any>();\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\n  private _value: number = 0;\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\n\n  /**\n   * Flag for animation\n   */\n  animation: boolean = false;\n\n  /**\n   * Content injected into loading component.\n   */\n  content: TemplatePortal<any>;\n\n  /**\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\n   */\n  set mode(mode: LoadingMode) {\n    this._defaultMode = mode;\n  }\n  get mode(): LoadingMode {\n    return this._mode;\n  }\n\n  /**\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\n   */\n  set value(value: number) {\n    this._value = value;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  style: LoadingStyle = LoadingStyle.None;\n\n  /**\n   * height: number\n   * Sets height of [TdLoadingComponent].\n   */\n  height: number;\n\n  /**\n   * type: LoadingType\n   * Sets type of [TdLoadingComponent] rendered.\n   */\n  type: LoadingType = LoadingType.Circular;\n\n  /**\n   * color: primary' | 'accent' | 'warn'\n   * Sets theme color of [TdLoadingComponent] rendered.\n   */\n  color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck(): void {\n    // When overlay is used and the host width has a value greater than 1px\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\n    if (this.isOverlay() && this._hostHeight() > 1 && this.animation) {\n      this._setCircleDiameter();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  getHeight(): string {\n    // Ignore height if style is `overlay` or `fullscreen`.\n    // Add height if child elements have a height and style is `none`, else return default height.\n    if (this.isOverlay() || this.isFullScreen()) {\n      return undefined;\n    } else {\n      return this.height ? `${this.height}px` : '150px';\n    }\n  }\n\n  getCircleDiameter(): number {\n    return this._circleDiameter;\n  }\n\n  getCircleStrokeWidth(): number {\n    // we calculate the stroke width by setting it as 10% of its diameter\n    const strokeWidth: number = this.getCircleDiameter() / 10;\n    return Math.abs(strokeWidth);\n  }\n\n  isCircular(): boolean {\n    return this.type === LoadingType.Circular;\n  }\n\n  isLinear(): boolean {\n    return this.type === LoadingType.Linear;\n  }\n\n  isFullScreen(): boolean {\n    return this.style === LoadingStyle.FullScreen;\n  }\n\n  isOverlay(): boolean {\n    return this.style === LoadingStyle.Overlay;\n  }\n\n  animationComplete(event: AnimationEvent): void {\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\n    if (!event.fromState) {\n      this.inAnimationCompleted();\n    } else {\n      this.outAnimationCompleted();\n    }\n  }\n\n  inAnimationCompleted(): void {\n    this._animationIn.next();\n  }\n\n  outAnimationCompleted(): void {\n    /* little hack to reset the loader value and animation before removing it from DOM\n     * else, the loader will appear with prev value when its registered again\n     * and will do an animation going prev value to 0.\n     */\n    this.value = 0;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    this._animationOut.next();\n  }\n\n  /**\n   * Starts in animation and returns an observable for completition event.\n   */\n  startInAnimation(): Observable<any> {\n    /* need to switch back to the selected mode, so we have saved it in another variable\n     *  and then recover it. (issue with protractor)\n     */\n    this._mode = this._defaultMode;\n    // Set values before the animations starts\n    this._setCircleDiameter();\n    // Check for changes for `OnPush` change detection\n    this.animation = true;\n    this._changeDetectorRef.markForCheck();\n    return this._animationIn.asObservable();\n  }\n\n  /**\n   * Starts out animation and returns an observable for completition event.\n   */\n  startOutAnimation(): Observable<any> {\n    this.animation = false;\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\n     * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\n     */\n    this._mode = LoadingMode.Determinate;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    return this._animationOut.asObservable();\n  }\n\n  /**\n   * Calculate the proper diameter for the circle and set it\n   */\n  private _setCircleDiameter(): void {\n    // we set a default diameter of 100 since this is the default in material\n    let diameter: number = TD_CIRCLE_DIAMETER;\n    // if height is provided, then we take that as diameter\n    if (this.height) {\n      diameter = this.height;\n      // else if its not provided, then we take the host height\n    } else if (this.height === undefined) {\n      diameter = this._hostHeight();\n    }\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\n      this._circleDiameter = Math.floor(diameter);\n    } else {\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\n    }\n  }\n\n  /**\n   * Returns the host height of the loading component\n   */\n  private _hostHeight(): number {\n    if (<HTMLElement>this._elementRef.nativeElement) {\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return 0;\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ChangeDetectorRef,\n  Provider,\n  SkipSelf,\n  Optional,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingStyle } from '../loading.component';\nimport { ITdLoadingConfig } from './loading.service';\n\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\n  height?: number;\n  style?: LoadingStyle;\n}\n\nexport interface ILoadingRef {\n  observable: Observable<any>;\n  componentRef: ComponentRef<any>;\n  subject?: Subject<any>;\n  times?: number;\n}\n\n/**\n * NOTE: @internal usage only.\n */\n@Injectable()\nexport class TdLoadingFactory {\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _overlay: Overlay,\n    private _injector: Injector,\n  ) {}\n\n  /**\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\n   * into it. Leveraging the state and configuration from it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\n    const loadingRef: ILoadingRef = this._initializeContext();\n    let loading: boolean = false;\n    let overlayRef: OverlayRef;\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        overlayRef = this._createOverlay();\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\n        this._mapOptions(options, loadingRef.componentRef.instance);\n        loadingRef.componentRef.instance.startInAnimation();\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        const subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          loadingRef.componentRef.destroy();\n          overlayRef.detach();\n          overlayRef.dispose();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\n   * perfectly when overlaying it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createOverlayComponent(\n    options: ITdLoadingConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<object>,\n  ): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\n    const loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\n    viewContainerRef.clear();\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        loadingRef.componentRef.instance.startOutAnimation();\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Replaces the template with the loading component depending if it was registered or resolved.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createReplaceComponent(\n    options: ITdLoadingConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<object>,\n    context: TdLoadingContext,\n  ): ILoadingRef {\n    const nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling\n      ? nativeElement.nextElementSibling.scrollHeight\n      : undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\n    const loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    // passing context so when the template is attached, we can keep the reference of the variables\n    const contentRef: EmbeddedViewRef<object> = viewContainerRef.createEmbeddedView(templateRef, context);\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        // detach the content and attach the loader if loader is there\n        const index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\n        if (index < 0) {\n          viewContainerRef.detach(viewContainerRef.indexOf(contentRef));\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n        }\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        const subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          // detach loader and attach the content if content is there\n          const index: number = viewContainerRef.indexOf(contentRef);\n          if (index < 0) {\n            viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\n            viewContainerRef.insert(contentRef, 0);\n          }\n          /**\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\n           * with \"OnPush\" change detection\n           */\n          contentRef.detectChanges();\n          contentRef.markForCheck();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a fullscreen overlay for the loading usage.\n   */\n  private _createOverlay(): OverlayRef {\n    const state: OverlayConfig = new OverlayConfig();\n    state.hasBackdrop = false;\n    state.positionStrategy = this._overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n    return this._overlay.create(state);\n  }\n\n  /**\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\n   */\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\n    const compRef: ILoadingRef = this._initializeContext();\n    compRef.componentRef = this._componentFactoryResolver\n      .resolveComponentFactory(TdLoadingComponent)\n      .create(this._injector);\n    this._mapOptions(options, compRef.componentRef.instance);\n    return compRef;\n  }\n\n  /**\n   * Initialize context for loading component.\n   */\n  private _initializeContext(): ILoadingRef {\n    const subject: Subject<any> = new Subject<any>();\n    return {\n      observable: subject.asObservable(),\n      subject,\n      componentRef: undefined,\n      times: 0,\n    };\n  }\n\n  /**\n   * Maps configuration to the loading component instance.\n   */\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\n    instance.style = options.style;\n    if (options.type !== undefined) {\n      instance.type = options.type;\n    }\n    if (options.height !== undefined) {\n      instance.height = options.height;\n    }\n    if (options.mode !== undefined) {\n      instance.mode = options.mode;\n    }\n    if (options.color !== undefined) {\n      instance.color = options.color;\n    }\n  }\n}\n\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\n  parent: TdLoadingFactory,\n  componentFactoryResolver: ComponentFactoryResolver,\n  overlay: Overlay,\n  injector: Injector,\n): TdLoadingFactory {\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\n}\n\nexport const LOADING_FACTORY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingFactory,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\n\nexport interface ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n}\n\nexport class TdLoadingConfig implements ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n\n  constructor(config: ITdLoadingConfig) {\n    this.name = config.name;\n    if (!this.name) {\n      throw Error('Name is required for [TdLoading] configuration.');\n    }\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\n    this.type = config.type ? config.type : LoadingType.Circular;\n    this.color = config.color ? config.color : 'primary';\n  }\n}\n\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\n  strategy?: LoadingStrategy;\n}\n\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\n  name: string;\n  type: LoadingType;\n  mode: LoadingMode;\n  strategy: LoadingStrategy;\n\n  constructor(config: ITdLoadingDirectiveConfig) {\n    super(config);\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\n  }\n}\n\n@Injectable()\nexport class TdLoadingService {\n  private _context: { [key: string]: ILoadingRef } = {};\n  private _timeouts: { [key: string]: any } = {};\n\n  constructor(private _loadingFactory: TdLoadingFactory) {\n    this.create({\n      name: 'td-loading-main',\n    });\n  }\n\n  /**\n   * params:\n   * - config: ILoadingDirectiveConfig\n   * - viewContainerRef: ViewContainerRef\n   * - templateRef: TemplateRef<Object>\n   *\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\n   * Replaces the templateRef with the mask when a request is registered on it.\n   *\n   * NOTE: @internal usage only.\n   */\n  createComponent(\n    config: ITdLoadingDirectiveConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<object>,\n    context: TdLoadingContext,\n  ): ILoadingRef {\n    const directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\n    if (this._context[directiveConfig.name]) {\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\n    }\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(\n        directiveConfig,\n        viewContainerRef,\n        templateRef,\n      );\n    } else {\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(\n        directiveConfig,\n        viewContainerRef,\n        templateRef,\n        context,\n      );\n    }\n    return this._context[directiveConfig.name];\n  }\n\n  /**\n   * params:\n   * - config: ITdLoadingConfig\n   *\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\n   * Only displayed when the mask has a request registered on it.\n   */\n  public create(config: ITdLoadingConfig): void {\n    const fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\n    this.removeComponent(fullscreenConfig.name);\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\n  }\n\n  /**\n   * params:\n   * - name: string\n   *\n   * Removes `loading` component from service context.\n   */\n  public removeComponent(name: string): void {\n    if (this._context[name]) {\n      this._context[name].subject.unsubscribe();\n      if (this._context[name].componentRef) {\n        this._context[name].componentRef.destroy();\n      }\n      this._context[name] = undefined;\n      delete this._context[name];\n    }\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - registers?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass registers argument to set a number of register calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.register()\n   */\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\n    // try registering into the service if the loading component has been instanciated or if it exists.\n    if (this._context[name]) {\n      registers = registers < 1 ? 1 : registers;\n      this._context[name].times += registers;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    } else {\n      // if it doesnt exist, set a timeout so its registered after change detection happens\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\n      if (!this._timeouts[name]) {\n        this._timeouts[name] = setTimeout(() => {\n          this.register(name, registers);\n        });\n      } else {\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\n        this._clearTimeout(name);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - resolves?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass resolves argument to set a number of resolve calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolve()\n   */\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      resolves = resolves < 1 ? 1 : resolves;\n      if (this._context[name].times > 0) {\n        let times: number = this._context[name].times;\n        times -= resolves;\n        this._context[name].times = times < 0 ? 0 : times;\n      }\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * returns: true if successful\n   *\n   * Resolves all request for the loading mask referenced by the name parameter.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolveAll()\n   */\n  public resolveAll(name: string = 'td-loading-main'): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      this._context[name].times = 0;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - value: number\n   * returns: true if successful\n   *\n   * Set value on a loading mask referenced by the name parameter.\n   * Usage only available if its mode is 'determinate' and if loading is showing.\n   */\n  public setValue(name: string, value: number): boolean {\n    if (this._context[name]) {\n      const instance: TdLoadingComponent = this._context[name].componentRef.instance;\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\n        instance.value = value;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Clears timeout linked to the name.\n   * @param name Name of the loading component to be cleared\n   */\n  private _clearTimeout(name: string): void {\n    clearTimeout(this._timeouts[name]);\n    delete this._timeouts[name];\n  }\n}\n\nexport function LOADING_PROVIDER_FACTORY(parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\n  return parent || new TdLoadingService(loadingFactory);\n}\n\nexport const LOADING_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingService,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\n  useFactory: LOADING_PROVIDER_FACTORY,\n};\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\n\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\nimport { TdLoadingService } from '../services/loading.service';\nimport { ILoadingRef } from '../services/loading.factory';\n\n/**\n * Context class for variable reference\n */\nexport class TdLoadingContext {\n  public $implicit: any = undefined;\n  public tdLoading: any = undefined;\n}\n\n// Constant for generation of the id for the next component\nlet TD_LOADING_NEXT_ID: number = 0;\n\n@Directive({\n  selector: '[tdLoading]',\n})\nexport class TdLoadingDirective implements OnInit, OnDestroy {\n  private _context: TdLoadingContext = new TdLoadingContext();\n  private _type: LoadingType;\n  private _mode: LoadingMode;\n  private _strategy: LoadingStrategy;\n  private _name: string;\n  private _loadingRef: ILoadingRef;\n\n  /**\n   * tdLoading: string\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\n   */\n  @Input('tdLoading')\n  set name(name: string) {\n    if (!this._name && name) {\n      this._name = name;\n    }\n  }\n\n  /**\n   * tdLoadingUntil?: any\n   * If its null, undefined or false it will be used to register requests to the mask.\n   * Else if its any value that can be resolved as true, it will resolve the mask.\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\n   */\n  @Input('tdLoadingUntil')\n  set until(until: any) {\n    if (!this._name) {\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\n    }\n    this._context.$implicit = this._context.tdLoading = until;\n    if (!until) {\n      this._loadingService.register(this._name);\n    } else {\n      this._loadingService.resolveAll(this._name);\n    }\n  }\n\n  /**\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\n   * Sets the type of loading mask depending on value.\n   * Defaults to [LoadingType.Circular | 'circular'].\n   */\n  @Input('tdLoadingType')\n  set type(type: LoadingType) {\n    if (type === LoadingType.Linear) {\n      this._type = LoadingType.Linear;\n    } else {\n      this._type = LoadingType.Circular;\n    }\n  }\n\n  /**\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\n   * Sets the mode of loading mask depending on value.\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\n   */\n  @Input('tdLoadingMode')\n  set mode(mode: LoadingMode) {\n    if (mode === LoadingMode.Determinate) {\n      this._mode = LoadingMode.Determinate;\n    } else {\n      this._mode = LoadingMode.Indeterminate;\n    }\n  }\n\n  /**\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\n   * Sets the strategy of loading mask depending on value.\n   * Defaults to [LoadingMode.Replace | 'replace'].\n   */\n  @Input('tdLoadingStrategy')\n  set strategy(strategy: LoadingStrategy) {\n    if (strategy === LoadingStrategy.Overlay) {\n      this._strategy = LoadingStrategy.Overlay;\n    } else {\n      this._strategy = LoadingStrategy.Replace;\n    }\n  }\n\n  /**\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the loading component. Defaults to \"primary\"\n   */\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _templateRef: TemplateRef<TdLoadingContext>,\n    private _loadingService: TdLoadingService,\n  ) {}\n\n  /**\n   * Registers component in the DOM, so it will be available when calling resolve/register.\n   */\n  ngOnInit(): void {\n    this._registerComponent();\n  }\n\n  /**\n   * Remove component when directive is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._loadingService.removeComponent(this._name);\n    this._loadingRef = undefined;\n  }\n\n  /**\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\n   */\n  private _registerComponent(): void {\n    if (!this._name) {\n      throw new Error('Name is needed to register loading directive');\n    }\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\n    if (!this._loadingRef) {\n      this._loadingRef = this._loadingService.createComponent(\n        {\n          name: this._name,\n          type: this._type,\n          mode: this._mode,\n          color: this.color,\n          strategy: this._strategy,\n        },\n        this._viewContainerRef,\n        this._templateRef,\n        this._context,\n      );\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\nimport { TdLoadingDirective } from './directives/loading.directive';\nimport { TdLoadingComponent } from './loading.component';\n\nconst TD_LOADING: Type<any>[] = [TdLoadingComponent, TdLoadingDirective];\n\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [TdLoadingComponent];\n\n@NgModule({\n  imports: [CommonModule, MatProgressBarModule, MatProgressSpinnerModule, OverlayModule, PortalModule],\n  declarations: [TD_LOADING],\n  exports: [TD_LOADING],\n  providers: [LOADING_FACTORY_PROVIDER, LOADING_PROVIDER],\n  entryComponents: [TD_LOADING_ENTRY_COMPONENTS],\n})\nexport class CovalentLoadingModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TdMediaService {\n  private _resizing: boolean = false;\n  private _globalSubscription: Subscription;\n  private _queryMap: Map<string, string> = new Map<string, string>();\n  private _querySources: { [key: string]: BehaviorSubject<boolean> } = {};\n  private _queryObservables: { [key: string]: Observable<boolean> } = {};\n\n  constructor(private _ngZone: NgZone) {\n    this._queryMap.set('xs', '(max-width: 599px)');\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\n    this._queryMap.set('xl', '(min-width: 1920px)');\n    this._queryMap.set('landscape', '(orientation: landscape)');\n    this._queryMap.set('portrait', '(orientation: portrait)');\n    this._queryMap.set('print', 'print');\n\n    this._resizing = false;\n    // we make sure that the resize checking happend outside of Angular since it happens often\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window, 'resize').subscribe(() => {\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\n        if (!this._resizing) {\n          this._resizing = true;\n          setTimeout(() => {\n            this._onResize();\n            this._resizing = false;\n          }, 100);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deregisters a query so its stops being notified or used.\n   */\n  deregisterQuery(query: string): void {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    this._querySources[query].unsubscribe();\n    delete this._querySources[query];\n    delete this._queryObservables[query];\n  }\n\n  /**\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\n   */\n  public query(query: string): boolean {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    return this._ngZone.run(() => {\n      return matchMedia(query).matches;\n    });\n  }\n\n  /**\n   * Registers a media query and returns an [Observable] that will re-evaluate and\n   * return if the given media query matches on window resize.\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\n   */\n  public registerQuery(query: string): Observable<boolean> {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    if (!this._querySources[query]) {\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\n      this._queryObservables[query] = this._querySources[query].asObservable();\n    }\n    return this._queryObservables[query];\n  }\n\n  /**\n   * Trigger a match media event on all subscribed observables.\n   */\n  public broadcast(): void {\n    this._onResize();\n  }\n\n  private _onResize(): void {\n    for (const query of Object.keys(this._querySources)) {\n      this._ngZone.run(() => {\n        this._matchMediaTrigger(query);\n      });\n    }\n  }\n\n  private _matchMediaTrigger(query: string): void {\n    this._querySources[query].next(matchMedia(query).matches);\n  }\n}\n","import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: { [key: string]: string } = {};\n  private _styles: { [key: string]: string } = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) {}\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (const attr in this._attributes) {\n      if (this._matches) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\n      }\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      if (this._matches) {\n        this._renderer.addClass(this._elementRef.nativeElement, className);\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\n      }\n    });\n  }\n\n  private _changeStyles(): void {\n    for (const style in this._styles) {\n      if (this._matches) {\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\n      } else {\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\n      }\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { TdMediaToggleDirective } from './directives/media-toggle.directive';\n\nconst TD_MEDIA: Type<any>[] = [TdMediaToggleDirective];\n\n@NgModule({\n  declarations: [TD_MEDIA],\n  exports: [TD_MEDIA],\n})\nexport class CovalentMediaModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class TdMenuComponent {}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdMenuComponent } from './menu.component';\n\nconst TD_MENU: Type<any>[] = [TdMenuComponent];\n\n@NgModule({\n  imports: [CommonModule, MatMenuModule, MatDividerModule],\n  declarations: [TD_MENU],\n  exports: [TD_MENU],\n})\nexport class CovalentMenuModule {}\n","import {\n  Component,\n  ViewChild,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  Optional,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Dir } from '@angular/cdk/bidi';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\n\nimport { debounceTime, skip } from 'rxjs/operators';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchInputMixinBase = mixinControlValueAccessor(TdSearchInputBase);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdSearchInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('searchState', [\n      state(\n        'hide-left',\n        style({\n          transform: 'translateX(-150%)',\n          display: 'none',\n        }),\n      ),\n      state(\n        'hide-right',\n        style({\n          transform: 'translateX(150%)',\n          display: 'none',\n        }),\n      ),\n      state(\n        'show',\n        style({\n          transform: 'translateX(0%)',\n          display: 'block',\n        }),\n      ),\n      transition('* => show', animate('200ms ease-in')),\n      transition('show => *', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchInputComponent extends _TdSearchInputMixinBase implements IControlValueAccessor, OnInit {\n  @ViewChild(MatInput, { static: true }) _input: MatInput;\n\n  /**\n   * appearance?: MatFormFieldAppearance\n   * Appearance style for the underlying input component.\n   */\n  @Input() appearance: MatFormFieldAppearance;\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input() showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input() debounce: number = 400;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input() placeholder: string;\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input() clearIcon: string = 'cancel';\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output() searchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output() clear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output() blur: EventEmitter<void> = new EventEmitter<void>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._input.ngControl.valueChanges\n      .pipe(\n        debounceTime(this.debounce),\n        skip(1), // skip first change when value is set to undefined\n      )\n      .subscribe((value: string) => {\n        this._searchTermChanged(value);\n      });\n  }\n\n  /**\n   * Method to focus to underlying input.\n   */\n  focus(): void {\n    this._input.focus();\n  }\n\n  handleBlur(): void {\n    this.blur.emit();\n  }\n\n  stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  handleSearch(event: Event): void {\n    this.stopPropagation(event);\n    this.search.emit(this.value);\n  }\n\n  /**\n   * Method to clear the underlying input.\n   */\n  clearSearch(): void {\n    this.value = '';\n    this._changeDetectorRef.markForCheck();\n    this.clear.emit();\n  }\n\n  private _searchTermChanged(value: string): void {\n    this.searchDebounce.emit(value);\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';\n\nimport { TdSearchInputComponent } from '../search-input/search-input.component';\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchBoxBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdSearchBoxComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('inputState', [\n      state(\n        '0',\n        style({\n          width: '0%',\n          margin: '0px',\n        }),\n      ),\n      state(\n        '1',\n        style({\n          width: '100%',\n          margin: AUTO_STYLE,\n        }),\n      ),\n      transition('0 => 1', animate('200ms ease-in')),\n      transition('1 => 0', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {\n  private _searchVisible: boolean = false;\n  @ViewChild(TdSearchInputComponent, { static: true }) _searchInput: TdSearchInputComponent;\n\n  get searchVisible(): boolean {\n    return this._searchVisible;\n  }\n\n  /**\n   * backIcon?: string\n   * The icon used to close the search toggle, only shown when [alwaysVisible] is false.\n   * Defaults to 'search' icon.\n   */\n  @Input() backIcon: string = 'search';\n\n  /**\n   * searchIcon?: string\n   * The icon used to open/focus the search toggle.\n   * Defaults to 'search' icon.\n   */\n  @Input() searchIcon: string = 'search';\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input() clearIcon: string = 'cancel';\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input() showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input() debounce: number = 400;\n\n  /**\n   * alwaysVisible?: boolean\n   * Sets if the input should always be visible. Defaults to 'false'.\n   */\n  @Input() alwaysVisible: boolean = false;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input() placeholder: string;\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output() searchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output() clear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output() blur: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when the search icon is clicked.\n   */\n  searchClicked(): void {\n    if (!this.alwaysVisible && this._searchVisible) {\n      this.value = '';\n      this.handleClear();\n    } else if (this.alwaysVisible || !this._searchVisible) {\n      this._searchInput.focus();\n    }\n    this.toggleVisibility();\n  }\n\n  toggleVisibility(): void {\n    this._searchVisible = !this._searchVisible;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  handleSearchDebounce(value: string): void {\n    this.searchDebounce.emit(value);\n  }\n\n  handleSearch(value: string): void {\n    this.search.emit(value);\n  }\n\n  handleClear(): void {\n    this.clear.emit();\n  }\n\n  handleBlur(): void {\n    this.blur.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdSearchInputComponent } from './search-input/search-input.component';\nimport { TdSearchBoxComponent } from './search-box/search-box.component';\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatInputModule, MatIconModule, MatButtonModule],\n  declarations: [TdSearchInputComponent, TdSearchBoxComponent],\n  exports: [TdSearchInputComponent, TdSearchBoxComponent],\n})\nexport class CovalentSearchModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  separatorIcon: string = 'chevron_right';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent, { descendants: true }) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input() separatorIcon: string = 'chevron_right';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(debounceTime(10)),\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    const element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    const style: CSSStyleDeclaration = window.getComputedStyle(element);\n    const borderLeft: number = parseInt(style.borderLeft, 10);\n    const borderRight: number = parseInt(style.borderRight, 10);\n    const marginLeft: number = parseInt(style.marginLeft, 10);\n    const marginRight: number = parseInt(style.marginRight, 10);\n    const paddingLeft: number = parseInt(style.paddingLeft, 10);\n    const paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    const breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private _calculateVisibility(): void {\n    const crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    const hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      const breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if (crumbWidthSum + breadcrumb.width > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n  exports: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n})\nexport class CovalentBreadcrumbsModule {}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ContentChild,\n  OnInit,\n} from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective, TemplatePortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nexport enum StepState {\n  None = 'none',\n  Required = 'required',\n  Complete = 'complete',\n}\n\n@Directive({\n  selector: '[td-step-label]ng-template',\n})\nexport class TdStepLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-actions]ng-template',\n})\nexport class TdStepActionsDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-summary]ng-template',\n})\nexport class TdStepSummaryDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdStepBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepMixinBase = mixinDisableRipple(mixinDisabled(TdStepBase));\n\n@Component({\n  selector: 'td-step',\n  inputs: ['disabled', 'disableRipple'],\n  templateUrl: './step.component.html',\n})\nexport class TdStepComponent extends _TdStepMixinBase implements OnInit, ICanDisable, ICanDisableRipple {\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  private _contentPortal: TemplatePortal<any>;\n  get stepContent(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef, { static: true }) _content: TemplateRef<any>;\n  @ContentChild(TdStepLabelDirective, { static: false }) stepLabel: TdStepLabelDirective;\n  @ContentChild(TdStepActionsDirective, { static: false }) stepActions: TdStepActionsDirective;\n  @ContentChild(TdStepSummaryDirective, { static: false }) stepSummary: TdStepSummaryDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdStepComponent] header.\n   * Defaults to 'Step #'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdStepComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles [TdStepComponent] between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._setActive(coerceBooleanProperty(active));\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of [TdStepComponent] depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * activated?: function\n   * Event emitted when [TdStepComponent] is activated.\n   */\n  @Output() activated: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * deactivated?: function\n   * Event emitted when [TdStepComponent] is deactivated.\n   */\n  @Output() deactivated: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n  /**\n   * Toggle active state of [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setActive(!this._active);\n  }\n\n  /**\n   * Opens [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setActive(true);\n  }\n\n  /**\n   * Closes [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setActive(false);\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this._state === StepState.Complete;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._active) {\n      this._active = false;\n      this._onDeactivated();\n    }\n  }\n\n  /**\n   * Method to change active state internally and emit the [activated] event if 'true' or [deactivated]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   * returns true if successfully changed state\n   */\n  private _setActive(newActive: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._active !== newActive) {\n      this._active = newActive;\n      if (newActive) {\n        this._onActivated();\n      } else {\n        this._onDeactivated();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onActivated(): void {\n    this.activated.emit();\n  }\n\n  private _onDeactivated(): void {\n    this.deactivated.emit();\n  }\n}\n","import { Component, Input, Output } from '@angular/core';\nimport { OnDestroy, AfterContentInit } from '@angular/core';\nimport { EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdStepComponent } from './step.component';\n\nexport interface IStepChangeEvent {\n  newStep: TdStepComponent;\n  prevStep: TdStepComponent;\n}\n\nexport enum StepMode {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\n@Component({\n  selector: 'td-steps',\n  styleUrls: ['./steps.component.scss'],\n  templateUrl: './steps.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps',\n  },\n})\nexport class TdStepsComponent implements OnDestroy, AfterContentInit {\n  private _subcriptions: Subscription[];\n  private _mode: StepMode = StepMode.Vertical;\n  private _steps: QueryList<TdStepComponent>;\n\n  @ContentChildren(TdStepComponent, { descendants: true })\n  set stepsContent(steps: QueryList<TdStepComponent>) {\n    if (steps) {\n      this._steps = steps;\n      this._registerSteps();\n    }\n  }\n\n  get steps(): TdStepComponent[] {\n    return this._steps.toArray();\n  }\n  prevStep: TdStepComponent;\n\n  /**\n   * mode?: StepMode or [\"vertical\" | \"horizontal\"]\n   * Defines if the mode of the [TdStepsComponent].  Defaults to [StepMode.Vertical | \"vertical\"]\n   */\n  @Input('mode')\n  set mode(mode: StepMode) {\n    if (mode === StepMode.Horizontal) {\n      this._mode = StepMode.Horizontal;\n    } else {\n      this._mode = StepMode.Vertical;\n    }\n  }\n  get mode(): StepMode {\n    return this._mode;\n  }\n\n  /**\n   * stepChange?: function\n   * Method to be executed when [stepChange] event is emitted.\n   * Emits an [IStepChangeEvent] implemented object.\n   */\n  @Output() stepChange: EventEmitter<IStepChangeEvent> = new EventEmitter<IStepChangeEvent>();\n\n  /**\n   * Executed after content is initialized, loops through any [TdStepComponent] children elements,\n   * assigns them a number and subscribes as an observer to their [activated] event.\n   */\n  ngAfterContentInit(): void {\n    this._registerSteps();\n  }\n\n  /**\n   * Unsubscribes from [TdStepComponent] children elements when component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._deregisterSteps();\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Horizontal | 'horizontal'], else 'false'.\n   */\n  isHorizontal(): boolean {\n    return this._mode === StepMode.Horizontal;\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Vertical | 'vertical'], else 'false'.\n   */\n  isVertical(): boolean {\n    return this._mode === StepMode.Vertical;\n  }\n\n  areStepsActive(): boolean {\n    return (\n      this._steps.filter((step: TdStepComponent) => {\n        return step.active;\n      }).length > 0\n    );\n  }\n\n  /**\n   * Wraps previous and new [TdStepComponent] numbers in an object that implements [IStepChangeEvent]\n   * and emits [stepChange] event.\n   */\n  private _onStepSelection(step: TdStepComponent): void {\n    if (this.prevStep !== step) {\n      const prevStep: TdStepComponent = this.prevStep;\n      this.prevStep = step;\n      const event: IStepChangeEvent = {\n        newStep: step,\n        prevStep,\n      };\n      this._deactivateAllBut(step);\n      this.stepChange.emit(event);\n    }\n  }\n\n  /**\n   * Loops through [TdStepComponent] children elements and deactivates them ignoring the one passed as an argument.\n   */\n  private _deactivateAllBut(activeStep: TdStepComponent): void {\n    this._steps\n      .filter((step: TdStepComponent) => step !== activeStep)\n      .forEach((step: TdStepComponent) => {\n        step.active = false;\n      });\n  }\n\n  private _registerSteps(): void {\n    this._subcriptions = [];\n    this._steps.toArray().forEach((step: TdStepComponent) => {\n      const subscription: Subscription = step.activated.asObservable().subscribe(() => {\n        this._onStepSelection(step);\n      });\n      this._subcriptions.push(subscription);\n    });\n  }\n\n  private _deregisterSteps(): void {\n    if (this._subcriptions) {\n      this._subcriptions.forEach((subs: Subscription) => {\n        subs.unsubscribe();\n      });\n      this._subcriptions = undefined;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nimport { StepState } from '../step.component';\n\nexport class TdStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdStepHeaderBase));\n\n@Component({\n  selector: 'td-step-header',\n  inputs: ['disabled', 'disableRipple'],\n  styleUrls: ['./step-header.component.scss'],\n  templateUrl: './step-header.component.html',\n})\nexport class TdStepHeaderComponent extends _TdStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n  /**\n   * Number assigned to [TdStepHeaderComponent].\n   */\n  @Input() number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input() active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input() state: StepState = StepState.None;\n\n  /**\n   * tabIndex?: number\n   * tabIndex of the step header for a11y\n   */\n  @Input() tabIndex: number;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\nimport { StepState } from '../step.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  selector: 'td-step-body',\n  styleUrls: ['./step-body.component.scss'],\n  templateUrl: './step-body.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdStepBodyComponent {\n  @ViewChild('contentRef', { read: ElementRef, static: true }) contentRef: ElementRef;\n\n  get hasContent(): boolean {\n    return (\n      this.contentRef &&\n      (this.contentRef.nativeElement.children.length > 0 || !!this.contentRef.nativeElement.textContent.trim())\n    );\n  }\n\n  @ViewChild('actionsRef', { read: ElementRef, static: true }) actionsRef: ElementRef;\n\n  get hasActions(): boolean {\n    return (\n      this.actionsRef &&\n      (this.actionsRef.nativeElement.children.length > 0 || !!this.actionsRef.nativeElement.textContent.trim())\n    );\n  }\n\n  @ViewChild('summaryRef', { read: ElementRef, static: true }) summaryRef: ElementRef;\n\n  get hasSummary(): boolean {\n    return (\n      this.summaryRef &&\n      (this.summaryRef.nativeElement.children.length > 0 || !!this.summaryRef.nativeElement.textContent.trim())\n    );\n  }\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on body.\n   */\n  @Input() active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of body.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input() state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n}\n","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, ElementRef } from '@angular/core';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, ICanDisableRipple } from '@covalent/core/common';\nimport { _TdStepMixinBase, StepState } from '../../step.component';\n\n@Component({\n  selector: '[td-step-link],[tdStepLink]',\n  styleUrls: ['./nav-step-link.component.scss'],\n  templateUrl: './nav-step-link.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    '[class.td-step-link]': 'true',\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[class.mat-disabled]': 'disabled || null',\n    '(click)': '_handleClick($event)',\n  },\n})\nexport class TdNavStepLinkComponent extends _TdStepMixinBase implements ICanDisable, ICanDisableRipple {\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  // Number to display in step header\n  number: number;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of component depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * label?: string\n   * Label to display in step header\n   * Defaults to empty\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sublabel to display in step header\n   * Defaults to empty\n   */\n  @Input() sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles component between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._active = coerceBooleanProperty(active);\n    this._changeDetectorRef.markForCheck();\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * tabIndex?: number\n   * tabIndex for component\n   */\n  @Input() tabIndex: number;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, public elementRef: ElementRef) {\n    super();\n  }\n\n  _handleClick(click: Event): void {\n    if (this.disabled) {\n      click.preventDefault();\n      click.stopImmediatePropagation();\n    }\n  }\n}\n","import {\n  Component,\n  Optional,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  AfterContentChecked,\n  ChangeDetectorRef,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\n\nimport { Subject, merge, of } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][horizontal]',\n  styleUrls: ['./nav-steps-horizontal.component.scss'],\n  templateUrl: './nav-steps-horizontal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    'class': 'td-steps td-steps-horizontal',\n    '[class.td-step-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.td-step-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class TdNavStepsHorizontalComponent implements AfterContentChecked, AfterContentInit, OnDestroy {\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  private _widthSubject: Subject<number> = new Subject<number>();\n\n  private _scrollDistance: number = 0;\n  private _scrollDistanceChanged: boolean = false;\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls: boolean = false;\n\n  /** Whether the step list can be scrolled more towards the end. */\n  _disableScrollAfter: boolean = true;\n\n  /** Whether the step list can be scrolled more towards the beginning. */\n  _disableScrollBefore: boolean = true;\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent, { descendants: true }) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepListContainer', { static: true }) _stepListContainer: ElementRef;\n  @ViewChild('stepList', { static: true }) _stepList: ElementRef;\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    const element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    const style: CSSStyleDeclaration = window.getComputedStyle(element);\n    const borderLeft: number = parseInt(style.borderLeft, 10);\n    const borderRight: number = parseInt(style.borderRight, 10);\n    const marginLeft: number = parseInt(style.marginLeft, 10);\n    const marginRight: number = parseInt(style.marginRight, 10);\n    const paddingLeft: number = parseInt(style.paddingLeft, 10);\n    const paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewportRuler: ViewportRuler,\n    @Optional() private _dir: Directionality,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterContentInit(): void {\n    merge(\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n      this._viewportRuler.change(150),\n      this._dir ? this._dir.change : of(undefined),\n      this._steps.changes,\n    )\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._configureSteps();\n        this.updatePagination();\n        this._changeDetectorRef.markForCheck();\n      });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentChecked(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n    if (this._scrollDistanceChanged) {\n      this._updateStepScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Listen to right and left key events to move the the viewport.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._scrollHeader('before');\n        event.preventDefault();\n        break;\n      case RIGHT_ARROW:\n        this._scrollHeader('after');\n        event.preventDefault();\n        break;\n      default:\n      // do something\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   */\n  updatePagination(): void {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateStepScrollPosition();\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the step list that will cause the list to scroll. */\n  _updateStepScrollPosition(): void {\n    const translateX: number = this._getLayoutDirection() === 'ltr' ? -this.scrollDistance : this.scrollDistance;\n    // Move step list the amount of pixels scrolled\n    this._stepList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off.\n    if (this._getLayoutDirection() === 'ltr') {\n      this._stepListContainer.nativeElement.scrollLeft = 0;\n    } else {\n      this._stepListContainer.nativeElement.scrollLeft = this._getMaxScrollDistance();\n    }\n  }\n\n  /** Sets the distance in pixels that the step header should be transformed in the X-axis. */\n  get scrollDistance(): number {\n    return this._scrollDistance;\n  }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the step list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively).\n   */\n  _scrollHeader(scrollDir: ScrollDirection): void {\n    // Move the scroll distance one-half the length of the step list's viewport.\n    this.scrollDistance += ((scrollDir === 'before' ? -1 : 1) * this._stepListContainer.nativeElement.offsetWidth) / 2;\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * step list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   */\n  _checkPaginationEnabled(): void {\n    const isEnabled: boolean = this._stepList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   */\n  _checkScrollingControls(): void {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance === 0;\n    this._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the step list container and step header container.\n   */\n  _getMaxScrollDistance(): number {\n    return this._stepList.nativeElement.scrollWidth - this._stepListContainer.nativeElement.offsetWidth || 0;\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    const stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        const separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-horizontal-line');\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ElementRef,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n@Component({\n  selector: 'nav[td-steps][vertical]',\n  styleUrls: ['./nav-steps-vertical.component.scss'],\n  templateUrl: './nav-steps-vertical.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-vertical',\n  },\n})\nexport class TdNavStepsVerticalComponent implements AfterContentInit, OnDestroy {\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent, { descendants: true }) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepList', { static: true }) _stepList: ElementRef;\n\n  constructor(private _renderer: Renderer2, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._configureSteps();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    const stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        const separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-vertical-line-wrapper');\n        const separatorChild: any = this._renderer.createElement('div');\n        this._renderer.addClass(separatorChild, 'td-vertical-line');\n        this._renderer.appendChild(separator, separatorChild);\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\n\n// Steps\nimport { TdStepsComponent } from './steps.component';\nimport { TdStepHeaderComponent } from './step-header/step-header.component';\nimport { TdStepBodyComponent } from './step-body/step-body.component';\nimport {\n  TdStepComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n} from './step.component';\n\n// Nav Steps\nimport { TdNavStepsHorizontalComponent } from './nav/nav-steps-horizontal/nav-steps-horizontal.component';\nimport { TdNavStepsVerticalComponent } from './nav/nav-steps-vertical/nav-steps-vertical.component';\nimport { TdNavStepLinkComponent } from './nav/nav-step-link/nav-step-link.component';\n\nconst TD_STEPS: Type<any>[] = [\n  TdStepsComponent,\n  TdStepComponent,\n  TdStepHeaderComponent,\n  TdStepBodyComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n  TdNavStepsHorizontalComponent,\n  TdNavStepsVerticalComponent,\n  TdNavStepLinkComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, PortalModule, ScrollingModule, CovalentCommonModule],\n  declarations: [TD_STEPS],\n  exports: [TD_STEPS],\n})\nexport class CovalentStepsModule {}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { mixinDisabled, ICanDisable } from '@covalent/core/common';\n\nexport class TdTabOptionBase {\n  constructor(public _viewContainerRef: ViewContainerRef, public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabOptionMixinBase = mixinDisabled(TdTabOptionBase);\n\n@Component({\n  selector: 'td-tab-option',\n  templateUrl: './tab-option.component.html',\n  styleUrls: ['./tab-option.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  inputs: ['disabled'],\n})\nexport class TdTabOptionComponent extends _TdTabOptionMixinBase implements ICanDisable, OnInit {\n  private _contentPortal: TemplatePortal<any>;\n  get content(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef, { static: true }) _content: TemplateRef<any>;\n\n  /**\n   * Value to which the option will be binded to.\n   */\n  @Input() value: any;\n\n  constructor(_viewContainerRef: ViewContainerRef, _changeDetectorRef: ChangeDetectorRef) {\n    super(_viewContainerRef, _changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  AfterContentInit,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  ICanDisable,\n  mixinDisabled,\n  IControlValueAccessor,\n  mixinControlValueAccessor,\n  ICanDisableRipple,\n  mixinDisableRipple,\n} from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdTabOptionComponent } from './tab-option.component';\n\nexport class TdTabSelectBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabSelectMixinBase = mixinControlValueAccessor(mixinDisabled(mixinDisableRipple(TdTabSelectBase)));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdTabSelectComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-tab-select',\n  templateUrl: './tab-select.component.html',\n  styleUrls: ['./tab-select.component.scss'],\n  /* tslint:disable-next-line */\n  inputs: ['value', 'disabled', 'disableRipple'],\n})\nexport class TdTabSelectComponent extends _TdTabSelectMixinBase\n  implements IControlValueAccessor, ICanDisable, ICanDisableRipple, OnInit, AfterContentInit, OnDestroy {\n  private _subs: Subscription[] = [];\n\n  private _values: any[] = [];\n  private _selectedIndex: number = 0;\n  private _stretchTabs: boolean = false;\n\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Gets all tab option children\n   */\n  @ContentChildren(TdTabOptionComponent, { descendants: true }) readonly _tabOptions: QueryList<TdTabOptionComponent>;\n\n  get tabOptions(): TdTabOptionComponent[] {\n    return this._tabOptions ? this._tabOptions.toArray() : undefined;\n  }\n\n  /**\n   * Makes the tabs stretch to fit the parent container.\n   */\n  @Input('stretchTabs')\n  set stretchTabs(stretchTabs: boolean) {\n    this._stretchTabs = coerceBooleanProperty(stretchTabs);\n  }\n  get stretchTabs(): boolean {\n    return this._stretchTabs;\n  }\n\n  /**\n   * Color of the tab group.\n   */\n  @Input() color: ThemePalette;\n\n  /**\n   * Background color of the tab group.\n   */\n  @Input() backgroundColor: ThemePalette;\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // subscribe to check if value changes and update the selectedIndex internally.\n    this._subs.push(\n      this.valueChanges.subscribe((value: any) => {\n        this._setValue(value);\n      }),\n    );\n  }\n\n  ngAfterContentInit(): void {\n    // subscribe to listen to any tab changes.\n    this._refreshValues();\n    this._subs.push(\n      this._tabOptions.changes.subscribe(() => {\n        this._refreshValues();\n      }),\n    );\n    // initialize value\n    Promise.resolve().then(() => {\n      this._setValue(this.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs && this._subs.length) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * Method executed when user selects a different tab\n   * This updates the new selectedIndex and infers what value should be mapped to.\n   */\n  selectedIndexChange(selectedIndex: number): void {\n    this._selectedIndex = selectedIndex;\n    const value: any = this._values[selectedIndex];\n    this.value = value;\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  /**\n   * Refresh the values array whenever the number of tabs gets updated\n   */\n  private _refreshValues(): void {\n    this._values = this.tabOptions.map((tabOption: TdTabOptionComponent) => {\n      return tabOption.value;\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Try to set value depending if its part of our options\n   * else set the value of the first tab.\n   */\n  private _setValue(value: any): void {\n    const index: number = this._values.indexOf(value);\n    if (index > -1) {\n      this._selectedIndex = index;\n    } else {\n      this.value = this._values.length ? this._values[0] : undefined;\n      this._selectedIndex = 0;\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TdTabSelectComponent } from './tab-select.component';\nimport { TdTabOptionComponent } from './tab-option.component';\n\n@NgModule({\n  declarations: [TdTabSelectComponent, TdTabOptionComponent], // directives, components, and pipes owned by this NgModule\n  imports: [\n    /** Angular Modules */\n    CommonModule,\n    FormsModule,\n    /** Material Modules */\n    PortalModule,\n    MatTabsModule,\n  ], // modules needed to run this module\n  exports: [TdTabSelectComponent, TdTabOptionComponent],\n})\nexport class CovalentTabSelectModule {}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { tdCollapseAnimation, tdRotateAnimation } from '@covalent/core/common';\n\nexport interface ITdNavNode {\n  label: string;\n  show?: boolean;\n}\n\nexport interface ITdNavHeader extends ITdNavNode {\n  children: ITdLink[];\n}\n\nexport interface ITdNavExpansion extends ITdNavHeader {\n  collapsable?: boolean;\n}\n\nexport interface ITdLink extends ITdNavNode {\n  link: { href: string; openInNewTab?: boolean } | { routerLink: string | string[]; openInNewTab?: boolean };\n  icon: { fontSet?: string; name: string };\n}\n\nlet nextUniqueId: number = 0;\n\n@Component({\n  selector: 'td-nav-links',\n  templateUrl: './nav-links.component.html',\n  styleUrls: ['./nav-links.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [tdCollapseAnimation, tdRotateAnimation],\n})\nexport class TdNavLinksComponent {\n  private _uniqueId: string = `td-nav-links-${++nextUniqueId}`;\n\n  private _collapsedSet: Set<ITdNavExpansion> = new Set<ITdNavExpansion>();\n\n  @Input() id: string = this._uniqueId;\n\n  /**\n   * Links to be rendered by component.\n   */\n  /* tslint:disable-next-line */\n  @Input() links: Array<ITdNavExpansion | ITdNavHeader | ITdLink>;\n\n  /**\n   * Event trigger after a navigation click\n   */\n  @Output() afterNavigation: EventEmitter<ITdLink> = new EventEmitter<ITdLink>();\n\n  _linkClicked(link: ITdLink): void {\n    this.afterNavigation.emit(link);\n  }\n\n  _href(link: ITdLink): string {\n    return link.link && (<{ href?: string }>link.link).href;\n  }\n\n  _routerLink(link: ITdLink): string | string[] {\n    return link.link && (<{ routerLink?: string | string[] }>link.link).routerLink;\n  }\n\n  /**\n   * @param link\n   * Toggles expand/collapse state of expansion link.\n   * Only applied when `collapsable` is true\n   */\n  _toggle(link: ITdNavExpansion): void {\n    if (this._isCollapsed(link)) {\n      this._collapsedSet.delete(link);\n    } else {\n      this._collapsedSet.add(link);\n    }\n  }\n\n  /**\n   * @param link\n   * Returns true if the state of provided expansion link is collapsed.\n   */\n  _isCollapsed(link: ITdNavExpansion): boolean {\n    return this._collapsedSet.has(link);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\nimport { CovalentExpansionPanelModule } from '@covalent/core/expansion-panel';\n\nimport { TdNavLinksComponent } from './nav-links.component';\n\n@NgModule({\n  declarations: [TdNavLinksComponent], // directives, components, and pipes owned by this NgModule\n  exports: [TdNavLinksComponent],\n  imports: [\n    CommonModule,\n    CovalentCommonModule,\n    CovalentExpansionPanelModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatListModule,\n    MatIconModule,\n    MatDividerModule,\n    RouterModule,\n  ], // modules needed to run this module\n})\nexport class CovalentNavLinksModule {}\n","/**\n * Assign a text value to the system clipboard. Note: Due to browser\n * security restrictions, the copy will only succeed if this method\n * is invoked as a result of a user action (eg. user button click).\n *\n * @param value text value to be assigned to clipboard.\n * @returns boolean indicating success/failure of copy operation.\n */\nexport function copyToClipboard(value: string): boolean {\n  // Create a temporary textarea element and append to DOM\n  const fakeTextArea: HTMLTextAreaElement = document.createElement('textarea');\n  document.body.appendChild(fakeTextArea);\n\n  // Assign value to be copied to clipboard\n  fakeTextArea.value = value;\n  fakeTextArea.select();\n\n  // Copy to clipboard\n  const success: boolean = document.execCommand('copy');\n\n  // Remove temporary textarea\n  document.body.removeChild(fakeTextArea);\n\n  // Return boolean indicating if exec command succeeded\n  return success;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisableRipple {\n  disableRipple: boolean;\n  onDisableRippleChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disableRipple(): boolean {\n      return this._disableRipple;\n    }\n    set disableRipple(value: boolean) {\n      const newValue: boolean = coerceBooleanProperty(value);\n      if (this._disableRipple !== newValue) {\n        this._disableRipple = newValue;\n        this.onDisableRippleChange(this._disableRipple);\n      }\n    }\n\n    onDisableRippleChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisable {\n  disabled: boolean;\n  onDisabledChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disabled(): boolean {\n      return this._disabled;\n    }\n    set disabled(value: boolean) {\n      const newValue: boolean = coerceBooleanProperty(value);\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.onDisabledChange(this._disabled);\n      }\n    }\n\n    onDisabledChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","/**\n * Read file as UTF-8 text. Return string contents on read completion.\n *\n * @param file filename or File object\n * @returns promise that resolves to file content string\n */\nexport function readFile(file: File): Promise<string> {\n  return new Promise<string>((resolve: (value: string) => void) => {\n    const reader: FileReader = new FileReader();\n    reader.readAsText(file, 'UTF-8');\n    reader.onload = () => {\n      resolve(<string>reader.result);\n    };\n  });\n}\n"]}