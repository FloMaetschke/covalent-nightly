{"version":3,"sources":["ng://@covalent/core/paging/paging-bar.component.ts","ng://@covalent/core/paging/paging.module.ts","node_modules/tslib/tslib.es6.js","ng://@covalent/core/virtual-scroll/virtual-scroll-row.directive.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-container.component.ts","ng://@covalent/core/virtual-scroll/virtual-scroll.module.ts","ng://@covalent/core/notifications/notification-count.component.ts","ng://@covalent/core/notifications/notifications.module.ts","ng://@covalent/core/common/forms/auto-trim/auto-trim.directive.ts","ng://@covalent/core/common/directives/fullscreen/fullscreen.directive.ts","ng://@covalent/core/common/pipes/time-ago/time-ago.pipe.ts","ng://@covalent/core/common/pipes/time-difference/time-difference.pipe.ts","ng://@covalent/core/common/pipes/time-until/time-until.pipe.ts","ng://@covalent/core/common/pipes/bytes/bytes.pipe.ts","ng://@covalent/core/common/pipes/decimal-bytes/decimal-bytes.pipe.ts","ng://@covalent/core/common/pipes/digits/digits.pipe.ts","ng://@covalent/core/common/pipes/truncate/truncate.pipe.ts","ng://@covalent/core/common/services/router-path.service.ts","ng://@covalent/core/common/services/icon.service.ts","ng://@covalent/core/common/common.module.ts","ng://@covalent/core/common/behaviors/control-value-accesor.mixin.ts","ng://@covalent/core/common/animations/rotate/rotate.animation.ts","ng://@covalent/core/common/animations/collapse/collapse.animation.ts","ng://@covalent/core/common/animations/fade/fadeInOut.animation.ts","ng://@covalent/core/common/animations/bounce/bounce.animation.ts","ng://@covalent/core/common/animations/flash/flash.animation.ts","ng://@covalent/core/common/animations/headshake/headshake.animation.ts","ng://@covalent/core/common/animations/jello/jello.animation.ts","ng://@covalent/core/common/animations/pulse/pulse.animation.ts","ng://@covalent/core/common/forms/validators/validators.ts","ng://@covalent/core/message/message.component.ts","ng://@covalent/core/message/message.module.ts","ng://@covalent/core/chips/chips.component.ts","ng://@covalent/core/chips/chips.module.ts","ng://@covalent/core/data-table/data-table-row/data-table-row.component.ts","ng://@covalent/core/data-table/directives/data-table-template.directive.ts","ng://@covalent/core/data-table/data-table.component.ts","ng://@covalent/core/data-table/data-table-column/data-table-column.component.ts","ng://@covalent/core/data-table/data-table-cell/data-table-cell.component.ts","ng://@covalent/core/data-table/data-table-table/data-table-table.component.ts","ng://@covalent/core/data-table/data-table.module.ts","ng://@covalent/core/data-table/services/data-table.service.ts","ng://@covalent/core/dialogs/dialog.component.ts","ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts","ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts","ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts","ng://@covalent/core/dialogs/services/dialog.service.ts","ng://@covalent/core/dialogs/dialogs.module.ts","ng://@covalent/core/expansion-panel/expansion-panel.component.ts","ng://@covalent/core/expansion-panel/expansion-panel-group.component.ts","ng://@covalent/core/expansion-panel/expansion-panel.module.ts","ng://@covalent/core/file/directives/file-select.directive.ts","ng://@covalent/core/file/directives/file-drop.directive.ts","ng://@covalent/core/file/file-input/file-input.component.ts","ng://@covalent/core/file/file-upload/file-upload.component.ts","ng://@covalent/core/file/services/file.service.ts","ng://@covalent/core/file/file.module.ts","ng://@covalent/core/json-formatter/json-formatter.component.ts","ng://@covalent/core/json-formatter/json-formatter.module.ts","ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts","ng://@covalent/core/loading/loading.component.ts","ng://@covalent/core/loading/services/loading.factory.ts","ng://@covalent/core/loading/services/loading.service.ts","ng://@covalent/core/loading/directives/loading.directive.ts","ng://@covalent/core/loading/loading.module.ts","ng://@covalent/core/media/services/media.service.ts","ng://@covalent/core/media/directives/media-toggle.directive.ts","ng://@covalent/core/media/media.module.ts","ng://@covalent/core/menu/menu.component.ts","ng://@covalent/core/menu/menu.module.ts","ng://@covalent/core/search/search-input/search-input.component.ts","ng://@covalent/core/search/search-box/search-box.component.ts","ng://@covalent/core/search/search.module.ts","ng://@covalent/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.module.ts","ng://@covalent/core/steps/step.component.ts","ng://@covalent/core/steps/steps.component.ts","ng://@covalent/core/steps/step-header/step-header.component.ts","ng://@covalent/core/steps/step-body/step-body.component.ts","ng://@covalent/core/steps/nav/nav-step-link/nav-step-link.component.ts","ng://@covalent/core/steps/nav/nav-steps-horizontal/nav-steps-horizontal.component.ts","ng://@covalent/core/steps/nav/nav-steps-vertical/nav-steps-vertical.component.ts","ng://@covalent/core/steps/steps.module.ts","ng://@covalent/core/tab-select/tab-option.component.ts","ng://@covalent/core/tab-select/tab-select.component.ts","ng://@covalent/core/tab-select/tab-select.module.ts","ng://@covalent/core/common/behaviors/disabled.mixin.ts","ng://@covalent/core/common/behaviors/disable-ripple.mixin.ts"],"names":["TdPagingBarComponent","Object","defineProperty","prototype","this","_pageLinkCount","pageLinkCount","coerceNumberProperty","_calculatePageLinks","_changeDetectorRef","markForCheck","_pageSize","pageSize","_page","_initialized","_handleOnChange","_total","total","_calculateRows","_pageLinks","_toRow","_fromRow","Math","ceil","_dir","dir","ngOnInit","initialPage","navigateToPage","page","maxPage","floor","firstPage","prevPage","nextPage","lastPage","isMinPage","isMaxPage","top","_hitEnd","_hitStart","actualPageLinkCount","middlePageLinks","x","event","fromRow","toRow","onChange","emit","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","Dir","decorators","type","Optional","ChangeDetectorRef","Input","Output","firstLast","EventEmitter","CovalentPagingModule","NgModule","imports","CommonModule","MatIconModule","MatButtonModule","declarations","exports","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","tslib_1.__extends","TemplatePortalDirective","Directive","TemplateRef","ViewContainerRef","TdVirtualScrollRowDirective","templateRef","viewContainerRef","_super","TdVirtualScrollContainerComponent","_data","data","_calculateVirtualRows","_virtualData","_rows","toArray","nativeElement","getBoundingClientRect","height","_totalHeight","_offsetTransform","ngAfterViewInit","_this","_subs","changes","subscribe","_bottom","pipe","debounceTime","bottom","lastRow","lastIndex","ngAfterViewChecked","newHostHeight","_elementRef","_hostHeight","ngOnDestroy","forEach","sub","unsubscribe","handleScroll","element","verticalScroll","scrollTop","_scrollVerticalOffset","rowHeight","refresh","scrollTo","row","scrollToStart","scrollToEnd","totalHeight","TD_VIRTUAL_OFFSET","isFinite","offset","_domSanitizer","bypassSecurityTrustStyle","slice","Promise","resolve","then","ElementRef","DomSanitizer","Renderer2","ViewChildren","ContentChild","HostListener","_renderer","Subject","trackBy","index","item","TD_VIRTUAL_SCROLL","CovalentVirtualScrollModule","Top","Bottom","Center","Before","After","TdNotificationCountComponent","_positionX","positionX","_positionY","positionY","notifications","_notifications","limit","_limit","show","_hasContent","toString","isNaN","ngAfterContentInit","TdNotificationCountPositionX","TdNotificationCountPositionY","content","contentElement","children","textContent","trim","ViewChild","HostBinding","color","TD_NOTIFICATIONS","CovalentNotificationsModule","TdAutoTrimDirective","onBlur","_model","update","NgModel","Host","TdFullscreenDirective","fsChangeHandler","fullScreenIsActive","srcElement","_getFullScreenElement","toggleFullScreen","_el","exitFullScreen","enterFullScreen","enterFullScreenMap","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","_b","tslib_1.__values","keys","_c","handler","_document","exitFullScreenMap","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","_d","tdFullScreenElementMap","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","props","exportAs","Inject","DOCUMENT","TdTimeAgoPipe","transform","time","reference","Date","ref","getTime","startTime","now","diff","Pipe","name","TdTimeDifferencePipe","start","end","endTime","undefined","days","hours","minutes","seconds","pad","daysFormatted","substring","TdTimeUntilPipe","TdBytesPipe","bytes","precision","parseInt","log","parseFloat","pow","toFixed","TdDecimalBytesPipe","TdDigitsPipe","digits","_decimalPipe","size","LOCALE_ID","_locale","DecimalPipe","TdTruncatePipe","text","truncated","substr","lastIndexOf","RouterPathService","getPreviousRoute","_previousRoute","Injectable","Router","_router","events","filter","RoutesRecognized","pairwise","urlAfterRedirects","IconService","_icons","query","icons","el","toLowerCase","indexOf","TD_DIRECTIVES","TD_VALIDATORS","TD_PIPES","FormsModule","providers","CovalentCommonModule","noop","tdRotateAnimation","trigger","state","style","params","degressStart","degreesEnd","transition","group","animateChild","optional","animate","duration","delay","ease","tdCollapseAnimation","overflow","AUTO_STYLE","tdFadeInOutAnimation","opacity","visibility","easeOnIn","easeOnOut","tdBounceAnimation","keyframes","animationTimingFunction","tdFlashAnimation","tdHeadshakeAnimation","tdJelloAnimation","tdPulseAnimation","CovalentValidators","min","minValue","c","Validators","required","v","actualValue","max","maxValue","numberRequired","Number","TdMessageContainerDirective","viewContainer","TdMessageComponent","_opened","_hidden","_color","removeClass","addClass","opened","open","close","animationDoneListener","_detach","_animating","_attach","_startAnimationState","toggle","_childElement","createEmbeddedView","_template","clear","animations","icon","TD_MESSAGE","CovalentMessageModule","TdChipDirective","TdAutocompleteOptionDirective","_TdChipsMixinBase","mixinControlValueAccessor","mixinDisabled","TdChipsBase","TdChipsComponent","_focused","_items","items","_setFirstOptionActive","_stacked","stacked","coerceBooleanProperty","_inputPosition","inputPosition","_requireMatch","requireMatch","_required","_chipAddition","chipAddition","_toggleInput","disabled","_chipRemoval","chipRemoval","canAddChip","placeholder","_tabIndex","focusListener","_isMousedown","focus","preventDefault","mousedownListener","timer","toPromise","clickListener","clickTarget","className","stopPropagation","keydownListener","keyCode","TAB","removeFocusedState","ESCAPE","_inputChild","focused","_nativeInput","blur","_closeAutocomplete","_inputValueChangesSubs","inputControl","valueChanges","debounce","onInputChange","_watchOutsideClick","ngDoCheck","_length","_outsideClickSubs","_setInternalClick","_internalClick","onDisabledChange","_handleAddChip","selectedOptions","_options","option","active","setInactiveStyles","_autocompleteTrigger","activeOption","addChip","setFocusedState","_openAutocomplete","setValue","findIndex","compareWith","onAdd","removeChip","removedValues","splice","_totalChips","_focusChip","onRemove","_handleChipBlur","onChipBlur","_handleChipFocus","onChipFocus","_handleFocus","_focusFirstChip","_inputKeydown","UP_ARROW","_internalActivateOption","LEFT_ARROW","DELETE","BACKSPACE","_focusLastChip","RIGHT_ARROW","_chipKeydown","canRemoveChip","DOWN_ARROW","_removeInputDisplay","panelOpen","openPanel","closePanel","_chipsChildren","enable","disable","setActiveStyles","merge","fromEvent","_touchendDebounce","setTimeout","contains","onTouched","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","MatInput","MatAutocompleteTrigger","MatChip","MatOption","Subscription","EMPTY","FormControl","o1","o2","CovalentChipsModule","ReactiveFormsModule","MatInputModule","MatChipsModule","MatAutocompleteModule","TdDataTableColumnRowComponent","TdDataTableRowComponent","_selected","selected","TdDataTableTemplateDirective","TdDataTableBase","Ascending","Descending","_TdDataTableMixinBase","TdDataTableComponent","_resizingColumn","selectable","_hostWidth","_scrollHorizontalOffset","_allSelected","_indeterminate","_rowHeightCache","_scrollableDiv","_columns","hasData","k","find","label","cols","_resizableColumns","resizableColumns","_selectable","_clickable","clickable","_multiple","multiple","_sortable","sortable","columnName","column","columns","Error","_sortBy","order","sortOrder","toUpperCase","_sortOrder","TdDataTableSortingOrder","_resizeSubs","_onResize","asObservable","_calculateWidths","_columnResizeSubs","_onColumnResize","clientX","_columnClientX","_horizontalScrollSubs","_onHorizontalScroll","horizontalScroll","_verticalScrollSubs","_onVerticalScroll","_valueChangesSubs","_templates","_templateMap","set","tdDataTableTemplate","ngAfterContentChecked","newHostWidth_1","width","_rowsChangedSubs","scrollLeft","getColumnWidth","_widths","getCellValue","nested","_getNestedValue","getTemplateRef","get","clearModel","_calculateCheckboxState","selectAll","checked","toggledRows","isRowSelected","modelRow","val","onSelectAll","rows","select","currentSelected","blockEvent","mouseEvent","shiftKey","_lastSelectedIndex","firstIndex","_firstSelectedIndex","_doSelection","rowSelected","_firstCheckboxValue","_shiftPreviouslyPressed","disableTextSelection","onselectstart","enableTextSelection","handleRowClick","currentTarget","getAttribute","tagName","onRowClick","handleSort","onSortChange","_rowKeyup","ENTER","SPACE","_handleStartColumnDrag","_handleColumnDrag","xPosition","proposedManualWidth","_colElements","projectedWidth","_handleEndColumnDrag","splitName","split","rowIndex","wasSelected","onRowSelect","col","_adjustColumnWidth","_calculateWidth","_adjustColumnWidhts","fixedTotalWidth","flexibleWidths","hidden","recalculateHostWidth","hostWidth","newValue_1","adjustedNumber_1","colWidth","newFlexibleWidths","skipMinWidthProjection","widthOpts","renderedColumns","scrolledRows","rowHeightSum_1","hostHeight","ContentChildren","Map","model","TdDataTableColumnComponent","_columnContent","numeric","handleClick","isAscending","isDescending","read","TdDataTableCellComponent","_align","align","TdDataTableTableComponent","TD_DATA_TABLE","CovalentDataTableModule","MatCheckboxModule","MatTooltipModule","MatPseudoCheckboxModule","TdDataTableService","filterData","searchTerm","ignoreCase","excludedColumns","key","preItemValue","sortData","sortBy","from","sort","a","compA","compB","direction","pageData","providedIn","TdDialogTitleDirective","TdDialogContentDirective","TdDialogActionsDirective","TdDialogComponent","dialogTitle","dialogContent","dialogActions","TdAlertDialogComponent","_dialogRef","MatDialogRef","closeButton","TdConfirmDialogComponent","cancel","accept","cancelButton","acceptButton","TdPromptDialogComponent","_input","handleInputFocus","TdDialogService","component","config","_dialogService","closeAll","openAlert","dialogConfig","_createConfig","dialogRef","alertDialogComponent","componentInstance","title","message","openConfirm","confirmDialogComponent","openPrompt","promptDialogComponent","MatDialogConfig","assign","MatDialog","TD_DIALOGS","TD_DIALOGS_ENTRY_COMPONENTS","CovalentDialogsModule","MatDialogModule","entryComponents","TdExpansionPanelHeaderDirective","TdExpansionPanelLabelDirective","TdExpansionPanelSublabelDirective","TdExpansionPanelSummaryComponent","_TdExpansionPanelMixinBase","mixinDisableRipple","TdExpansionPanelBase","TdExpansionPanelComponent","_expand","expand","_setExpand","clickEvent","_onCollapsed","newExpand","_onExpanded","expanded","collapsed","TdExpansionPanelGroupComponent","_multi","_lastOpenedPanels","_closeAllExcept","_destroyed","_stopWatchingPanels","openedPanels","expansionPanels","expansionPanel","numOpenedPanels","_attachListeners","takeUntil","openAll","indexOfPanel","panel","TD_EXPANSION_PANEL","CovalentExpansionPanelModule","MatRippleModule","PortalModule","TdFileSelectDirective","target","HTMLInputElement","files","onFileSelect","_TdFileDropMixinBase","TdFileDropBase","TdFileDropDirective","onDrop","dataTransfer","onFileDrop","_element","_stopEvent","onDragOver","transfer","dropEffect","_typeCheck","types","mozItemCount","onDragEnter","onDragLeave","TdFileInputLabelDirective","_TdFileInputMixinBase","TdFileInputBase","TdFileInputComponent","_inputElement","handleSelect","writeValue","onSelect","setProperty","inputElement","setDisabledState","isDisabled","_TdFileUploadMixinBase","TdFileUploadBase","TdFileUploadComponent","uploadPressed","onUpload","onCancel","fileInput","defaultColor","activeColor","cancelColor","TdFileService","_progressObservable","upload","options","Observable","subscriber","xhr","XMLHttpRequest","formData","FormData","file","append","onprogress","progress","lengthComputable","round","loaded","_progressSubject","onreadystatechange","readyState","status","response","complete","method","url","setRequestHeader","headers","send","TD_FILE","CovalentFileModule","TdJsonFormatterComponent","_levelsOpen","levelsOpen","isInteger","_open","elipsis","_key","KEY_MAX_LENGTH","parseChildren","_children","isObject","getType","isArray","hasChildren","getValue","replace","getObjectName","object","date","results","exec","getPreview","previewData","startChar","endChar","PREVIEW_LIMIT","map","obj","previewString","join","ellipsis","PREVIEW_STRING_MAX_LENGTH","CovalentJsonFormatterModule","TdLayoutComponent","mode","sidenav","MatSidenav","sidenavWidth","containerAutosize","_TdLayoutToggleMixinBase","LayoutToggleBase","LayoutToggle","hideWhenOpened","_hideWhenOpened","_toggleVisibility","_layout","_toggleSubs","_animationStarted","onClick","_noLayoutMessage","setStyle","console","warn","TdLayoutToggleDirective","tdLayoutToggle","layout","renderer","elementRef","TdLayoutCloseDirective","tdLayoutClose","TdLayoutOpenDirective","tdLayoutOpen","TdLayoutNavComponent","navigationRoute","handleNavigationClick","routerEnabled","navigateByUrl","TdLayoutNavListComponent","TdLayoutNavListToggleDirective","tdLayoutNavListToggle","TdLayoutNavListCloseDirective","tdLayoutNavListClose","TdLayoutNavListOpenDirective","tdLayoutNavListOpen","TdLayoutCardOverComponent","cardWidth","TdLayoutManageListComponent","TdLayoutManageListToggleDirective","tdLayoutManageListToggle","TdLayoutManageListCloseDirective","tdLayoutManageListClose","TdLayoutManageListOpenDirective","tdLayoutManageListOpen","TdLayoutFooterComponent","TdNavigationDrawerMenuDirective","TdNavigationDrawerToolbarDirective","TdNavigationDrawerComponent","_menuToggled","_drawerMenu","_toolbar","_backgroundImage","backgroundUrl","sanitizedUrl","_sanitize","sanitize","SecurityContext","RESOURCE_URL","STYLE","_closeSubscription","openedChange","toggleMenu","isMenuAvailable","TD_LAYOUTS","CovalentLayoutModule","ScrollDispatchModule","MatSidenavModule","MatToolbarModule","MatCardModule","MatDividerModule","Circular","Linear","Determinate","Indeterminate","Overlay","Replace","FullScreen","None","TdLoadingComponent","_mode","_defaultMode","_value","isOverlay","animation","_setCircleDiameter","getHeight","isFullScreen","getCircleDiameter","_circleDiameter","getCircleStrokeWidth","strokeWidth","abs","isCircular","LoadingType","isLinear","LoadingStyle","animationComplete","fromState","outAnimationCompleted","inAnimationCompleted","_animationIn","_animationOut","startInAnimation","startOutAnimation","LoadingMode","diameter","TdLoadingFactory","createFullScreenComponent","overlayRef","loadingRef","_initializeContext","loading","observable","distinctUntilChanged","registered","_createOverlay","componentRef","attach","ComponentPortal","_mapOptions","instance","changeDetectorRef","detectChanges","subs_1","destroy","detach","dispose","createOverlayComponent","_createComponent","TemplatePortal","insert","hostView","createReplaceComponent","context","nextElementSibling","scrollHeight","contentRef","subs_2","OverlayConfig","hasBackdrop","positionStrategy","_overlay","position","global","centerHorizontally","centerVertically","compRef","_componentFactoryResolver","resolveComponentFactory","_injector","subject","times","ComponentFactoryResolver","Injector","LOADING_FACTORY_PROVIDER_FACTORY","parent","componentFactoryResolver","overlay","injector","LOADING_FACTORY_PROVIDER","deps","SkipSelf","useFactory","TdLoadingConfig","TdLoadingDirectiveConfig","strategy","LoadingStrategy","TdLoadingService","createComponent","directiveConfig","_context","_loadingFactory","fullscreenConfig","removeComponent","register","registers","_timeouts","_clearTimeout","resolves","resolveAll","clearTimeout","LOADING_PROVIDER_FACTORY","loadingFactory","LOADING_PROVIDER","TdLoadingContext","$implicit","tdLoading","TD_LOADING_NEXT_ID","TdLoadingDirective","_name","until","_loadingService","_type","stategy","_strategy","_registerComponent","_loadingRef","_viewContainerRef","_templateRef","TD_LOADING","TD_LOADING_ENTRY_COMPONENTS","CovalentLoadingModule","MatProgressBarModule","MatProgressSpinnerModule","OverlayModule","TdMediaService","deregisterQuery","_queryMap","_querySources","_queryObservables","_ngZone","run","matchMedia","matches","registerQuery","BehaviorSubject","broadcast","this_1","_matchMediaTrigger","NgZone","_resizing","_globalSubscription","runOutsideAngular","window","TdMediaToggleDirective","_query","attributes","_attributes","classes","_classes","styles","_styles","_mediaChange","_mediaService","_subscription","_matches","_changeAttributes","_changeClasses","_changeStyles","attr","setAttribute","removeAttribute","removeStyle","TD_MEDIA","CovalentMediaModule","TdMenuComponent","TD_MENU","CovalentMenuModule","MatMenuModule","_TdSearchInputMixinBase","TdSearchInputBase","TdSearchInputComponent","ngControl","skip","_searchTermChanged","handleBlur","handleSearch","onSearch","clearSearch","onClear","onSearchDebounce","display","showUnderline","clearIcon","_TdSearchBoxMixinBase","TdSearchBoxBase","TdSearchBoxComponent","_searchVisible","searchClicked","alwaysVisible","handleClear","_searchInput","toggleVisibility","handleSearchDebounce","margin","backIcon","searchIcon","CovalentSearchModule","TdBreadcrumbComponent","_displayCrumb","shouldDisplay","_width","_handleIconClick","host","class","separatorIcon","_displayIcon","TdBreadcrumbsComponent","_resizeSubscription","_widthSubject","_calculateVisibility","nativeElementWidth","setCrumbIcons","getComputedStyle","borderLeft","borderRight","marginLeft","marginRight","paddingLeft","paddingRight","_breadcrumbs","breadcrumbArray","breadcrumb","crumbsArray","crumbWidthSum","hiddenCrumbs","displayCrumb","hiddenBreadcrumbs","CovalentBreadcrumbsModule","Required","Complete","TdStepLabelDirective","TdStepActionsDirective","TdStepSummaryDirective","_TdStepMixinBase","TdStepBase","TdStepComponent","_contentPortal","_active","_setActive","_state","StepState","_content","isComplete","_onDeactivated","newActive","_onActivated","onActivated","onDeactivated","Vertical","Horizontal","TdStepsComponent","steps","_steps","_registerSteps","StepMode","_deregisterSteps","isHorizontal","isVertical","areStepsActive","step","_onStepSelection","prevStep","event_1","newStep","_deactivateAllBut","onStepChange","activeStep","_subcriptions","subscription","subs","_TdStepHeaderMixinBase","TdStepHeaderBase","TdStepHeaderComponent","isRequired","apply","TdStepBodyComponent","actionsRef","summaryRef","TdNavStepLinkComponent","_handleClick","click","stopImmediatePropagation","[class.td-step-link]","[attr.tabindex]","[attr.disabled]","[class.mat-disabled]","(click)","TdNavStepsHorizontalComponent","_viewportRuler","change","of","_configureSteps","updatePagination","_scrollDistanceChanged","_updateStepScrollPosition","_handleKeydown","_scrollHeader","_checkPaginationEnabled","_checkScrollingControls","_getLayoutDirection","translateX","scrollDistance","_stepList","_stepListContainer","_getMaxScrollDistance","_scrollDistance","scrollDir","offsetWidth","isEnabled","scrollWidth","_showPaginationControls","_disableScrollBefore","_disableScrollAfter","_separators","separator","removeChild","stepsArray","createElement","insertBefore","number","[class.td-step-header-pagination-controls-enabled]","[class.td-step-header-rtl]","ViewportRuler","Directionality","TdNavStepsVerticalComponent","separatorChild","appendChild","TD_STEPS","CovalentStepsModule","_TdTabOptionMixinBase","TdTabOptionBase","TdTabOptionComponent","_TdTabSelectMixinBase","TdTabSelectBase","TdTabSelectComponent","_selectedIndex","_tabOptions","_stretchTabs","stretchTabs","_setValue","_refreshValues","selectedIndexChange","selectedIndex","_values","valueChange","tabOptions","tabOption","CovalentTabSelectModule","MatTabsModule","base","initialValue","class_1","_subjectValueChanges","registerOnChange","fn","registerOnTouched","_i","_","_disabled","newValue","_disableRipple","onDisableRippleChange"],"mappings":"usFAAA,IAAAA,GA0DEC,OAAAC,eACIF,EAAAG,UAAA,gBAAa,KAKjB,WACE,OAAOC,KAAKC,oBAPd,SACkBC,GAChBF,KAAKC,eAAiBE,EAAAA,qBAAqBD,GAC3CF,KAAKI,sBACLJ,KAAKK,mBAAmBC,gDAU1BT,OAAAC,eACIF,EAAAG,UAAA,WAAQ,KAQZ,WACE,OAAOC,KAAKO,eAVd,SACaC,GACXR,KAAKO,UAAYJ,EAAAA,qBAAqBK,GACtCR,KAAKS,MAAQ,EACTT,KAAKU,cACPV,KAAKW,kBAEPX,KAAKK,mBAAmBC,gDAU1BT,OAAAC,eACIF,EAAAG,UAAA,QAAK,KAMT,WACE,OAAOC,KAAKY,YARd,SACUC,GACRb,KAAKY,OAAST,EAAAA,qBAAqBU,GACnCb,KAAKc,iBACLd,KAAKI,sBACLJ,KAAKK,mBAAmBC,gDAU1BT,OAAAC,eAAIF,EAAAG,UAAA,YAAS,KAAb,WACE,OAAOC,KAAKe,4CAOdlB,OAAAC,eAAIF,EAAAG,UAAA,QAAK,KAAT,WACE,OAAWC,KAAKgB,OAAahB,KAAKiB,SAAT,GAAiB,IAAIjB,KAAKgB,wCAOrDnB,OAAAC,eAAIF,EAAAG,UAAA,OAAI,KAAR,WACE,OAAOC,KAAKS,uCAOdZ,OAAAC,eAAIF,EAAAG,UAAA,UAAO,KAAX,WACE,OAAOmB,KAAKC,KAAKnB,KAAKY,OAASZ,KAAKO,4CAUtCV,OAAAC,eAAIF,EAAAG,UAAA,QAAK,KAAT,WACE,QAAIC,KAAKoB,MACkB,QAAlBpB,KAAKoB,KAAKC,qCAOrBzB,EAAAG,UAAAuB,SAAA,WACEtB,KAAKS,MAAQN,EAAAA,qBAAqBH,KAAKuB,aACvCvB,KAAKc,iBACLd,KAAKI,sBACLJ,KAAKU,cAAe,EACpBV,KAAKK,mBAAmBC,gBAO1BV,EAAAG,UAAAyB,eAAA,SAAeC,GACb,OAAa,IAATA,GAAuB,GAARA,GAAaA,GAAQzB,KAAK0B,WAC3C1B,KAAKS,MAAQN,EAAAA,qBAAqBe,KAAKS,MAAMF,IAC7CzB,KAAKW,mBACE,IASXf,EAAAG,UAAA6B,UAAA,WACE,OAAO5B,KAAKwB,eAAe,IAO7B5B,EAAAG,UAAA8B,SAAA,WACE,OAAO7B,KAAKwB,eAAexB,KAAKS,MAAQ,IAO1Cb,EAAAG,UAAA+B,SAAA,WACE,OAAO9B,KAAKwB,eAAexB,KAAKS,MAAQ,IAO1Cb,EAAAG,UAAAgC,SAAA,WACE,OAAO/B,KAAKwB,eAAexB,KAAK0B,UAGlC9B,EAAAG,UAAAiC,UAAA,WACE,OAAOhC,KAAKS,OAAS,GAGvBb,EAAAG,UAAAkC,UAAA,WACE,OAAOjC,KAAKS,OAAST,KAAK0B,SAGpB9B,EAAAG,UAAAe,eAAR,eACMoB,EAAclC,KAAKO,UAAYP,KAAKS,MACxCT,KAAKiB,SAAWjB,KAAKO,WAAaP,KAAKS,MAAQ,GAAK,EACpDT,KAAKgB,OAAShB,KAAKY,OAASsB,EAAMA,EAAMlC,KAAKY,QAOvChB,EAAAG,UAAAK,oBAAR,WAEMJ,KAAKiC,cACPjC,KAAKmC,SAAU,EACfnC,KAAKoC,WAAY,GAGfpC,KAAKgC,cACPhC,KAAKmC,SAAU,EACfnC,KAAKoC,WAAY,OAGfC,EAA8BrC,KAAKE,cACnCF,KAAKE,cAAgBF,KAAK0B,UAC5BW,EAAsBrC,KAAK0B,SAG7B1B,KAAKe,WAAa,GAGlB,QADIuB,EAA0BpB,KAAKS,MAAMU,EAAsB,GACtDE,EAAY,EAAGA,EAAIF,EAAqBE,IAI5CF,EAAsB,GAAM,GAAKrC,KAAKyB,KAAOa,EAAkBtC,KAAK0B,SACpEW,EAAsB,GAAM,GAAKrC,KAAKyB,KAAOa,GAAmBtC,KAAK0B,QAEtE1B,KAAKe,WAAWwB,GAAKvC,KAAK0B,SAAWW,GAAuBE,EAAI,KAKzC,EAAtBF,GAA4BA,GAAuB,GAAKrC,KAAKmC,UAChC,EAA9BnC,KAAKyB,KAAOa,EAEZtC,KAAKe,WAAWwB,GAAKvC,KAAKyB,KAAOa,EAAkBC,EAE1CvC,KAAKyB,KAAOa,GAAmB,EACxCtC,KAAKe,WAAWwB,GAAKA,EAAI,EAGzBvC,KAAKe,WAAWwB,GAAKvC,KAAKyB,KAAOc,GAK/B3C,EAAAG,UAAAY,gBAAR,WACEX,KAAKc,iBACLd,KAAKI,0BACDoC,EAA0B,CAC5Bf,KAAMzB,KAAKS,MACXiB,QAAS1B,KAAK0B,QACdlB,SAAUR,KAAKO,UACfM,MAAOb,KAAKY,OACZ6B,QAASzC,KAAKiB,SACdyB,MAAO1C,KAAKgB,QAEdhB,KAAKK,mBAAmBC,eACxBN,KAAK2C,SAASC,KAAKJ,wBA/PtBK,EAAAA,UAASC,KAAA,CAAC,CACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,SAAU,gBACVC,SAAA,o8DAdOC,EAAAA,IAAGC,WAAA,CAAA,CAAAC,KAuIGC,EAAAA,kBA3IbC,EAAAA,wDAuCCC,EAAAA,MAAKX,KAAA,CAAC,kCAMNW,EAAAA,MAAKX,KAAA,CAAC,sCAMNW,EAAAA,MAAKX,KAAA,CAAC,mCAcNW,EAAAA,MAAKX,KAAA,CAAC,2BAiBNW,EAAAA,MAAKX,KAAA,CAAC,2BAgDNY,EAAAA,OAAMZ,KAAA,CAAC,aA8IVlD,GArIE,SAAAA,EAAgCwB,EAAmBf,GAAnBL,KAAAoB,KAAAA,EAAmBpB,KAAAK,mBAAAA,EArH3CL,KAAAO,UAAoB,GACpBP,KAAAY,OAAiB,EACjBZ,KAAAS,MAAgB,EAChBT,KAAAiB,SAAmB,EACnBjB,KAAAgB,OAAiB,EACjBhB,KAAAU,cAAwB,EACxBV,KAAAe,WAAuB,GACvBf,KAAAC,eAAyB,EAEzBD,KAAAmC,SAAmB,EAEnBnC,KAAAoC,WAAqB,EAMTpC,KAAA2D,WAAqB,EAMnB3D,KAAAuB,YAAsB,EAqF1BvB,KAAA2C,SAA2C,IAAIiB,EAAAA,aCzInE,IAAAC,uBASCC,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CAACC,EAAAA,aAAcC,EAAAA,cAAeC,EAAAA,iBACvCC,aAAc,CAACvE,GACfwE,QAAS,CAACxE,OAEuBiE,GALnC,SAAAA,KCOA,IAAIQ,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBxE,OAAO2E,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,MACpDL,EAAGC,IAG5B,SAAgBM,EAAUP,EAAGC,GAEzB,SAASO,IAAO9E,KAAK+E,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEvE,UAAkB,OAANwE,EAAa1E,OAAOmF,OAAOT,IAAMO,EAAG/E,UAAYwE,EAAExE,UAAW,IAAI+E,GAGnF,SA6EgBG,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWC,EAAI,EAChE,OAAIH,EAAUA,EAAEI,KAAKL,GACd,CACHM,KAAM,WAEF,OADIN,GAAKI,GAAKJ,EAAEO,SAAQP,OAAI,GACrB,CAAEQ,MAAOR,GAAKA,EAAEI,KAAMK,MAAOT,KAKhD,SAAgBU,EAAOV,EAAGW,GACtB,IAAIV,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBY,EAAYC,EAA3BT,EAAIH,EAAEI,KAAKL,GAAOc,EAAK,GAC3B,IACI,WAAc,IAANH,GAAsB,EAANA,QAAcC,EAAIR,EAAEE,QAAQG,MAAMK,EAAGC,KAAKH,EAAEJ,OAExE,MAAOQ,GAASH,EAAI,CAAEG,MAAOA,WAEzB,IACQJ,IAAMA,EAAEH,OAASR,EAAIG,EAAU,YAAIH,EAAEI,KAAKD,WAExC,GAAIS,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAAgBG,IACZ,IAAK,IAAIH,EAAK,GAAIV,EAAI,EAAGA,EAAIc,UAAUX,OAAQH,IAC3CU,EAAKA,EAAGK,OAAOT,EAAOQ,UAAUd,KACpC,OAAOU,WCrIsCM,EAAAA,IAAAC,EAAAA,6CADhDC,EAAAA,UAAS1D,KAAA,CAAC,CAAEI,SAAU,oEAHHuD,EAAAA,mBAAaC,EAAAA,oBAQjCC,GAHE,SAAAA,EAAYC,EAA+BC,UACzCC,EAAAvB,KAAAvF,KAAM4G,EAAaC,IAAiB7G,YCuDtCH,OAAAC,eACIiH,EAAAhH,UAAA,OAAI,KAOR,WACE,OAAOC,KAAKgH,WATd,SACSC,GACPjH,KAAKgH,MAAQC,EACTjH,KAAKU,cACPV,KAAKkH,wBAEPlH,KAAKK,mBAAmBC,gDAM1BT,OAAAC,eAAIiH,EAAAhH,UAAA,cAAW,KAAf,WACE,OAAOC,KAAKmH,8CAcdtH,OAAAC,eAAIiH,EAAAhH,UAAA,YAAS,KAAb,WACE,OAAIC,KAAKoH,OAASpH,KAAKoH,MAAMC,UAAU,GAC9BrH,KAAKoH,MAAMC,UAAU,GAAGC,cAAcC,wBAAwBC,OAEhE,mCAGT3H,OAAAC,eAAIiH,EAAAhH,UAAA,cAAW,KAAf,WACE,OAAOC,KAAKyH,8CAGd5H,OAAAC,eAAIiH,EAAAhH,UAAA,UAAO,KAAX,WACE,OAAOC,KAAKiB,0CAGdpB,OAAAC,eAAIiH,EAAAhH,UAAA,QAAK,KAAT,WACE,OAAOC,KAAKgB,wCAGdnB,OAAAC,eAAIiH,EAAAhH,UAAA,kBAAe,KAAnB,WACE,OAAOC,KAAK0H,kDAUdX,EAAAhH,UAAA4H,gBAAA,WAAA,IAAAC,EAAA5H,KACEA,KAAK6H,MAAM5B,KACTjG,KAAKoH,MAAMU,QAAQC,UAAU,WAC3BH,EAAKV,2BAGTlH,KAAKU,cAAe,EACpBV,KAAKkH,wBAELlH,KAAK6H,MAAM5B,KACTjG,KAAKgI,QAAQC,KAAKC,EAAAA,aApGQ,MAoGuBH,UAAU,WACzDH,EAAKO,OAAOvF,KAAK,CACfwF,QAASR,EAAKZ,MAAMY,EAAKZ,MAAMvB,OAAS,GACxC4C,UAAWT,EAAKlF,YAMxBqE,EAAAhH,UAAAuI,mBAAA,eACMC,EAAwBvI,KAAKwI,YAAYlB,cAAcC,wBAAwBC,OAC/ExH,KAAKyI,cAAgBF,IACvBvI,KAAKyI,YAAcF,EACfvI,KAAKU,cACPV,KAAKkH,0BAKXH,EAAAhH,UAAA2I,YAAA,WACM1I,KAAK6H,OACP7H,KAAK6H,MAAMc,QAAQ,SAACC,GAClBA,EAAIC,iBAeV9B,EAAAhH,UAAA+I,aADA,SACatG,OACPuG,EAAoCvG,EAAY,OACpD,GAAIuG,EAAS,KACPC,EAAyBD,EAAQE,UACjCjJ,KAAKkJ,wBAA0BF,IACjChJ,KAAKkJ,sBAAwBF,EACzBhJ,KAAKU,cACPV,KAAKkH,yBAGLlH,KAAKU,cAEHV,KAAKgH,MAAMvB,OAASzF,KAAKmJ,WAAaH,EAAiBhJ,KAAKyI,cAAiB,GAC/EzI,KAAKgI,QAAQxC,SAUrBuB,EAAAhH,UAAAqJ,QAAA,WACEpJ,KAAKkH,yBAMPH,EAAAhH,UAAAsJ,SAAA,SAASC,GACPtJ,KAAKwI,YAAYlB,cAAc2B,UAAYK,EAAMtJ,KAAKmJ,UACtDnJ,KAAKK,mBAAmBC,gBAM1ByG,EAAAhH,UAAAwJ,cAAA,WACEvJ,KAAKqJ,SAAS,GACdrJ,KAAKK,mBAAmBC,gBAM1ByG,EAAAhH,UAAAyJ,YAAA,WACExJ,KAAKqJ,SAASrJ,KAAKyJ,YAAczJ,KAAKmJ,WACtCnJ,KAAKK,mBAAmBC,gBAGlByG,EAAAhH,UAAAmH,sBAAR,WAAA,IAAAU,EAAA5H,KACE,GAAIA,KAAKgH,MAAO,CACdhH,KAAKyH,aAAezH,KAAKgH,MAAMvB,OAASzF,KAAKmJ,cACzC1G,EAAkBvB,KAAKS,MAAM3B,KAAKkJ,sBAAwBlJ,KAAKmJ,WAhMvC,EAiM5BnJ,KAAKiB,SAAqB,EAAVwB,EAAcA,EAAU,MAEpCC,EADgBxB,KAAKS,MAAM3B,KAAKyI,YAAczI,KAAKmJ,WAAaO,EACxC1J,KAAKyC,QAC7BkH,SAASjH,IAAUA,EAAQ1C,KAAKgH,MAAMvB,OACxC/C,EAAQ1C,KAAKgH,MAAMvB,OACTkE,SAASjH,KACnBA,EAvM0B,GAyM5B1C,KAAKgB,OAAS0B,OAEd1C,KAAKyH,aAAe,EACpBzH,KAAKiB,SAAW,EAChBjB,KAAKgB,OAAS,MAGZ4I,EAAiB,EACjB5J,KAAKkJ,sBAjNqB,EAiNuBlJ,KAAKmJ,YACxDS,EAAS5J,KAAKyC,QAAUzC,KAAKmJ,WAG/BnJ,KAAK0H,iBAAmB1H,KAAK6J,cAAcC,yBACzC,eAAiBF,EAAS5J,KAAKyJ,aAAe,OAE5CzJ,KAAKgH,QACPhH,KAAKmH,aAAenH,KAAKiH,KAAK8C,MAAM/J,KAAKyC,QAASzC,KAAK0C,QAKzDsH,QAAQC,UAAUC,KAAK,WACrBtC,EAAKvH,mBAAmBC,sCAvN7BuC,EAAAA,UAASC,KAAA,CAAC,CACTI,SAAU,8BAEVC,SAAA,yvBACAJ,gBAAiBC,EAAAA,wBAAwBC,2IA1BzCkH,EAAAA,kBAOOC,EAAAA,oBALPC,EAAAA,iBALA7G,EAAAA,mDAmDCC,EAAAA,MAAKX,KAAA,CAAC,wBAqBNY,EAAAA,sBAEA4G,EAAAA,aAAYxH,KAAA,CAAC,oCAEbyH,EAAAA,aAAYzH,KAAA,CAAC6D,oBA0EblD,EAAAA,MAAKX,KAAA,CAAC,iCAIN0H,EAAAA,aAAY1H,KAAA,CAAC,SAAU,CAAC,cAyF3BiE,GA9IE,SAAAA,EACUyB,EACAqB,EACAY,EACApK,GAHAL,KAAAwI,YAAAA,EACAxI,KAAA6J,cAAAA,EACA7J,KAAAyK,UAAAA,EACAzK,KAAAK,mBAAAA,EAzEFL,KAAA6H,MAAwB,GACxB7H,KAAAgI,QAAwB,IAAI0C,EAAAA,QAC5B1K,KAAAU,cAAwB,EAExBV,KAAAyH,aAAuB,EACvBzH,KAAAyI,YAAsB,EACtBzI,KAAAkJ,sBAAgC,EAGhClJ,KAAAiB,SAAmB,EACnBjB,KAAAgB,OAAiB,EA8BfhB,KAAAmI,OAAoD,IAAIvE,EAAAA,aA8EhD5D,KAAA2K,QAAgC,SAACC,EAAeC,GAChE,OAAOA,OC3JLC,EAAiC,CAACnE,EAA6BI,GAErEgE,uBAACjH,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CAACC,EAAAA,cACVG,aAAc,CAAC2G,GACf1G,QAAS,CAAC0G,OAE8BC,GAL1C,SAAAA,YCGEC,IAAM,MACNC,OAAS,SACTC,OAAS,aAITC,OAAS,SACTC,MAAQ,QACRF,OAAS,UAKXG,GA4BExL,OAAAC,eACIuL,EAAAtL,UAAA,YAAS,KAGb,WACE,OAAOC,KAAKsL,gBALd,SACcC,GACZvL,KAAKsL,WAAaC,mCAWpB1L,OAAAC,eACIuL,EAAAtL,UAAA,YAAS,KAGb,WACE,OAAOC,KAAKwL,gBALd,SACcC,GACZzL,KAAKwL,WAAaC,mCAUpB5L,OAAAC,eACIuL,EAAAtL,UAAA,gBAAa,KADjB,SACkB2L,GAChB1L,KAAK2L,eAAiBD,mCAOxB7L,OAAAC,eACIuL,EAAAtL,UAAA,QAAK,KADT,SACU6L,GACR5L,KAAK6L,OAASD,mCAGhB/L,OAAAC,eACIuL,EAAAtL,UAAA,WAAQ,KADZ,WAEE,OAAQC,KAAK8L,OAAS9L,KAAK+L,+CAO7BlM,OAAAC,eAAIuL,EAAAtL,UAAA,UAAO,KAAX,WACE,OAA+B,IAAxBC,KAAK2L,gDAOd9L,OAAAC,eAAIuL,EAAAtL,UAAA,uBAAoB,KAAxB,WACE,OAAIC,KAAK2L,eAAiB3L,KAAK6L,OACnB7L,KAAK6L,OAAM,IAEhB7L,KAAK2L,eAAeK,4CAM7BnM,OAAAC,eAAIuL,EAAAtL,UAAA,OAAI,KAAR,WACE,OAA+B,IAAxBC,KAAK2L,iBAA6BM,MAAWjM,KAAmB,iBAA2B,EAAtBA,KAAK2L,gDAMnFN,EAAAtL,UAAAmM,mBAAA,WACOlM,KAAKsL,aACRtL,KAAKuL,UAAYvL,KAAK+L,cAAgBI,EAA6Bf,MAAQe,EAA6BjB,QAErGlL,KAAKwL,aACRxL,KAAKyL,UAAYzL,KAAK+L,cAAgBK,EAA6BpB,IAAMoB,EAA6BlB,SAOlGG,EAAAtL,UAAAgM,YAAR,WACE,GAAI/L,KAAKqM,QAAS,KACZC,EAA8BtM,KAAKqM,QAAQ/E,cAC/C,OAAOgF,IAAoD,EAAjCA,EAAeC,SAAS9G,UAAgB6G,EAAeE,YAAYC,QAE/F,OAAO,uBAtHV5J,EAAAA,UAASC,KAAA,CAAC,CACTI,SAAU,wBAEVC,SAAA,inBACAJ,gBAAiBC,EAAAA,wBAAwBC,4iDAWxCyJ,EAAAA,UAAS5J,KAAA,CAAC,0BAMVW,EAAAA,yBAOAA,EAAAA,yBAaAA,EAAAA,6BAYAA,EAAAA,qBASAA,EAAAA,wBAKAkJ,EAAAA,YAAW7J,KAAA,CAAC,mCAqDfuI,GAxHA,SAAAA,IAOUrL,KAAA2L,eAAmC,EAGnC3L,KAAA6L,OAZwC,GAuBvC7L,KAAA4M,MAAuC,WCtC5CC,GAAgC,CAACxB,GAEvCyB,yBAAChJ,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CAACC,EAAAA,cACVG,aAAc,CAAC0I,IACfzI,QAAS,CAACyI,QAE8BC,IAL1C,SAAAA,MCTA,IAAAC,IAcEA,GAAAhN,UAAAiN,OADA,SACOxK,GACDxC,KAAKiN,QAAUjN,KAAKiN,OAAOvH,OAAsC,iBAAtB1F,KAAKiN,OAAOvH,OACzD1F,KAAKiN,OAAOC,OAAOtK,KAAK5C,KAAKiN,OAAOvH,MAAM+G,8BAZ/CjG,EAAAA,UAAS1D,KAAA,CAAC,CACTI,SAAU,6DAHHiK,EAAAA,QAAO9J,WAAA,CAAA,CAAAC,KAMDC,EAAAA,UAAQ,CAAAD,KAAI8J,EAAAA,2CAKxB5C,EAAAA,aAAY1H,KAAA,CAAC,OAAQ,CAAC,cAMzBiK,IAXE,SAAAA,GAAwCE,GAAAjN,KAAAiN,OAAAA,UCiBjCI,GAAAtN,UAAAuN,gBAJP,SAIuB9K,GACrBxC,KAAKuN,mBAAqB/K,EAAMgL,aAAexN,KAAKyN,yBAG/CJ,GAAAtN,UAAA2N,iBAAP,WACE1N,KAAKyN,0BAA4BzN,KAAK2N,IAAIrG,cAAgBtH,KAAK4N,iBAAmB5N,KAAK6N,mBAGlFR,GAAAtN,UAAA8N,gBAAP,mBAEWvG,EAAAtH,KAAA2N,IAAArG,cAEHwG,EAA6B,CACjCC,kBAAmB,WAAM,OAAAzG,EAAcyG,qBACvCC,wBAAyB,WAAM,OAAA1G,EAAc0G,2BAC7CC,qBAAsB,WAAM,OAAA3G,EAAc2G,wBAC1CC,oBAAqB,WAAM,OAAA5G,EAAc4G,4BAG3C,IAAsB,IAAAC,EAAAC,EAAAvO,OAAOwO,KAAKP,IAAmBQ,EAAAH,EAAA3I,QAAA8I,EAAA3I,KAAA2I,EAAAH,EAAA3I,OAAE,CAAlD,IAAM+I,EAAOD,EAAA5I,MACZ4B,EAAciH,IAChBT,EAAmBS,4GAKlBlB,GAAAtN,UAAA6N,eAAP,mBAEIY,EADIxO,KACJwO,UACOlH,EAFHtH,KAEG2N,IAAArG,cAEHmH,EAA4B,CAChCC,eAAgB,WAAM,OAAAF,EAAUE,kBAChCC,qBAAsB,WAAM,OAAAH,EAAUG,wBACtCC,oBAAqB,WAAM,OAAAJ,EAAUI,uBACrCC,iBAAkB,WAAM,OAAAL,EAAUK,yBAGpC,IAAsB,IAAAP,EAAAF,EAAAvO,OAAOwO,KAAKI,IAAkBK,EAAAR,EAAA9I,QAAAsJ,EAAAnJ,KAAAmJ,EAAAR,EAAA9I,OAAE,CAAjD,IAAM+I,EAAOO,EAAApJ,MACZ8I,EAAUD,IAAYvO,KAAKyN,0BAA4BnG,GACzDmH,EAAkBF,4GAKhBlB,GAAAtN,UAAA0N,sBAAR,mBACUe,EAAAxO,KAAAwO,UACFO,EAAiC,CACrCC,kBAAmB,WAAM,OAAAR,EAAUQ,mBACnCC,wBAAyB,WAAM,OAAAT,EAAUS,yBACzCC,qBAAsB,WAAM,OAAAV,EAAUU,sBACtCC,oBAAqB,WAAM,OAAAX,EAAUW,0BAEvC,IAAoB,IAAAhB,EAAAC,EAAAvO,OAAOwO,KAAKU,IAAuBT,EAAAH,EAAA3I,QAAA8I,EAAA3I,KAAA2I,EAAAH,EAAA3I,OAAE,CAApD,IAAM4J,EAAKd,EAAA5I,MACd,GAAI8I,EAAUY,GACZ,OAAOZ,EAAUY,+HAnExB5I,EAAAA,UAAS1D,KAAA,CAAC,CACTI,SAAU,iBACVmM,SAAU,yFAIGC,EAAAA,OAAMxM,KAAA,CAACyM,EAAAA,mBAnBYpF,EAAAA,wDAqB/BK,EAAAA,aAAY1H,KAAA,CAAC,4BAA6B,CAAC,YAAS,CAAAQ,KACpDkH,EAAAA,aAAY1H,KAAA,CAAC,kCAAmC,CAAC,YAAS,CAAAQ,KAC1DkH,EAAAA,aAAY1H,KAAA,CAAC,+BAAgC,CAAC,YAAS,CAAAQ,KACvDkH,EAAAA,aAAY1H,KAAA,CAAC,8BAA+B,CAAC,cA4DhDuK,IAjEE,SAAAA,GAAsCmB,EAAgCb,GAAhC3N,KAAAwO,UAAAA,EAAgCxO,KAAA2N,IAAAA,EADtE3N,KAAAuN,oBAA8B,EClBhC,IAAAiC,IAMEA,GAAAzP,UAAA0P,UAAA,SAAUC,EAAWC,GAEnBD,EAAO,IAAIE,KAAKF,OACZG,EAAY,IAAID,KAAKD,GAGzB,IAAKD,EAAKI,UACR,MAAO,mBAKLC,EAAoB9D,MAAM4D,EAAIC,WAAaF,KAAKI,MAAQH,EAAIC,UAC5DG,EAAe/O,KAAKS,OAAOoO,EAAYL,EAAKI,WAAa,KAE7D,OAAIG,EAAO,EACF,eAELA,EAAO,GACF/O,KAAKS,MAAMsO,GAAQ,gBAG5BA,GAAc,IACH,EACF,eAELA,EAAO,GACF/O,KAAKS,MAAMsO,GAAQ,gBAG5BA,GAAc,IACH,EACF,aAELA,EAAO,GACF/O,KAAKS,MAAMsO,GAAQ,cAG5BA,GAAc,IACH,EACF,YAELA,EAAO,GACF/O,KAAKS,MAAMsO,GAAQ,aAG5BA,GAAc,IACH,EACF,cAELA,EAAO,GACF/O,KAAKS,MAAMsO,GAAQ,eAG5BA,GAAc,IACH,EACF,aAEA/O,KAAKS,MAAMsO,GAAQ,mCA9D/BC,EAAAA,KAAIpN,KAAA,CAAC,CACJqN,KAAM,cAgERX,IAjEA,SAAAA,MCFA,IAAAY,IAMEA,GAAArQ,UAAA0P,UAAA,SAAUY,EAAYC,OAEhBC,EADAR,EAAkB,IAAIH,KAAKS,GAS/B,GALEE,EADED,IAAQE,UACA,IAAIZ,KAAKU,GAET,IAAIV,MAGXG,EAAUD,YAAcS,EAAQT,UACnC,MAAO,mBAGLG,EAAe/O,KAAKS,OAAO4O,EAAQT,UAAYC,EAAUD,WAAa,KAEtEW,EAAevP,KAAKS,MAAMsO,EAAI,OAClCA,GAAkB,MAAJQ,MAEVC,EAAgBxP,KAAKS,MAAMsO,EAAI,MACnCA,GAAmB,KAALS,MAEVC,EAAkBzP,KAAKS,MAAMsO,EAAO,IAGpCW,EAFJX,GAAkB,GAAVU,EAIJE,EAAc,KAEdC,EAAwB,GAQ5B,OANW,EAAPL,GAAYA,EAAO,EACrBK,EAAgB,UACA,EAAPL,IACTK,EAAgB,aAIR,EAAPL,EAAWA,EAAOK,EAAgBA,GACnCD,EAAIE,UAAU,EAAGF,EAAIpL,QAAUiL,EAAQ,IAAIjL,QAC3CiL,EACA,IACAG,EAAIE,UAAU,EAAGF,EAAIpL,QAAUkL,EAAU,IAAIlL,QAC7CkL,EACA,IACAE,EAAIE,UAAU,EAAGF,EAAIpL,QAAUmL,EAAU,IAAInL,QAC7CmL,wBAlDLV,EAAAA,KAAIpN,KAAA,CAAC,CACJqN,KAAM,qBAoDRC,IArDA,SAAAA,MCFA,IAAAY,IAMEA,GAAAjR,UAAA0P,UAAA,SAAUC,EAAWC,GAEnBD,EAAO,IAAIE,KAAKF,OACZG,EAAY,IAAID,KAAKD,GAGzB,IAAKD,EAAKI,UACR,MAAO,mBAKLC,EAAoB9D,MAAM4D,EAAIC,WAAaF,KAAKI,MAAQH,EAAIC,UAC5DG,EAAe/O,KAAKS,OAAO+N,EAAKI,UAAYC,GAAa,KAE7D,OAAIE,EAAO,EACF,cAELA,EAAO,GACF,MAAQ/O,KAAKS,MAAMsO,GAAQ,YAGpCA,GAAc,IACH,EACF,cAELA,EAAO,GACF,MAAQ/O,KAAKS,MAAMsO,GAAQ,YAGpCA,GAAc,IACH,EACF,YAELA,EAAO,GACF,MAAQ/O,KAAKS,MAAMsO,GAAQ,UAGpCA,GAAc,IACH,EACF,WAELA,EAAO,GACF,MAAQ/O,KAAKS,MAAMsO,GAAQ,SAGpCA,GAAc,IACH,EACF,aAELA,EAAO,GACF,MAAQ/O,KAAKS,MAAMsO,GAAQ,WAGpCA,GAAc,IACH,EACF,YAEA,MAAQ/O,KAAKS,MAAMsO,GAAQ,+BA9DvCC,EAAAA,KAAIpN,KAAA,CAAC,CACJqN,KAAM,gBAgERa,IAjEA,SAAAA,MCFA,IAAAC,IAQEA,GAAAlR,UAAA0P,UAAA,SAAUyB,EAAYC,GACpB,QADoB,IAAAA,IAAAA,EAAA,GACN,IAAVD,EACF,MAAO,MACF,GAAIjF,MAAMmF,SAASF,EAAO,KAE/B,MAAO,qBAIL5L,EAAYpE,KAAKS,MAAMT,KAAKmQ,IAAIH,GAAShQ,KAAKmQ,IAFlC,OAIhB,OAAI/L,EAAI,EACC,iBAEFgM,YAAYJ,EAAQhQ,KAAKqQ,IAPhB,KAOuBjM,IAAIkM,QAAQL,IAAc,IAN3C,CAAC,IAAK,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAMA7L,yBApBhF4K,EAAAA,KAAIpN,KAAA,CAAC,CACJqN,KAAM,YAqBRc,IAtBA,SAAAA,MCFA,IAAAQ,IAQEA,GAAA1R,UAAA0P,UAAA,SAAUyB,EAAYC,GACpB,QADoB,IAAAA,IAAAA,EAAA,GACN,IAAVD,EACF,MAAO,MACF,GAAIjF,MAAMmF,SAASF,EAAO,KAE/B,MAAO,qBAIL5L,EAAYpE,KAAKS,MAAMT,KAAKmQ,IAAIH,GAAShQ,KAAKmQ,IAFlC,MAIhB,OAAI/L,EAAI,EACC,iBAEFgM,YAAYJ,EAAQhQ,KAAKqQ,IAPhB,IAOuBjM,IAAIkM,QAAQL,IAAc,IAN3C,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAMO7L,yBApBhF4K,EAAAA,KAAIpN,KAAA,CAAC,CACJqN,KAAM,mBAqBRsB,IAtBA,SAAAA,MCFA,IAAAC,IAcEA,GAAA3R,UAAA0P,UAAA,SAAUkC,EAAaR,GACrB,QADqB,IAAAA,IAAAA,EAAA,GACN,IAAXQ,EACF,MAAO,IACF,GAAI1F,MAAMmF,SAASO,EAAQ,KAEhC,OAAOA,EACF,GAAIA,EAAS,EAClB,OAAO3R,KAAK4R,aAAanC,UAAUkC,EAAOH,QAAQL,QAIhD7L,EAAYpE,KAAKS,MAAMT,KAAKmQ,IAAIM,GAAUzQ,KAAKmQ,IAFnC,MAGZQ,EAFkB,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,KAEtBvM,GACzB,OACEtF,KAAK4R,aAAanC,UAAU6B,YAAYK,EAASzQ,KAAKqQ,IALxC,IAK+CjM,IAAIkM,QAAQL,MAAgBU,EAAO,IAAMA,EAAO,0BAzBlH3B,EAAAA,KAAIpN,KAAA,CAAC,CACJqN,KAAM,gFAKOb,EAAAA,OAAMxM,KAAA,CAACgP,EAAAA,gBAsBtBJ,IAtBE,SAAAA,GAAuCK,QAAA,IAAAA,IAAAA,EAAA,MAAA/R,KAAA+R,QAAAA,EACrC/R,KAAK4R,aAAe,IAAII,EAAAA,YAAYhS,KAAK+R,SCV7C,IAAAE,IAMEA,GAAAlS,UAAA0P,UAAA,SAAUyC,EAAWzM,GACnB,GAAoB,iBAATyM,EACT,MAAO,OAILC,EAAoBD,EAAKE,OAAO,EAAG3M,GAUvC,OARIyM,EAAKzM,OAASA,IACiB,EAA7B0M,EAAUE,YAAY,OACxBF,EAAYA,EAAU1F,QAGxB0F,GAAa,KAGRA,wBApBVjC,EAAAA,KAAIpN,KAAA,CAAC,CACJqN,KAAM,eAqBR8B,IAtBA,SAAAA,MCFA,IAAAK,IAuBEA,GAAAvS,UAAAwS,iBAAA,WACE,OAAOD,GAAkBE,gBAjBZF,GAAAE,eAAyB,yBAFzCC,EAAAA,uDAJQC,EAAAA,UAyBTJ,IAlBE,SAAAA,GAAoBK,GAAA3S,KAAA2S,QAAAA,EAClB3S,KAAK2S,QAAQC,OACV3K,KACC4K,EAAAA,OAAO,SAAC9M,GAAW,OAAAA,aAAa+M,EAAAA,mBAChCC,EAAAA,YAEDhL,UAAU,SAAChC,GACVuM,GAAkBE,eAAiBzM,EAAE,GAAGiN,4BCowB9CnT,OAAAC,eAAImT,GAAAlT,UAAA,QAAK,KAAT,WACE,OAAOC,KAAKkT,wCAGdD,GAAAlT,UAAA8S,OAAA,SAAOM,GACL,OAAOnT,KAAKoT,MAAMP,OAAO,SAACQ,GACxB,OAAqE,EAA9DA,EAAGC,cAAcC,QAAQJ,EAAQA,EAAMG,cAAgB,4BAlxBnEb,EAAAA,aAqxBDQ,IArxBA,SAAAA,KAEUjT,KAAAkT,OAAmB,CACzB,eACA,gBACA,cACA,gBACA,kBACA,yBACA,cACA,iBACA,MACA,YACA,UACA,aACA,qBACA,oBACA,gBACA,SACA,QACA,YACA,YACA,WACA,QACA,UACA,eACA,OACA,UACA,aACA,kBACA,yBACA,gBACA,gBACA,eACA,aACA,aACA,iBACA,kBACA,oBACA,sBACA,uBACA,kBACA,cACA,eACA,aACA,aACA,YACA,WACA,YACA,SACA,gBACA,wBACA,eACA,cACA,kBACA,WACA,QACA,YACA,kBACA,sBACA,qBACA,sBACA,gBACA,cACA,WACA,UACA,OACA,WACA,kBACA,aACA,gBACA,eACA,eACA,oBACA,eACA,cACA,eACA,eACA,eACA,aACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,kBACA,iBACA,oBACA,eACA,QACA,aACA,QACA,WACA,SACA,OACA,OACA,WACA,YACA,aACA,cACA,gBACA,aACA,SACA,aACA,eACA,cACA,cACA,SACA,OACA,iBACA,sBACA,oBACA,OACA,QACA,YACA,0BACA,eACA,eACA,gBACA,QACA,QACA,YACA,QACA,iBACA,QACA,eACA,aACA,iBACA,YACA,cACA,eACA,cACA,uBACA,aACA,WACA,UACA,UACA,WACA,sBACA,gBACA,WACA,eACA,cACA,gBACA,gBACA,0BACA,SACA,cACA,OACA,YACA,WACA,WACA,WACA,WACA,YACA,iBACA,gBACA,gBACA,cACA,YACA,aACA,SACA,SACA,cACA,cACA,kBACA,UACA,kBACA,iBACA,aACA,UACA,aACA,UACA,aACA,kBACA,kBACA,iBACA,iBACA,qBACA,iBACA,oBACA,qBACA,kBACA,YACA,MACA,iBACA,qBACA,OACA,SACA,OACA,WACA,SACA,YACA,MACA,OACA,QACA,QACA,YACA,QACA,gBACA,QACA,kBACA,aACA,aACA,aACA,cACA,cACA,cACA,WACA,UACA,WACA,iBACA,iBACA,kBACA,kBACA,gBACA,YACA,OACA,eACA,cACA,WACA,kBACA,WACA,gBACA,cACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,gBACA,iBACA,sBACA,eACA,gBACA,aACA,cACA,cACA,oBACA,iBACA,eACA,eACA,OACA,QACA,aACA,YACA,WACA,SACA,cACA,iBACA,OACA,eACA,gBACA,SACA,cACA,gBACA,iBACA,gBACA,sBACA,uBACA,oBACA,qBACA,cACA,eACA,oBACA,qBACA,oBACA,yBACA,yBACA,gBACA,sBACA,uBACA,uBACA,eACA,eACA,cACA,uBACA,8BACA,8BACA,oBACA,QACA,UACA,aACA,aACA,YACA,aACA,kBACA,YACA,UACA,QACA,UACA,UACA,MACA,YACA,gBACA,UACA,QACA,WACA,QACA,aACA,WACA,UACA,QACA,YACA,aACA,KACA,UACA,SACA,aACA,WACA,UACA,cACA,UACA,UACA,OACA,eACA,eACA,gBACA,UACA,OACA,QACA,kBACA,iBACA,OACA,QACA,QACA,qBACA,gBACA,QACA,0BACA,OACA,eACA,QACA,eACA,iBACA,oBACA,kBACA,oBACA,cACA,eACA,gBACA,oBACA,MACA,WACA,sBACA,sBACA,uBACA,oBACA,qBACA,oBACA,gBACA,kBACA,eACA,iBACA,QACA,gBACA,YACA,WACA,SACA,oBACA,aACA,iBACA,SACA,SACA,eACA,WACA,cACA,OACA,cACA,gBACA,gBACA,OACA,OACA,YACA,UACA,iBACA,gBACA,YACA,YACA,aACA,iBACA,0BACA,eACA,cACA,gBACA,oBACA,sBACA,iBACA,cACA,wBACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,cACA,cACA,aACA,oBACA,kBACA,YACA,iBACA,aACA,gBACA,oBACA,eACA,cACA,qBACA,OACA,YACA,eACA,QACA,UACA,UACA,UACA,UACA,YACA,YACA,OACA,QACA,UACA,OACA,MACA,aACA,qBACA,SACA,OACA,aACA,UACA,MACA,WACA,UACA,MACA,eACA,YACA,YACA,oBACA,OACA,WACA,OACA,aACA,YACA,QACA,QACA,iBACA,aACA,iBACA,mBACA,mBACA,cACA,SACA,gBACA,kBACA,gBACA,aACA,eACA,iBACA,eACA,eACA,MACA,SACA,iBACA,WACA,gBACA,uBACA,qBACA,oBACA,uBACA,cACA,iBACA,kBACA,cACA,YACA,QACA,WACA,UACA,WACA,oBACA,sBACA,oBACA,sBACA,aACA,QACA,sBACA,uBACA,UACA,SACA,iBACA,kBACA,wBACA,oBACA,0BACA,gBACA,aACA,iBACA,iBACA,SACA,aACA,iBACA,aACA,iBACA,QACA,gBACA,0BACA,kBACA,gBACA,eACA,eACA,eACA,eACA,YACA,kBACA,iBACA,gBACA,iBACA,kBACA,QACA,cACA,eACA,gBACA,2BACA,0BACA,0BACA,iBACA,qBACA,WACA,QACA,aACA,qBACA,sBACA,gBACA,oBACA,eACA,WACA,OACA,UACA,oBACA,WACA,QACA,cACA,qBACA,iBACA,QACA,SACA,UACA,gBACA,kBACA,QACA,cACA,QACA,uBACA,yBACA,cACA,UACA,gBACA,SACA,OACA,UACA,SACA,gBACA,wBACA,iBACA,UACA,SACA,aACA,SACA,YACA,YACA,WACA,QACA,YACA,SACA,iBACA,kBACA,UACA,cACA,OACA,wBACA,cACA,eACA,SACA,YACA,OACA,UACA,WACA,SACA,wBACA,uBACA,uBACA,kBACA,UACA,aACA,SACA,WACA,aACA,OACA,WACA,wBACA,0BACA,qBACA,sBACA,gBACA,oBACA,yBACA,2BACA,2BACA,sBACA,wBACA,oBACA,iBACA,iBACA,kBACA,2BACA,iBACA,QACA,OACA,WACA,kBACA,gBACA,UACA,wBACA,8CACA,yBACA,uBACA,sBACA,oBACA,yBACA,kBACA,WACA,iBACA,YACA,gBACA,YACA,aACA,MACA,aACA,SACA,OACA,gBACA,YACA,UACA,gBACA,gBACA,gBACA,aACA,OACA,cACA,YACA,QACA,yBACA,wBACA,yBACA,wBACA,OACA,UACA,QACA,uBACA,aACA,kBACA,QACA,UACA,YACA,qBACA,iBACA,aACA,aACA,YACA,uBACA,gBACA,eACA,OACA,gBACA,eACA,gBACA,oBACA,MACA,iBACA,SACA,iBACA,aACA,YACA,eACA,UACA,cACA,UACA,UACA,WACA,aACA,WACA,iBACA,gBACA,YACA,QACA,WACA,UACA,YACA,MACA,QACA,OACA,WACA,OACA,gBACA,UACA,YACA,YACA,gBACA,gBACA,cACA,OACA,YACA,gBACA,KACA,OACA,cACA,cACA,MACA,gBACA,wBACA,wBACA,qBACA,YACA,gBACA,WACA,eACA,cACA,aACA,gBACA,cACA,aACA,eACA,WACA,gBACA,YACA,cACA,aACA,cACA,YACA,WACA,aACA,iBACA,aACA,YACA,cACA,cACA,aACA,YACA,UACA,WACA,YACA,UACA,QACA,UACA,YACA,kBACA,gBACA,WACA,KACA,MACA,WACA,UACA,OACA,YACA,iBACA,OACA,YACA,uBACA,UACA,gBCpwBEM,GAA6B,CAACzG,GAAqBM,IAGnDoG,GAA6B,GAa7BC,GAAwB,CAC5BlE,GACAY,GACAY,GACAC,GACAQ,GACAC,GACAO,6BAUDnO,EAAAA,SAAQhB,KAAA,CAAC,CACRiB,QAAS,CAAC4P,EAAAA,YAAa3P,EAAAA,cACvBG,aAAc,CAACqP,GAAeE,GAAUD,IACxCrP,QAAS,CAACuP,EAAAA,YAAa3P,EAAAA,aAAcwP,GAAeE,GAAUD,IAC9DG,UAAW,CAACtB,GAAmBW,QAEEY,IANnC,SAAAA,MCtCkB,SAAZC,MC2BN,IAAaC,GAA8CC,EAAAA,QAAQ,WAAY,CAC7EC,EAAAA,MACE,IACAC,EAAAA,MAAM,CACJzE,UAAW,kCAEb,CAAE0E,OAAQ,CAAEC,aAAc,KAE5BH,EAAAA,MACE,IACAC,EAAAA,MAAM,CACJzE,UAAW,gCAEb,CAAE0E,OAAQ,CAAEE,WAAY,OAE1BC,EAAAA,WACE,UACA,CAACC,EAAAA,MAA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","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  Optional,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Dir } from '@angular/cdk/bidi';\n\nexport interface IPageChangeEvent {\n  page: number;\n  maxPage: number;\n  pageSize: number;\n  total: number;\n  fromRow: number;\n  toRow: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-paging-bar',\n  templateUrl: './paging-bar.component.html',\n  styleUrls: ['./paging-bar.component.scss'],\n})\nexport class TdPagingBarComponent implements OnInit {\n  private _pageSize: number = 50;\n  private _total: number = 0;\n  private _page: number = 1;\n  private _fromRow: number = 1;\n  private _toRow: number = 1;\n  private _initialized: boolean = false;\n  private _pageLinks: number[] = [];\n  private _pageLinkCount: number = 0;\n  // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n  private _hitEnd: boolean = false;\n  // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n  private _hitStart: boolean = false;\n\n  /**\n   * firstLast?: boolean\n   * Shows or hides the first and last page buttons of the paging bar. Defaults to 'false'\n   */\n  @Input('firstLast') firstLast: boolean = true;\n\n  /**\n   * initialPage?: number\n   * Sets starting page for the paging bar. Defaults to '1'\n   */\n  @Input('initialPage') initialPage: number = 1;\n\n  /**\n   * pageLinkCount?: number\n   * Amount of page navigation links for the paging bar. Defaults to '0'\n   */\n  @Input('pageLinkCount')\n  set pageLinkCount(pageLinkCount: number) {\n    this._pageLinkCount = coerceNumberProperty(pageLinkCount);\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageLinkCount(): number {\n    return this._pageLinkCount;\n  }\n\n  /**\n   * pageSize?: number\n   * Selected page size for the pagination. Defaults 50.\n   */\n  @Input('pageSize')\n  set pageSize(pageSize: number) {\n    this._pageSize = coerceNumberProperty(pageSize);\n    this._page = 1;\n    if (this._initialized) {\n      this._handleOnChange();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  /**\n   * total: number\n   * Total rows for the pagination.\n   */\n  @Input('total')\n  set total(total: number) {\n    this._total = coerceNumberProperty(total);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get total(): number {\n    return this._total;\n  }\n\n  /**\n   * pageLinks: number[]\n   * Returns the pageLinks in an array\n   */\n  get pageLinks(): number[] {\n    return this._pageLinks;\n  }\n\n  /**\n   * range: string\n   * Returns the range of the rows.\n   */\n  get range(): string {\n    return `${!this._toRow ? 0 : this._fromRow}-${this._toRow}`;\n  }\n\n  /**\n   * page: number\n   * Returns the current page.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * page: number\n   * Returns the max page for the current pageSize and total.\n   */\n  get maxPage(): number {\n    return Math.ceil(this._total / this._pageSize);\n  }\n\n  /**\n   * change?: function\n   * Method to be executed when page size changes or any button is clicked in the paging bar.\n   * Emits an [IPageChangeEvent] implemented object.\n   */\n  @Output('change') onChange: EventEmitter<IPageChangeEvent> = new EventEmitter<IPageChangeEvent>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._page = coerceNumberProperty(this.initialPage);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._initialized = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * navigateToPage?: function\n   * Navigates to a specific valid page. Returns 'true' if page is valid, else 'false'.\n   */\n  navigateToPage(page: number): boolean {\n    if (page === 1 || (page >= 1 && page <= this.maxPage)) {\n      this._page = coerceNumberProperty(Math.floor(page));\n      this._handleOnChange();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * firstPage?: function\n   * Navigates to the first page. Returns 'true' if page is valid, else 'false'.\n   */\n  firstPage(): boolean {\n    return this.navigateToPage(1);\n  }\n\n  /**\n   * prevPage?: function\n   * Navigates to the previous page. Returns 'true' if page is valid, else 'false'.\n   */\n  prevPage(): boolean {\n    return this.navigateToPage(this._page - 1);\n  }\n\n  /**\n   * nextPage?: function\n   * Navigates to the next page. Returns 'true' if page is valid, else 'false'.\n   */\n  nextPage(): boolean {\n    return this.navigateToPage(this._page + 1);\n  }\n\n  /**\n   * lastPage?: function\n   * Navigates to the last page. Returns 'true' if page is valid, else 'false'.\n   */\n  lastPage(): boolean {\n    return this.navigateToPage(this.maxPage);\n  }\n\n  isMinPage(): boolean {\n    return this._page <= 1;\n  }\n\n  isMaxPage(): boolean {\n    return this._page >= this.maxPage;\n  }\n\n  private _calculateRows(): void {\n    let top: number = this._pageSize * this._page;\n    this._fromRow = this._pageSize * (this._page - 1) + 1;\n    this._toRow = this._total > top ? top : this._total;\n  }\n\n  /**\n   * _calculatePageLinks?: function\n   * Calculates the page links that should be shown to the user based on the current state of the paginator\n   */\n  private _calculatePageLinks(): void {\n    // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n    if (this.isMaxPage()) {\n      this._hitEnd = true;\n      this._hitStart = false;\n    }\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n    if (this.isMinPage()) {\n      this._hitEnd = false;\n      this._hitStart = true;\n    }\n    // If the pageLinkCount goes above max possible pages based on perpage setting then reset it to maxPage\n    let actualPageLinkCount: number = this.pageLinkCount;\n    if (this.pageLinkCount > this.maxPage) {\n      actualPageLinkCount = this.maxPage;\n    }\n    // reset the pageLinks array\n    this._pageLinks = [];\n    // fill in the array with the pageLinks based on the current selected page\n    let middlePageLinks: number = Math.floor(actualPageLinkCount / 2);\n    for (let x: number = 0; x < actualPageLinkCount; x++) {\n      // don't go past the maxPage in the pageLinks\n      // have to handle even and odd pageLinkCounts differently so can still lead to the next numbers\n      if (\n        (actualPageLinkCount % 2 === 0 && this.page + middlePageLinks > this.maxPage) ||\n        (actualPageLinkCount % 2 !== 0 && this.page + middlePageLinks >= this.maxPage)\n      ) {\n        this._pageLinks[x] = this.maxPage - (actualPageLinkCount - (x + 1));\n        // if the selected page is after the middle then set that page as middle and get the correct balance on left and right\n        // special handling when there are only 2 pageLinks to just drop to next if block so can lead to next numbers when moving to right\n        // when moving to the left then go into this block\n      } else if (\n        (actualPageLinkCount > 2 || (actualPageLinkCount <= 2 && this._hitEnd)) &&\n        this.page - middlePageLinks > 0\n      ) {\n        this._pageLinks[x] = this.page - middlePageLinks + x;\n        // if the selected page is before the middle then set the pages based on the x index leading up to and after selected page\n      } else if (this.page - middlePageLinks <= 0) {\n        this._pageLinks[x] = x + 1;\n        // other wise just set the array in order starting from the selected page\n      } else {\n        this._pageLinks[x] = this.page + x;\n      }\n    }\n  }\n\n  private _handleOnChange(): void {\n    this._calculateRows();\n    this._calculatePageLinks();\n    let event: IPageChangeEvent = {\n      page: this._page,\n      maxPage: this.maxPage,\n      pageSize: this._pageSize,\n      total: this._total,\n      fromRow: this._fromRow,\n      toRow: this._toRow,\n    };\n    this._changeDetectorRef.markForCheck();\n    this.onChange.emit(event);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdPagingBarComponent } from './paging-bar.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatButtonModule],\n  declarations: [TdPagingBarComponent],\n  exports: [TdPagingBarComponent],\n})\nexport class CovalentPagingModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({ selector: '[tdVirtualScrollRow]' })\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  QueryList,\n  ViewChildren,\n  ElementRef,\n  HostListener,\n  Renderer2,\n  AfterViewChecked,\n  OnDestroy,\n  TrackByFunction,\n} from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\n\nconst TD_VIRTUAL_OFFSET: number = 2;\nconst SCROLL_DEBOUNCE: number = 200;\n\nexport interface ITdVirtualScrollBottomEvent {\n  lastRow: any;\n  lastIndex: number;\n}\n\n@Component({\n  selector: 'td-virtual-scroll-container',\n  styleUrls: ['./virtual-scroll-container.component.scss'],\n  templateUrl: './virtual-scroll-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n  private _subs: Subscription[] = [];\n  private _bottom: Subject<any> = new Subject();\n  private _initialized: boolean = false;\n\n  private _totalHeight: number = 0;\n  private _hostHeight: number = 0;\n  private _scrollVerticalOffset: number = 0;\n  private _offsetTransform: SafeStyle;\n\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  private _data: any[];\n  private _virtualData: any[];\n\n  /**\n   * data: any[]\n   * List of items to virtually iterate on.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    if (this._initialized) {\n      this._calculateVirtualRows();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * bottom: function\n   * Method to be executed when user scrolled to the last item of the list.\n   * An [ITdVirtualScrollBottomEvent] event is emitted\n   */\n  @Output() bottom: EventEmitter<ITdVirtualScrollBottomEvent> = new EventEmitter<ITdVirtualScrollBottomEvent>();\n\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\n\n  @ContentChild(TdVirtualScrollRowDirective) _rowTemplate: TdVirtualScrollRowDirective;\n\n  get rowHeight(): number {\n    if (this._rows && this._rows.toArray()[0]) {\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\n    }\n    return 0;\n  }\n\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _domSanitizer: DomSanitizer,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this._subs.push(\n      this._rows.changes.subscribe(() => {\n        this._calculateVirtualRows();\n      }),\n    );\n    this._initialized = true;\n    this._calculateVirtualRows();\n\n    this._subs.push(\n      this._bottom.pipe(debounceTime(SCROLL_DEBOUNCE)).subscribe(() => {\n        this.bottom.emit({\n          lastRow: this._data[this._data.length - 1],\n          lastIndex: this.toRow,\n        });\n      }),\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    let newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\n    if (this._hostHeight !== newHostHeight) {\n      this._hostHeight = newHostHeight;\n      if (this._initialized) {\n        this._calculateVirtualRows();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * trackBy?: TrackByFunction\n   * This accepts the same trackBy function [ngFor] does.\n   * https://angular.io/api/core/TrackByFunction\n   */\n  @Input('trackBy') trackBy: TrackByFunction<any> = (index: number, item: any) => {\n    return item;\n  };\n\n  @HostListener('scroll', ['$event'])\n  handleScroll(event: Event): void {\n    let element: HTMLElement = <HTMLElement>event.target;\n    if (element) {\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._scrollVerticalOffset = verticalScroll;\n        if (this._initialized) {\n          this._calculateVirtualRows();\n        }\n      }\n      if (this._initialized) {\n        // check to see if bottom was hit to throw the bottom event\n        if (this._data.length * this.rowHeight - (verticalScroll + this._hostHeight) === 0) {\n          this._bottom.next();\n        }\n      }\n    }\n  }\n\n  /**\n   * Method to refresh and recalculate the virtual rows\n   * e.g. after changing the [data] content\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Method to scroll to a specific row of the list.\n   */\n  scrollTo(row: number): void {\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the start of the list.\n   */\n  scrollToStart(): void {\n    this.scrollTo(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the end of the list.\n   */\n  scrollToEnd(): void {\n    this.scrollTo(this.totalHeight / this.rowHeight);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _calculateVirtualRows(): void {\n    if (this._data) {\n      this._totalHeight = this._data.length * this.rowHeight;\n      let fromRow: number = Math.floor(this._scrollVerticalOffset / this.rowHeight) - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n      let range: number = Math.floor(this._hostHeight / this.rowHeight) + TD_VIRTUAL_OFFSET * 2;\n      let toRow: number = range + this.fromRow;\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    if (this._scrollVerticalOffset > TD_VIRTUAL_OFFSET * this.rowHeight) {\n      offset = this.fromRow * this.rowHeight;\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle(\n      'translateY(' + (offset - this.totalHeight) + 'px)',\n    );\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\n\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [TdVirtualScrollRowDirective, TdVirtualScrollContainerComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TD_VIRTUAL_SCROLL],\n  exports: [TD_VIRTUAL_SCROLL],\n})\nexport class CovalentVirtualScrollModule {}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  AfterContentInit,\n} from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\nexport const DEFAULT_NOTIFICATION_LIMIT: number = 99;\n\n@Component({\n  selector: 'td-notification-count',\n  styleUrls: ['./notification-count.component.scss'],\n  templateUrl: './notification-count.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n  private _limit: number = DEFAULT_NOTIFICATION_LIMIT;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content') content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n  /**\n   * limit?: number\n   * Limit for notification count. If the number of notifications is greater than limit, then + will be added. Defaults to 99.\n   */\n  @Input()\n  set limit(limit: number) {\n    this._limit = limit;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > this._limit) {\n      return `${this._limit}+`;\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      let contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [TdNotificationCountComponent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TD_NOTIFICATIONS],\n  exports: [TD_NOTIFICATIONS],\n})\nexport class CovalentNotificationsModule {}\n","import { Directive } from '@angular/core';\nimport { HostListener, Host, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdAutoTrim]',\n})\nexport class TdAutoTrimDirective {\n  constructor(@Optional() @Host() private _model: NgModel) {}\n\n  /**\n   * Listens to host's (blur) event and trims value.\n   */\n  @HostListener('blur', ['$event'])\n  onBlur(event: Event): void {\n    if (this._model && this._model.value && typeof this._model.value === 'string') {\n      this._model.update.emit(this._model.value.trim());\n    }\n  }\n}\n","import { Directive, HostListener, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\ninterface IFsDocument extends HTMLDocument {\n  fullscreenElement: Element;\n  webkitFullscreenElement: Element;\n  mozFullscreenElement: Element;\n  msFullscreenElement: Element;\n  webkitExitFullscreen: () => void;\n  mozCancelFullScreen: () => void;\n  msExitFullscreen: () => void;\n}\n\n@Directive({\n  selector: '[tdFullScreen]',\n  exportAs: 'tdFullScreen',\n})\nexport class TdFullscreenDirective {\n  fullScreenIsActive: boolean = false;\n  constructor(@Inject(DOCUMENT) private _document: IFsDocument, private _el: ElementRef) {}\n\n  @HostListener('document:fullscreenchange', ['$event'])\n  @HostListener('document:webkitfullscreenchange', ['$event'])\n  @HostListener('document:mozfullscreenchange', ['$event'])\n  @HostListener('document:msfullscreenchange', ['$event'])\n  public fsChangeHandler(event: Event): void {\n    this.fullScreenIsActive = event.srcElement === this._getFullScreenElement();\n  }\n\n  public toggleFullScreen(): void {\n    this._getFullScreenElement() === this._el.nativeElement ? this.exitFullScreen() : this.enterFullScreen();\n  }\n\n  public enterFullScreen(): void {\n    const {\n      _el: { nativeElement },\n    }: TdFullscreenDirective = this;\n    const enterFullScreenMap: object = {\n      requestFullscreen: () => nativeElement.requestFullscreen(), // Chrome\n      webkitRequestFullscreen: () => nativeElement.webkitRequestFullscreen(), // Safari\n      mozRequestFullScreen: () => nativeElement.mozRequestFullScreen(), // Firefox\n      msRequestFullscreen: () => nativeElement.msRequestFullscreen(), // IE\n    };\n\n    for (const handler of Object.keys(enterFullScreenMap)) {\n      if (nativeElement[handler]) {\n        enterFullScreenMap[handler]();\n      }\n    }\n  }\n\n  public exitFullScreen(): void {\n    const {\n      _document,\n      _el: { nativeElement },\n    }: TdFullscreenDirective = this;\n    const exitFullScreenMap: object = {\n      exitFullscreen: () => _document.exitFullscreen(), // Chrome\n      webkitExitFullscreen: () => _document.webkitExitFullscreen(), // Safari\n      mozCancelFullScreen: () => _document.mozCancelFullScreen(), // Firefox\n      msExitFullscreen: () => _document.msExitFullscreen(), // IE\n    };\n\n    for (const handler of Object.keys(exitFullScreenMap)) {\n      if (_document[handler] && this._getFullScreenElement() === nativeElement) {\n        exitFullScreenMap[handler]();\n      }\n    }\n  }\n\n  private _getFullScreenElement(): Element {\n    const { _document }: TdFullscreenDirective = this;\n    const tdFullScreenElementMap: object = {\n      fullscreenElement: () => _document.fullscreenElement, // Chrome, Opera\n      webkitFullscreenElement: () => _document.webkitFullscreenElement, // Safari\n      mozFullscreenElement: () => _document.mozFullscreenElement, // Firefox\n      msFullscreenElement: () => _document.msFullscreenElement, // IE, Edge\n    };\n    for (const props of Object.keys(tdFullScreenElementMap)) {\n      if (_document[props]) {\n        return _document[props];\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TdTimeAgoPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((startTime - time.getTime()) / 1000);\n\n    if (diff < 2) {\n      return '1 second ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' seconds ago';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 minute ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' minutes ago';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 hour ago';\n    }\n    if (diff < 24) {\n      return Math.floor(diff) + ' hours ago';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return '1 day ago';\n    }\n    if (diff < 30) {\n      return Math.floor(diff) + ' days ago';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return '1 month ago';\n    }\n    if (diff < 12) {\n      return Math.floor(diff) + ' months ago';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return '1 year ago';\n    } else {\n      return Math.floor(diff) + ' years ago';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeDifference',\n})\nexport class TdTimeDifferencePipe implements PipeTransform {\n  transform(start: any, end?: any): string {\n    let startTime: Date = new Date(start);\n    let endTime: Date;\n\n    if (end !== undefined) {\n      endTime = new Date(end);\n    } else {\n      endTime = new Date();\n    }\n\n    if (!startTime.getTime() || !endTime.getTime()) {\n      return 'Invalid Date';\n    }\n\n    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\n\n    let days: number = Math.floor(diff / (60 * 60 * 24));\n    diff = diff - days * (60 * 60 * 24);\n\n    let hours: number = Math.floor(diff / (60 * 60));\n    diff = diff - hours * (60 * 60);\n\n    let minutes: number = Math.floor(diff / 60);\n    diff -= minutes * 60;\n\n    let seconds: number = diff;\n\n    let pad: string = '00';\n\n    let daysFormatted: string = '';\n\n    if (days > 0 && days < 2) {\n      daysFormatted = ' day - ';\n    } else if (days > 1) {\n      daysFormatted = ' days - ';\n    }\n\n    return (\n      (days > 0 ? days + daysFormatted : daysFormatted) +\n      pad.substring(0, pad.length - (hours + '').length) +\n      hours +\n      ':' +\n      pad.substring(0, pad.length - (minutes + '').length) +\n      minutes +\n      ':' +\n      pad.substring(0, pad.length - (seconds + '').length) +\n      seconds\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeUntil',\n})\nexport class TdTimeUntilPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((time.getTime() - startTime) / 1000);\n\n    if (diff < 2) {\n      return 'in 1 second';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' seconds';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 minute';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' minutes';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 hour';\n    }\n    if (diff < 24) {\n      return 'in ' + Math.floor(diff) + ' hours';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return 'in 1 day';\n    }\n    if (diff < 30) {\n      return 'in ' + Math.floor(diff) + ' days';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return 'in 1 month';\n    }\n    if (diff < 12) {\n      return 'in ' + Math.floor(diff) + ' months';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return 'in 1 year';\n    } else {\n      return 'in ' + Math.floor(diff) + ' years';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes',\n})\nexport class TdBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1024;\n    let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimalBytes',\n})\nexport class TdDecimalBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'digits',\n})\nexport class TdDigitsPipe implements PipeTransform {\n  private _decimalPipe: DecimalPipe;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {\n    this._decimalPipe = new DecimalPipe(this._locale);\n  }\n\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return the value */\n      return digits;\n    } else if (digits < 1) {\n      return this._decimalPipe.transform(digits.toFixed(precision));\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    let i: number = Math.floor(Math.log(digits) / Math.log(k));\n    let size: string = sizes[i];\n    return (\n      this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '')\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\nexport class TdTruncatePipe implements PipeTransform {\n  transform(text: any, length: number): string {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    // Truncate\n    let truncated: string = text.substr(0, length);\n\n    if (text.length > length) {\n      if (truncated.lastIndexOf(' ') > 0) {\n        truncated = truncated.trim();\n      }\n\n      truncated += 'â¦';\n    }\n\n    return truncated;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized } from '@angular/router';\n\nimport { filter, pairwise } from 'rxjs/operators';\n\n@Injectable()\nexport class RouterPathService {\n  private static _previousRoute: string = '/';\n  constructor(private _router: Router) {\n    this._router.events\n      .pipe(\n        filter((e: any) => e instanceof RoutesRecognized),\n        pairwise(),\n      )\n      .subscribe((e: any[]) => {\n        RouterPathService._previousRoute = e[0].urlAfterRedirects;\n      });\n  }\n\n  /*\n   * Utility function to get the route the user previously went to\n   * good for use in a \"back button\"\n   */\n  getPreviousRoute(): string {\n    return RouterPathService._previousRoute;\n  }\n}\n","/*\n * Copyright (C) 2016-2017 by Teradata Corporation. All rights reserved.\n * TERADATA CORPORATION CONFIDENTIAL AND TRADE SECRET\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IconService {\n  private _icons: string[] = [\n    'access_alarm',\n    'access_alarms',\n    'access_time',\n    'accessibility',\n    'account_balance',\n    'account_balance_wallet',\n    'account_box',\n    'account_circle',\n    'add',\n    'add_alarm',\n    'add_box',\n    'add_circle',\n    'add_circle_outline',\n    'add_shopping_cart',\n    'add_to_photos',\n    'adjust',\n    'alarm',\n    'alarm_add',\n    'alarm_off',\n    'alarm_on',\n    'album',\n    'android',\n    'announcement',\n    'apps',\n    'archive',\n    'arrow_back',\n    'arrow_drop_down',\n    'arrow_drop_down_circle',\n    'arrow_drop_up',\n    'arrow_forward',\n    'aspect_ratio',\n    'assessment',\n    'assignment',\n    'assignment_ind',\n    'assignment_late',\n    'assignment_return',\n    'assignment_returned',\n    'assignment_turned_in',\n    'assistant_photo',\n    'attach_file',\n    'attach_money',\n    'attachment',\n    'audiotrack',\n    'autorenew',\n    'av_timer',\n    'backspace',\n    'backup',\n    'battery_alert',\n    'battery_charging_full',\n    'battery_full',\n    'battery_std',\n    'battery_unknown',\n    'beenhere',\n    'block',\n    'bluetooth',\n    'bluetooth_audio',\n    'bluetooth_connected',\n    'bluetooth_disabled',\n    'bluetooth_searching',\n    'blur_circular',\n    'blur_linear',\n    'blur_off',\n    'blur_on',\n    'book',\n    'bookmark',\n    'bookmark_border',\n    'border_all',\n    'border_bottom',\n    'border_clear',\n    'border_color',\n    'border_horizontal',\n    'border_inner',\n    'border_left',\n    'border_outer',\n    'border_right',\n    'border_style',\n    'border_top',\n    'border_vertical',\n    'brightness_1',\n    'brightness_2',\n    'brightness_3',\n    'brightness_4',\n    'brightness_5',\n    'brightness_6',\n    'brightness_7',\n    'brightness_auto',\n    'brightness_high',\n    'brightness_low',\n    'brightness_medium',\n    'broken_image',\n    'brush',\n    'bug_report',\n    'build',\n    'business',\n    'cached',\n    'cake',\n    'call',\n    'call_end',\n    'call_made',\n    'call_merge',\n    'call_missed',\n    'call_received',\n    'call_split',\n    'camera',\n    'camera_alt',\n    'camera_front',\n    'camera_rear',\n    'camera_roll',\n    'cancel',\n    'cast',\n    'cast_connected',\n    'center_focus_strong',\n    'center_focus_weak',\n    'chat',\n    'check',\n    'check_box',\n    'check_box_outline_blank',\n    'check_circle',\n    'chevron_left',\n    'chevron_right',\n    'class',\n    'clear',\n    'clear_all',\n    'close',\n    'closed_caption',\n    'cloud',\n    'cloud_circle',\n    'cloud_done',\n    'cloud_download',\n    'cloud_off',\n    'cloud_queue',\n    'cloud_upload',\n    'collections',\n    'collections_bookmark',\n    'color_lens',\n    'colorize',\n    'comment',\n    'compare',\n    'computer',\n    'confirmation_number',\n    'contact_phone',\n    'contacts',\n    'content_copy',\n    'content_cut',\n    'content_paste',\n    'control_point',\n    'control_point_duplicate',\n    'create',\n    'credit_card',\n    'crop',\n    'crop_16_9',\n    'crop_3_2',\n    'crop_5_4',\n    'crop_7_5',\n    'crop_din',\n    'crop_free',\n    'crop_landscape',\n    'crop_original',\n    'crop_portrait',\n    'crop_square',\n    'dashboard',\n    'data_usage',\n    'dehaze',\n    'delete',\n    'description',\n    'desktop_mac',\n    'desktop_windows',\n    'details',\n    'developer_board',\n    'developer_mode',\n    'device_hub',\n    'devices',\n    'dialer_sip',\n    'dialpad',\n    'directions',\n    'directions_bike',\n    'directions_boat',\n    'directions_bus',\n    'directions_car',\n    'directions_railway',\n    'directions_run',\n    'directions_subway',\n    'directions_transit',\n    'directions_walk',\n    'disc_full',\n    'dns',\n    'do_not_disturb',\n    'do_not_disturb_alt',\n    'dock',\n    'domain',\n    'done',\n    'done_all',\n    'drafts',\n    'drive_eta',\n    'dvr',\n    'edit',\n    'eject',\n    'email',\n    'equalizer',\n    'error',\n    'error_outline',\n    'event',\n    'event_available',\n    'event_busy',\n    'event_note',\n    'event_seat',\n    'exit_to_app',\n    'expand_less',\n    'expand_more',\n    'explicit',\n    'explore',\n    'exposure',\n    'exposure_neg_1',\n    'exposure_neg_2',\n    'exposure_plus_1',\n    'exposure_plus_2',\n    'exposure_zero',\n    'extension',\n    'face',\n    'fast_forward',\n    'fast_rewind',\n    'favorite',\n    'favorite_border',\n    'feedback',\n    'file_download',\n    'file_upload',\n    'filter',\n    'filter_1',\n    'filter_2',\n    'filter_3',\n    'filter_4',\n    'filter_5',\n    'filter_6',\n    'filter_7',\n    'filter_8',\n    'filter_9',\n    'filter_9_plus',\n    'filter_b_and_w',\n    'filter_center_focus',\n    'filter_drama',\n    'filter_frames',\n    'filter_hdr',\n    'filter_list',\n    'filter_none',\n    'filter_tilt_shift',\n    'filter_vintage',\n    'find_in_page',\n    'find_replace',\n    'flag',\n    'flare',\n    'flash_auto',\n    'flash_off',\n    'flash_on',\n    'flight',\n    'flight_land',\n    'flight_takeoff',\n    'flip',\n    'flip_to_back',\n    'flip_to_front',\n    'folder',\n    'folder_open',\n    'folder_shared',\n    'folder_special',\n    'font_download',\n    'format_align_center',\n    'format_align_justify',\n    'format_align_left',\n    'format_align_right',\n    'format_bold',\n    'format_clear',\n    'format_color_fill',\n    'format_color_reset',\n    'format_color_text',\n    'format_indent_decrease',\n    'format_indent_increase',\n    'format_italic',\n    'format_line_spacing',\n    'format_list_bulleted',\n    'format_list_numbered',\n    'format_paint',\n    'format_quote',\n    'format_size',\n    'format_strikethrough',\n    'format_textdirection_l_to_r',\n    'format_textdirection_r_to_l',\n    'format_underlined',\n    'forum',\n    'forward',\n    'forward_10',\n    'forward_30',\n    'forward_5',\n    'fullscreen',\n    'fullscreen_exit',\n    'functions',\n    'gamepad',\n    'games',\n    'gesture',\n    'get_app',\n    'gif',\n    'gps_fixed',\n    'gps_not_fixed',\n    'gps_off',\n    'grade',\n    'gradient',\n    'grain',\n    'graphic_eq',\n    'grid_off',\n    'grid_on',\n    'group',\n    'group_add',\n    'group_work',\n    'hd',\n    'hdr_off',\n    'hdr_on',\n    'hdr_strong',\n    'hdr_weak',\n    'headset',\n    'headset_mic',\n    'healing',\n    'hearing',\n    'help',\n    'help_outline',\n    'high_quality',\n    'highlight_off',\n    'history',\n    'home',\n    'hotel',\n    'hourglass_empty',\n    'hourglass_full',\n    'http',\n    'https',\n    'image',\n    'image_aspect_ratio',\n    'import_export',\n    'inbox',\n    'indeterminate_check_box',\n    'info',\n    'info_outline',\n    'input',\n    'insert_chart',\n    'insert_comment',\n    'insert_drive_file',\n    'insert_emoticon',\n    'insert_invitation',\n    'insert_link',\n    'insert_photo',\n    'invert_colors',\n    'invert_colors_off',\n    'iso',\n    'keyboard',\n    'keyboard_arrow_down',\n    'keyboard_arrow_left',\n    'keyboard_arrow_right',\n    'keyboard_arrow_up',\n    'keyboard_backspace',\n    'keyboard_capslock',\n    'keyboard_hide',\n    'keyboard_return',\n    'keyboard_tab',\n    'keyboard_voice',\n    'label',\n    'label_outline',\n    'landscape',\n    'language',\n    'laptop',\n    'laptop_chromebook',\n    'laptop_mac',\n    'laptop_windows',\n    'launch',\n    'layers',\n    'layers_clear',\n    'leak_add',\n    'leak_remove',\n    'lens',\n    'library_add',\n    'library_books',\n    'library_music',\n    'link',\n    'list',\n    'live_help',\n    'live_tv',\n    'local_activity',\n    'local_airport',\n    'local_atm',\n    'local_bar',\n    'local_cafe',\n    'local_car_wash',\n    'local_convenience_store',\n    'local_dining',\n    'local_drink',\n    'local_florist',\n    'local_gas_station',\n    'local_grocery_store',\n    'local_hospital',\n    'local_hotel',\n    'local_laundry_service',\n    'local_library',\n    'local_mall',\n    'local_movies',\n    'local_offer',\n    'local_parking',\n    'local_pharmacy',\n    'local_phone',\n    'local_pizza',\n    'local_play',\n    'local_post_office',\n    'local_printshop',\n    'local_see',\n    'local_shipping',\n    'local_taxi',\n    'location_city',\n    'location_disabled',\n    'location_off',\n    'location_on',\n    'location_searching',\n    'lock',\n    'lock_open',\n    'lock_outline',\n    'looks',\n    'looks_3',\n    'looks_4',\n    'looks_5',\n    'looks_6',\n    'looks_one',\n    'looks_two',\n    'loop',\n    'loupe',\n    'loyalty',\n    'mail',\n    'map',\n    'markunread',\n    'markunread_mailbox',\n    'memory',\n    'menu',\n    'merge_type',\n    'message',\n    'mic',\n    'mic_none',\n    'mic_off',\n    'mms',\n    'mode_comment',\n    'mode_edit',\n    'money_off',\n    'monochrome_photos',\n    'mood',\n    'mood_bad',\n    'more',\n    'more_horiz',\n    'more_vert',\n    'mouse',\n    'movie',\n    'movie_creation',\n    'music_note',\n    'my_library_add',\n    'my_library_books',\n    'my_library_music',\n    'my_location',\n    'nature',\n    'nature_people',\n    'navigate_before',\n    'navigate_next',\n    'navigation',\n    'network_cell',\n    'network_locked',\n    'network_wifi',\n    'new_releases',\n    'nfc',\n    'no_sim',\n    'not_interested',\n    'note_add',\n    'notifications',\n    'notifications_active',\n    'notifications_none',\n    'notifications_off',\n    'notifications_paused',\n    'offline_pin',\n    'ondemand_video',\n    'open_in_browser',\n    'open_in_new',\n    'open_with',\n    'pages',\n    'pageview',\n    'palette',\n    'panorama',\n    'panorama_fish_eye',\n    'panorama_horizontal',\n    'panorama_vertical',\n    'panorama_wide_angle',\n    'party_mode',\n    'pause',\n    'pause_circle_filled',\n    'pause_circle_outline',\n    'payment',\n    'people',\n    'people_outline',\n    'perm_camera_mic',\n    'perm_contact_calendar',\n    'perm_data_setting',\n    'perm_device_information',\n    'perm_identity',\n    'perm_media',\n    'perm_phone_msg',\n    'perm_scan_wifi',\n    'person',\n    'person_add',\n    'person_outline',\n    'person_pin',\n    'personal_video',\n    'phone',\n    'phone_android',\n    'phone_bluetooth_speaker',\n    'phone_forwarded',\n    'phone_in_talk',\n    'phone_iphone',\n    'phone_locked',\n    'phone_missed',\n    'phone_paused',\n    'phonelink',\n    'phonelink_erase',\n    'phonelink_lock',\n    'phonelink_off',\n    'phonelink_ring',\n    'phonelink_setup',\n    'photo',\n    'photo_album',\n    'photo_camera',\n    'photo_library',\n    'photo_size_select_actual',\n    'photo_size_select_large',\n    'photo_size_select_small',\n    'picture_as_pdf',\n    'picture_in_picture',\n    'pin_drop',\n    'place',\n    'play_arrow',\n    'play_circle_filled',\n    'play_circle_outline',\n    'play_for_work',\n    'play_shopping_bag',\n    'playlist_add',\n    'plus_one',\n    'poll',\n    'polymer',\n    'portable_wifi_off',\n    'portrait',\n    'power',\n    'power_input',\n    'power_settings_new',\n    'present_to_all',\n    'print',\n    'public',\n    'publish',\n    'query_builder',\n    'question_answer',\n    'queue',\n    'queue_music',\n    'radio',\n    'radio_button_checked',\n    'radio_button_unchecked',\n    'rate_review',\n    'receipt',\n    'recent_actors',\n    'redeem',\n    'redo',\n    'refresh',\n    'remove',\n    'remove_circle',\n    'remove_circle_outline',\n    'remove_red_eye',\n    'reorder',\n    'repeat',\n    'repeat_one',\n    'replay',\n    'replay_10',\n    'replay_30',\n    'replay_5',\n    'reply',\n    'reply_all',\n    'report',\n    'report_problem',\n    'restaurant_menu',\n    'restore',\n    'ring_volume',\n    'room',\n    'rotate_90_degrees_ccw',\n    'rotate_left',\n    'rotate_right',\n    'router',\n    'satellite',\n    'save',\n    'scanner',\n    'schedule',\n    'school',\n    'screen_lock_landscape',\n    'screen_lock_portrait',\n    'screen_lock_rotation',\n    'screen_rotation',\n    'sd_card',\n    'sd_storage',\n    'search',\n    'security',\n    'select_all',\n    'send',\n    'settings',\n    'settings_applications',\n    'settings_backup_restore',\n    'settings_bluetooth',\n    'settings_brightness',\n    'settings_cell',\n    'settings_ethernet',\n    'settings_input_antenna',\n    'settings_input_component',\n    'settings_input_composite',\n    'settings_input_hdmi',\n    'settings_input_svideo',\n    'settings_overscan',\n    'settings_phone',\n    'settings_power',\n    'settings_remote',\n    'settings_system_daydream',\n    'settings_voice',\n    'share',\n    'shop',\n    'shop_two',\n    'shopping_basket',\n    'shopping_cart',\n    'shuffle',\n    'signal_cellular_4_bar',\n    'signal_cellular_connected_no_internet_4_bar',\n    'signal_cellular_no_sim',\n    'signal_cellular_null',\n    'signal_cellular_off',\n    'signal_wifi_4_bar',\n    'signal_wifi_4_bar_lock',\n    'signal_wifi_off',\n    'sim_card',\n    'sim_card_alert',\n    'skip_next',\n    'skip_previous',\n    'slideshow',\n    'smartphone',\n    'sms',\n    'sms_failed',\n    'snooze',\n    'sort',\n    'sort_by_alpha',\n    'space_bar',\n    'speaker',\n    'speaker_group',\n    'speaker_notes',\n    'speaker_phone',\n    'spellcheck',\n    'star',\n    'star_border',\n    'star_half',\n    'stars',\n    'stay_current_landscape',\n    'stay_current_portrait',\n    'stay_primary_landscape',\n    'stay_primary_portrait',\n    'stop',\n    'storage',\n    'store',\n    'store_mall_directory',\n    'straighten',\n    'strikethrough_s',\n    'style',\n    'subject',\n    'subtitles',\n    'supervisor_account',\n    'surround_sound',\n    'swap_calls',\n    'swap_horiz',\n    'swap_vert',\n    'swap_vertical_circle',\n    'switch_camera',\n    'switch_video',\n    'sync',\n    'sync_disabled',\n    'sync_problem',\n    'system_update',\n    'system_update_alt',\n    'tab',\n    'tab_unselected',\n    'tablet',\n    'tablet_android',\n    'tablet_mac',\n    'tag_faces',\n    'tap_and_play',\n    'terrain',\n    'text_format',\n    'textsms',\n    'texture',\n    'theaters',\n    'thumb_down',\n    'thumb_up',\n    'thumbs_up_down',\n    'time_to_leave',\n    'timelapse',\n    'timer',\n    'timer_10',\n    'timer_3',\n    'timer_off',\n    'toc',\n    'today',\n    'toll',\n    'tonality',\n    'toys',\n    'track_changes',\n    'traffic',\n    'transform',\n    'translate',\n    'trending_down',\n    'trending_flat',\n    'trending_up',\n    'tune',\n    'turned_in',\n    'turned_in_not',\n    'tv',\n    'undo',\n    'unfold_less',\n    'unfold_more',\n    'usb',\n    'verified_user',\n    'vertical_align_bottom',\n    'vertical_align_center',\n    'vertical_align_top',\n    'vibration',\n    'video_library',\n    'videocam',\n    'videocam_off',\n    'view_agenda',\n    'view_array',\n    'view_carousel',\n    'view_column',\n    'view_comfy',\n    'view_compact',\n    'view_day',\n    'view_headline',\n    'view_list',\n    'view_module',\n    'view_quilt',\n    'view_stream',\n    'view_week',\n    'vignette',\n    'visibility',\n    'visibility_off',\n    'voice_chat',\n    'voicemail',\n    'volume_down',\n    'volume_mute',\n    'volume_off',\n    'volume_up',\n    'vpn_key',\n    'vpn_lock',\n    'wallpaper',\n    'warning',\n    'watch',\n    'wb_auto',\n    'wb_cloudy',\n    'wb_incandescent',\n    'wb_iridescent',\n    'wb_sunny',\n    'wc',\n    'web',\n    'whatshot',\n    'widgets',\n    'wifi',\n    'wifi_lock',\n    'wifi_tethering',\n    'work',\n    'wrap_text',\n    'youtube_searched_for',\n    'zoom_in',\n    'zoom_out',\n  ];\n\n  get icons(): string[] {\n    return this._icons;\n  }\n\n  filter(query: string): string[] {\n    return this.icons.filter((el: string) => {\n      return el.toLowerCase().indexOf(query ? query.toLowerCase() : '') > -1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * Directives\n */\nimport { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';\nimport { TdFullscreenDirective } from './directives/fullscreen/fullscreen.directive';\n\nconst TD_DIRECTIVES: Type<any>[] = [TdAutoTrimDirective, TdFullscreenDirective];\n\n// Validators\nconst TD_VALIDATORS: Type<any>[] = [];\n\n/**\n * PIPES\n */\nimport { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';\nimport { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';\nimport { TdTimeUntilPipe } from './pipes/time-until/time-until.pipe';\nimport { TdBytesPipe } from './pipes/bytes/bytes.pipe';\nimport { TdDecimalBytesPipe } from './pipes/decimal-bytes/decimal-bytes.pipe';\nimport { TdDigitsPipe } from './pipes/digits/digits.pipe';\nimport { TdTruncatePipe } from './pipes/truncate/truncate.pipe';\n\nconst TD_PIPES: Type<any>[] = [\n  TdTimeAgoPipe,\n  TdTimeDifferencePipe,\n  TdTimeUntilPipe,\n  TdBytesPipe,\n  TdDecimalBytesPipe,\n  TdDigitsPipe,\n  TdTruncatePipe,\n];\n\n/**\n * Services\n */\n\nimport { RouterPathService } from './services/router-path.service';\nimport { IconService } from './services/icon.service';\n\n@NgModule({\n  imports: [FormsModule, CommonModule],\n  declarations: [TD_DIRECTIVES, TD_PIPES, TD_VALIDATORS],\n  exports: [FormsModule, CommonModule, TD_DIRECTIVES, TD_PIPES, TD_VALIDATORS],\n  providers: [RouterPathService, IconService],\n})\nexport class CovalentCommonModule {}\n","import { ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport { Observable, Subject } from 'rxjs';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport interface IControlValueAccessor extends ControlValueAccessor {\n  value: any;\n  valueChanges: Observable<any>;\n  onChange: (_: any) => any;\n  onTouched: () => any;\n}\n\nexport interface IHasChangeDetectorRef {\n  _changeDetectorRef: ChangeDetectorRef;\n}\n\n/** Mixin to augment a component with ngModel support. */\nexport function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>(\n  base: T,\n  initialValue?: any,\n): Constructor<IControlValueAccessor> & T {\n  return class extends base {\n    private _value: any = initialValue instanceof Array ? Object.assign([], initialValue) : initialValue;\n    private _subjectValueChanges: Subject<any>;\n    valueChanges: Observable<any>;\n\n    constructor(...args: any[]) {\n      super(...args);\n      this._subjectValueChanges = new Subject<any>();\n      this.valueChanges = this._subjectValueChanges.asObservable();\n    }\n\n    set value(v: any) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n        this._changeDetectorRef.markForCheck();\n        this._subjectValueChanges.next(v);\n      }\n    }\n    get value(): any {\n      return this._value;\n    }\n\n    writeValue(value: any): void {\n      this.value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n    }\n\n    onChange = (_: any) => noop;\n    onTouched = () => noop;\n  };\n}\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\n\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IRotateAnimation extends IAnimationOptions {\n  degrees?: number;\n  ease?: string;\n}\n\n/**\n * const tdRotateAnimation\n *\n * Parameter Options:\n * * degressStart: Degrees of rotation that the dom object will end up in during the \"false\" state\n * * degreesEnd: Degrees of rotation that the dom object will end up in during the \"true\" state\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerates and decelerates. Defaults to ease-in.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a rotation animation.\n *\n * usage: [@tdRotate]=\"{ value: true | false, params: { degreesEnd: 90 }}\"\n */\n\nexport const tdRotateAnimation: AnimationTriggerMetadata = trigger('tdRotate', [\n  state(\n    '0',\n    style({\n      transform: 'rotate({{ degressStart }}deg)',\n    }),\n    { params: { degressStart: 0 } },\n  ),\n  state(\n    '1',\n    style({\n      transform: 'rotate({{ degreesEnd }}deg)',\n    }),\n    { params: { degreesEnd: 180 } },\n  ),\n  transition(\n    '0 <=> 1',\n    [group([query('@*', animateChild(), { optional: true }), animate('{{ duration }}ms {{ delay }}ms {{ ease }}')])],\n    { params: { duration: 250, delay: '0', ease: 'ease-in' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface ICollapseAnimation extends IAnimationOptions {\n  easeOnClose?: string;\n  easeOnOpen?: string;\n}\n\n/**\n * const tdCollapseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnClose: Animation accelerates and decelerates when closing. Defaults to ease-in.\n * * easeOnOpen: Animation accelerates and decelerates when opening. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a collapse/expand animation.\n *\n * usage: [@tdCollapse]=\"{ value: true | false, params: { duration: 500 }}\"\n */\nexport const tdCollapseAnimation: AnimationTriggerMetadata = trigger('tdCollapse', [\n  state(\n    '1',\n    style({\n      height: '0',\n      overflow: 'hidden',\n    }),\n  ),\n  state(\n    '0',\n    style({\n      height: AUTO_STYLE,\n      overflow: AUTO_STYLE,\n    }),\n  ),\n  transition(\n    '0 => 1',\n    [\n      style({\n        overflow: 'hidden',\n        height: AUTO_STYLE,\n      }),\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          style({\n            height: '0',\n            overflow: 'hidden',\n          }),\n        ),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', ease: 'ease-in' } },\n  ),\n  transition(\n    '1 => 0',\n    [\n      style({\n        height: '0',\n        overflow: 'hidden',\n      }),\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          style({\n            overflow: 'hidden',\n            height: AUTO_STYLE,\n          }),\n        ),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IFadeInOutAnimation extends IAnimationOptions {\n  easeOnIn?: string;\n  easeOnOut?: string;\n}\n\n/**\n * const tdFadeInOutAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnIn: Animation accelerates and decelerates when fading in. Defaults to ease-in.\n * * easeOnOut: Animation accelerates and decelerates when fading out. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a fade animation.\n *\n * usage: [@tdFadeInOut]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger('tdFadeInOut', [\n  state(\n    '0',\n    style({\n      opacity: '0',\n      visibility: 'hidden',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      opacity: AUTO_STYLE,\n      visibility: AUTO_STYLE,\n    }),\n  ),\n  transition(\n    '0 => 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' } },\n  ),\n  transition(\n    '1 => 0',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),\n      ]),\n    ],\n    { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdBounceAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a bounce animation.\n *\n * usage: [@tdBounce]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdBounceAnimation: AnimationTriggerMetadata = trigger('tdBounce', [\n  state(\n    '0',\n    style({\n      transform: 'translate3d(0, 0, 0)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'translate3d(0, 0, 0)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.2,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -30px, 0)',\n              offset: 0.4,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -30px, 0)',\n              offset: 0.43,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.53,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n              transform: 'translate3d(0, -15px, 0)',\n              offset: 0.7,\n            }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 0.8,\n            }),\n            style({ transform: 'translate3d(0, -4px, 0)', offset: 0.9 }),\n            style({\n              animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n              transform: 'translate3d(0, 0, 0)',\n              offset: 1.0,\n            }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdFlashAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a flash animation.\n *\n * usage: [@tdFlash]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFlashAnimation: AnimationTriggerMetadata = trigger('tdFlash', [\n  state(\n    '0',\n    style({\n      opacity: 1,\n    }),\n  ),\n  state(\n    '1',\n    style({\n      opacity: 1,\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ opacity: 1, offset: 0 }),\n            style({ opacity: 0, offset: 0.25 }),\n            style({ opacity: 1, offset: 0.5 }),\n            style({ opacity: 0, offset: 0.75 }),\n            style({ opacity: 1, offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdHeadshakeAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a headshake animation.\n *\n * usage: [@tdHeadshake]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger('tdHeadshake', [\n  state(\n    '0',\n    style({\n      transform: 'translateX(0)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'translateX(0)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'translateX(0)', offset: 0 }),\n            style({ transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065 }),\n            style({ transform: 'translateX(5px) rotateY(7deg)', offset: 0.185 }),\n            style({ transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315 }),\n            style({ transform: 'translateX(2px) rotateY(3deg)', offset: 0.435 }),\n            style({ transform: 'translateX(0)', offset: 0.5 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdJelloAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a jello animation.\n *\n * usage: [@tdJello]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdJelloAnimation: AnimationTriggerMetadata = trigger('tdJello', [\n  state(\n    '0',\n    style({\n      transform: 'none',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'none',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'none', offset: 0 }),\n            style({ transform: 'none', offset: 0.011 }),\n            style({ transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222 }),\n            style({ transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333 }),\n            style({ transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444 }),\n            style({ transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555 }),\n            style({ transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666 }),\n            style({ transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777 }),\n            style({ transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import {\n  trigger,\n  state,\n  style,\n  keyframes,\n  transition,\n  animate,\n  AnimationTriggerMetadata,\n  AUTO_STYLE,\n  query,\n  animateChild,\n  group,\n} from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdPulseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a pulse animation.\n *\n * usage: [@tdPulse]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdPulseAnimation: AnimationTriggerMetadata = trigger('tdPulse', [\n  state(\n    '0',\n    style({\n      transform: 'scale3d(1, 1, 1)',\n    }),\n  ),\n  state(\n    '1',\n    style({\n      transform: 'scale3d(1, 1, 1)',\n    }),\n  ),\n  transition(\n    '0 <=> 1',\n    [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate(\n          '{{ duration }}ms {{ delay }}ms {{ ease }}',\n          keyframes([\n            style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),\n            style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),\n            style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),\n          ]),\n        ),\n      ]),\n    ],\n    { params: { duration: 500, delay: '0', ease: 'ease-out' } },\n  ),\n]);\n","import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CovalentValidators {\n  static min(minValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {\n      if (!!Validators.required(c) || (!minValue && minValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v < minValue ? { min: { minValue: minValue, actualValue: v } } : undefined;\n    };\n    return func;\n  }\n\n  static max(maxValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): { [key: string]: any } => {\n      if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v > maxValue ? { max: { maxValue: maxValue, actualValue: v } } : undefined;\n    };\n    return func;\n  }\n\n  static numberRequired(c: AbstractControl): { [key: string]: any } {\n    return Number.isNaN(c.value) ? { required: true } : undefined;\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Renderer2,\n  ElementRef,\n  AfterViewInit,\n  ViewContainerRef,\n  TemplateRef,\n  ViewChild,\n  HostBinding,\n  HostListener,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) {}\n}\n\n@Component({\n  selector: 'td-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [tdCollapseAnimation],\n})\nexport class TdMessageComponent implements AfterViewInit {\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): any {\n    return { value: !this._opened, duration: 100 };\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef,\n  ) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [TdMessageComponent, TdMessageContainerDirective];\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TD_MESSAGE],\n  exports: [TD_MESSAGE],\n})\nexport class CovalentMessageModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  forwardRef,\n  DoCheck,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  OnInit,\n  HostListener,\n  ElementRef,\n  Optional,\n  Inject,\n  Directive,\n  TemplateRef,\n  ViewContainerRef,\n  ContentChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterViewInit,\n  OnDestroy,\n  HostBinding,\n  Renderer2,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  ESCAPE,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  DELETE,\n  BACKSPACE,\n  ENTER,\n  SPACE,\n  TAB,\n  HOME,\n} from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable, Subscription, timer, merge, fromEvent } from 'rxjs';\nimport { filter, debounceTime } from 'rxjs/operators';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdChipsComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./chips.component.scss'],\n  templateUrl: './chips.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase\n  implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n  private _outsideClickSubs: Subscription = Subscription.EMPTY;\n  private _inputValueChangesSubs: Subscription = Subscription.EMPTY;\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _required: boolean = false;\n  private _tabIndex: number = 0;\n  private _touchendDebounce: number = 100;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input') _nativeInput: ElementRef;\n  @ViewChild(MatInput) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective) _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * required?: boolean\n   * Value is set to true if at least one chip is needed\n   * Defaults to false\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * returns the display placeholder\n   */\n  get displayPlaceHolder(): string {\n    if (!this.canAddChip) {\n      return '';\n    }\n    return this._required ? `${this.placeholder} *` : this.placeholder;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input('debounce') debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output('add') onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output('remove') onRemove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output('inputChange') onInputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output('chipFocus') onChipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output('chipBlur') onChipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * compareWith? function\n   * Function used to check whether a chip value already exists.\n   * Defaults to strict equality comparison ===\n   */\n  @Input('compareWith') compareWith: (o1: any, o2: any) => boolean = (o1: any, o2: any) => {\n    return o1 === o2;\n  };\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n    // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    timer()\n      .toPromise()\n      .then(() => {\n        this._isMousedown = false;\n      });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement || clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        timer()\n          .toPromise()\n          .then(() => {\n            this.removeFocusedState();\n          });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  ngOnInit(): void {\n    this._inputValueChangesSubs = this.inputControl.valueChanges\n      .pipe(debounceTime(this.debounce))\n      .subscribe((value: string) => {\n        this.onInputChange.emit(value ? value : '');\n      });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._outsideClickSubs.unsubscribe();\n    this._inputValueChangesSubs.unsubscribe();\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      let selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n\n    this._closeAutocomplete();\n    timer(this.debounce)\n      .toPromise()\n      .then(() => {\n        this.setFocusedState();\n        this._setFirstOptionActive();\n        this._openAutocomplete();\n      });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.findIndex((item: any) => this.compareWith(item, value)) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.onAdd.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    let removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === this._totalChips - 1 && index === 0) {\n      this._inputChild.focus();\n    } else if (index < this._totalChips - 1) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.onRemove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.onChipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.onChipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          let length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n          this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === this._totalChips - 1) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < this._totalChips - 1) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    let chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      timer()\n        .toPromise()\n        .then(() => {\n          if (this.focused && this._options && this._options.length > 0) {\n            // clean up of previously active options\n            this._options.toArray().forEach((option: MatOption) => {\n              option.setInactiveStyles();\n            });\n            // set the first one as active\n            this._options.toArray()[0].setActiveStyles();\n            this._internalActivateOption = true;\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      this._outsideClickSubs = merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n        .pipe(\n          debounceTime(this._touchendDebounce),\n          filter((event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return (\n              this.focused &&\n              clickTarget !== this._elementRef.nativeElement &&\n              !this._elementRef.nativeElement.contains(clickTarget) &&\n              !this._internalClick\n            );\n          }),\n        )\n        .subscribe(() => {\n          if (this.focused) {\n            this._autocompleteTrigger.closePanel();\n            this.removeFocusedState();\n            this.onTouched();\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n    }\n    return undefined;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [ReactiveFormsModule, CommonModule, MatInputModule, MatIconModule, MatChipsModule, MatAutocompleteModule],\n  declarations: [TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective],\n  exports: [TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective],\n})\nexport class CovalentChipsModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  Renderer2,\n  ElementRef,\n  ContentChildren,\n  QueryList,\n  HostListener,\n} from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styleUrls: ['./data-table-row.component.scss'],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableColumnRowComponent {\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styleUrls: ['./data-table-row.component.scss'],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableRowComponent {\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click')\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({ selector: '[tdDataTableTemplate]ng-template' })\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\n  @Input() tdDataTableTemplate: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  OnDestroy,\n  AfterViewInit,\n  ContentChildren,\n  TemplateRef,\n  AfterContentInit,\n  QueryList,\n  Inject,\n  Optional,\n  ViewChildren,\n  ElementRef,\n  OnInit,\n  AfterContentChecked,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\n\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\nimport {\n  ITdDataTableSortChangeEvent,\n  TdDataTableColumnComponent,\n} from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport enum TdDataTableSortingOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface ITdDataTableColumnWidth {\n  min?: number;\n  max?: number;\n}\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n  sortable?: boolean;\n  hidden?: boolean;\n  filter?: boolean;\n  width?: ITdDataTableColumnWidth | number;\n}\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n  index: number;\n}\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\nexport interface ITdDataTableRowClickEvent {\n  row: any;\n  index: number;\n}\n\nexport interface IInternalColumnWidth {\n  value: number;\n  limit: boolean;\n  index: number;\n  min?: boolean;\n  max?: boolean;\n}\n\n/**\n * Constant to set the rows offset before and after the viewport\n */\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n/**\n * Constant to set default row height if none is provided\n */\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\n\nexport class TdDataTableBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdDataTableComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-data-table',\n  styleUrls: ['./data-table.component.scss'],\n  templateUrl: './data-table.component.html',\n  inputs: ['value'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent extends _TdDataTableMixinBase\n  implements IControlValueAccessor, OnInit, AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\n  /** responsive width calculations */\n  private _resizeSubs: Subscription;\n  private _rowsChangedSubs: Subscription;\n  private _hostWidth: number = 0;\n\n  /** manually resizable columns */\n  private _resizableColumns: boolean = false;\n  private _columnClientX: number = 0;\n  private _columnResizeSubs: Subscription;\n  private _resizingColumn: number;\n  private _onColumnResize: Subject<number> = new Subject<number>();\n\n  get resizingColumn(): number {\n    return this._resizingColumn;\n  }\n\n  get hostWidth(): number {\n    // if the checkboxes are rendered, we need to remove their width\n    // from the total width to calculate properly\n    if (this.selectable) {\n      return this._hostWidth - 42;\n    }\n    return this._hostWidth;\n  }\n\n  private _widths: IInternalColumnWidth[] = [];\n  private _onResize: Subject<void> = new Subject<void>();\n\n  /** column header reposition and viewpoort */\n  private _verticalScrollSubs: Subscription;\n  private _horizontalScrollSubs: Subscription;\n  private _scrollHorizontalOffset: number = 0;\n\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\n\n  // Array of cached row heights to allow dynamic row heights\n  private _rowHeightCache: number[] = [];\n  // Total pseudo height of all the elements\n  private _totalHeight: number = 0;\n  // Total host height for the viewport\n  private _hostHeight: number = 0;\n  // Scrolled vertical pixels\n  private _scrollVerticalOffset: number = 0;\n  // Style to move the content a certain offset depending on scrolled offset\n  private _offsetTransform: SafeStyle;\n\n  // Variables that set from and to which rows will be rendered\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  /**\n   * Returns the offset style with a proper calculation on how much it should move\n   * over the y axis of the total height\n   */\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  /**\n   * Returns the assumed total height of the rows\n   */\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  /**\n   * Returns the initial row to render in the viewport\n   */\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  /**\n   * Returns the last row to render in the viewport\n   */\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  private _valueChangesSubs: Subscription;\n  /** internal attributes */\n  private _data: any[];\n  // data virtually iterated by component\n  private _virtualData: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _clickable: boolean = false;\n  private _multiple: boolean = true;\n  private _allSelected: boolean = false;\n  private _indeterminate: boolean = false;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** shift select */\n  private _shiftPreviouslyPressed: boolean = false;\n  private _lastSelectedIndex: number = -1;\n  private _firstSelectedIndex: number = -1;\n  private _firstCheckboxValue: boolean = false;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective) _templates: QueryList<TdDataTableTemplateDirective>;\n\n  @ViewChild('scrollableDiv') _scrollableDiv: ElementRef;\n\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\n\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\n\n  /**\n   * Returns scroll position to reposition column headers\n   */\n  get columnsLeftScroll(): number {\n    return this._scrollHorizontalOffset * -1;\n  }\n\n  /**\n   * Returns true if all values are selected.\n   */\n  get allSelected(): boolean {\n    return this._allSelected;\n  }\n\n  /**\n   * Returns true if all values are not deselected\n   * and at least one is.\n   */\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    this._rowHeightCache = [];\n    Promise.resolve().then(() => {\n      this.refresh();\n      // scroll back to the top if the data has changed\n      this._scrollableDiv.nativeElement.scrollTop = 0;\n    });\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      let row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * resizableColumns?: boolean\n   * Enables manual column resize.\n   * Defaults to 'false'\n   */\n  @Input('resizableColumns')\n  set resizableColumns(resizableColumns: boolean) {\n    this._resizableColumns = coerceBooleanProperty(resizableColumns);\n  }\n  get resizableColumns(): boolean {\n    return this._resizableColumns;\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(selectable: boolean) {\n    this._selectable = coerceBooleanProperty(selectable);\n  }\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  /**\n   * clickable?: boolean\n   * Enables row click events, hover.\n   * Defaults to 'false'\n   */\n  @Input('clickable')\n  set clickable(clickable: boolean) {\n    this._clickable = coerceBooleanProperty(clickable);\n  }\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: boolean) {\n    this._sortable = coerceBooleanProperty(sortable);\n  }\n  get sortable(): boolean {\n    return this._sortable;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n  get sortByColumn(): ITdDataTableColumn {\n    return this._sortBy;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ? TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n  get sortOrderEnum(): TdDataTableSortingOrder {\n    return this._sortOrder;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> = new EventEmitter<\n    ITdDataTableSortChangeEvent\n  >();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output('rowSelect') onRowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * rowClick?: function\n   * Event emitted when a row is clicked.\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\n   */\n  @Output('rowClick') onRowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<\n    ITdDataTableRowClickEvent\n  >();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output('selectAll') onSelectAll: EventEmitter<ITdDataTableSelectAllEvent> = new EventEmitter<\n    ITdDataTableSelectAllEvent\n  >();\n\n  constructor(\n    @Optional() @Inject(DOCUMENT) private _document: any,\n    private _elementRef: ElementRef,\n    private _domSanitizer: DomSanitizer,\n    _changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * compareWith?: function(row, model): boolean\n   * Allows custom comparison between row and model to see if row is selected or not\n   * Default comparation is by reference\n   */\n  @Input('compareWith') compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\n    return row === model;\n  };\n\n  /**\n   * Initialize observable for resize and scroll events\n   */\n  ngOnInit(): void {\n    // initialize observable for resize calculations\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\n      if (this._rows) {\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\n        });\n      }\n      this._calculateWidths();\n      this._calculateVirtualRows();\n    });\n\n    // initialize observable for column resize calculations\n    this._columnResizeSubs = this._onColumnResize\n      .asObservable()\n      .pipe(debounceTime(0))\n      .subscribe((clientX: number) => {\n        this._columnClientX = clientX;\n        this._calculateWidths();\n        this._changeDetectorRef.markForCheck();\n      });\n    // initialize observable for scroll column header reposition\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable().subscribe((horizontalScroll: number) => {\n      this._scrollHorizontalOffset = horizontalScroll;\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for virtual scroll rendering\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable().subscribe((verticalScroll: number) => {\n      this._scrollVerticalOffset = verticalScroll;\n      this._calculateVirtualRows();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (let i: number = 0; i < this._templates.toArray().length; i++) {\n      this._templateMap.set(this._templates.toArray()[i].tdDataTableTemplate, this._templates.toArray()[i].templateRef);\n    }\n  }\n\n  /**\n   * Checks hosts native elements widths to see if it has changed (resize check)\n   */\n  ngAfterContentChecked(): void {\n    // check if the scroll has been reset when element is hidden\n    if (this._scrollVerticalOffset - this._scrollableDiv.nativeElement.scrollTop > 5) {\n      // scroll back to the top if element has been reset\n      this._onVerticalScroll.next(0);\n    }\n    if (this._elementRef.nativeElement) {\n      let newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\n      // if the width has changed then we throw a resize event.\n      if (this._hostWidth !== newHostWidth) {\n        setTimeout(() => {\n          this._hostWidth = newHostWidth;\n          this._onResize.next();\n        }, 0);\n      }\n    }\n    if (this._scrollableDiv.nativeElement) {\n      let newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n      // if the height of the viewport has changed, then we mark for check\n      if (this._hostHeight !== newHostHeight) {\n        this._hostHeight = newHostHeight;\n        this._calculateVirtualRows();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Registers to an observable that checks if all rows have been rendered\n   * so we can start calculating the widths\n   */\n  ngAfterViewInit(): void {\n    this._rowsChangedSubs = this._rows.changes.pipe(debounceTime(0)).subscribe(() => {\n      this._onResize.next();\n    });\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Unsubscribes observables when data table is destroyed\n   */\n  ngOnDestroy(): void {\n    if (this._resizeSubs) {\n      this._resizeSubs.unsubscribe();\n    }\n    if (this._columnResizeSubs) {\n      this._columnResizeSubs.unsubscribe();\n    }\n    if (this._horizontalScrollSubs) {\n      this._horizontalScrollSubs.unsubscribe();\n    }\n    if (this._verticalScrollSubs) {\n      this._verticalScrollSubs.unsubscribe();\n    }\n    if (this._rowsChangedSubs) {\n      this._rowsChangedSubs.unsubscribe();\n    }\n    if (this._valueChangesSubs) {\n      this._valueChangesSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * Method that gets executed every time there is a scroll event\n   * Calls the scroll observable\n   */\n  handleScroll(event: Event): void {\n    let element: HTMLElement = <HTMLElement>event.target;\n    if (element) {\n      let horizontalScroll: number = element.scrollLeft;\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\n        this._onHorizontalScroll.next(horizontalScroll);\n      }\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._onVerticalScroll.next(verticalScroll);\n      }\n    }\n  }\n\n  /**\n   * Returns the width needed for the columns via index\n   */\n  getColumnWidth(index: number): number {\n    if (this._widths[index]) {\n      return this._widths[index].value;\n    }\n    return undefined;\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n  getTemplateRef(name: string): TemplateRef<any> {\n    return this._templateMap.get(name);\n  }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this.value.splice(0, this.value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n    this._calculateWidths();\n    this._calculateCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  selectAll(checked: boolean): void {\n    let toggledRows: any[] = [];\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this.value.push(row);\n          // checking which ones are being toggled\n          toggledRows.push(row);\n        }\n      });\n      this._allSelected = true;\n      this._indeterminate = true;\n    } else {\n      this._data.forEach((row: any) => {\n        // checking which ones are being toggled\n        if (this.isRowSelected(row)) {\n          toggledRows.push(row);\n          let modelRow: any = this.value.filter((val: any) => {\n            return this.compareWith(row, val);\n          })[0];\n          let index: number = this.value.indexOf(modelRow);\n          if (index > -1) {\n            this.value.splice(index, 1);\n          }\n        }\n      });\n      this._allSelected = false;\n      this._indeterminate = false;\n    }\n    this.onSelectAll.emit({ rows: toggledRows, selected: checked });\n    this.onChange(this.value);\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // compare items by [compareWith] function\n    return this.value\n      ? this.value.filter((val: any) => {\n          return this.compareWith(row, val);\n        }).length > 0\n      : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n   * handles cntrl clicks and shift clicks for multi-select\n   */\n  select(row: any, event: Event, currentSelected: number): void {\n    if (this.selectable) {\n      this.blockEvent(event);\n      // Check to see if Shift key is selected and need to select everything in between\n      let mouseEvent: MouseEvent = event as MouseEvent;\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n        let firstIndex: number = currentSelected;\n        let lastIndex: number = this._lastSelectedIndex;\n        if (currentSelected > this._lastSelectedIndex) {\n          firstIndex = this._lastSelectedIndex;\n          lastIndex = currentSelected;\n        }\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n        // else the checkboxes clicked are all after the initial one\n        if (\n          (this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n          (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)\n        ) {\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            if (this._firstSelectedIndex !== i) {\n              this._doSelection(this._data[i], i);\n            }\n          }\n        } else if (this._firstSelectedIndex > currentSelected || this._firstSelectedIndex < currentSelected) {\n          // change indexes depending on where the next checkbox is selected (before or after)\n          if (this._firstSelectedIndex > currentSelected) {\n            lastIndex--;\n          } else if (this._firstSelectedIndex < currentSelected) {\n            firstIndex++;\n          }\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            let rowSelected: boolean = this.isRowSelected(this._data[i]);\n            // if row is selected and first checkbox was selected\n            // or if row was unselected and first checkbox was unselected\n            // we ignore the toggle\n            if ((this._firstCheckboxValue && !rowSelected) || (!this._firstCheckboxValue && rowSelected)) {\n              this._doSelection(this._data[i], i);\n            } else if (this._shiftPreviouslyPressed) {\n              // else if the checkbox selected was in the middle of the last selection and the first selection\n              // then we undo the selections\n              if (\n                (currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex)\n              ) {\n                this._doSelection(this._data[i], i);\n              }\n            }\n          }\n        }\n        this._shiftPreviouslyPressed = true;\n        // if shift wasnt pressed, then we take the element checked as the first row\n        // incase the next click uses shift\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\n        this._shiftPreviouslyPressed = false;\n        this._firstSelectedIndex = currentSelected;\n      }\n      this._lastSelectedIndex = currentSelected;\n    }\n  }\n\n  /**\n   * Overrides the onselectstart method of the document so other text on the page\n   * doesn't get selected when doing shift selections.\n   */\n  disableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = function(): boolean {\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Resets the original onselectstart method.\n   */\n  enableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = undefined;\n    }\n  }\n\n  /**\n   * emits the onRowClickEvent when a row is clicked\n   * if clickable is true and selectable is false then select the row\n   */\n  handleRowClick(row: any, index: number, event: Event): void {\n    if (this.clickable) {\n      // ignoring linting rules here because attribute it actually null or not there\n      // can't check for undefined\n      const srcElement: any = event.srcElement || event.currentTarget;\n      let element: HTMLElement = event.target as HTMLElement;\n      /* tslint:disable-next-line */\n      if (srcElement.getAttribute('stopRowClick') === null && element.tagName.toLowerCase() !== 'mat-pseudo-checkbox') {\n        this.onRowClick.emit({\n          row: row,\n          index: index,\n        });\n      }\n    }\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder =\n        this._sortOrder === TdDataTableSortingOrder.Ascending\n          ? TdDataTableSortingOrder.Descending\n          : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Handle all keyup events when focusing a data table row\n   */\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        /** if user presses enter or space, the row should be selected */\n        if (this.selectable) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case UP_ARROW:\n        /**\n         * if users presses the up arrow, we focus the prev row\n         * unless its the first row\n         */\n        if (index > 0) {\n          this._rows.toArray()[index - 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case DOWN_ARROW:\n        /**\n         * if users presses the down arrow, we focus the next row\n         * unless its the last row\n         */\n        if (index < this._rows.toArray().length - 1) {\n          this._rows.toArray()[index + 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      default:\n      // default\n    }\n  }\n\n  /**\n   * Sets column index of the dragged column and initial clientX of column\n   */\n  _handleStartColumnDrag(index: number, event: MouseEvent): void {\n    this._columnClientX = event.clientX;\n    this._resizingColumn = index;\n  }\n\n  /**\n   * Calculates new width depending on new clientX of dragger column\n   */\n  _handleColumnDrag(event: MouseEvent | DragEvent): void {\n    // check if there was been a separator clicked for resize\n    if (this._resizingColumn !== undefined && event.clientX > 0) {\n      let xPosition: number = event.clientX;\n      // checks if the separator is being moved to try and resize the column, else dont do anything\n      if (xPosition > 0 && this._columnClientX > 0 && xPosition - this._columnClientX !== 0) {\n        // calculate the new width depending if making the column bigger or smaller\n        let proposedManualWidth: number = this._widths[this._resizingColumn].value + (xPosition - this._columnClientX);\n        // if the proposed new width is less than the projected min width of the column, use projected min width\n        if (proposedManualWidth < this._colElements.toArray()[this._resizingColumn].projectedWidth) {\n          proposedManualWidth = this._colElements.toArray()[this._resizingColumn].projectedWidth;\n        }\n        this.columns[this._resizingColumn].width = proposedManualWidth;\n        // update new x position for the resized column\n        this._onColumnResize.next(xPosition);\n      }\n    }\n  }\n\n  /**\n   * Ends dragged flags\n   */\n  _handleEndColumnDrag(): void {\n    this._columnClientX = undefined;\n    this._resizingColumn = undefined;\n  }\n\n  /**\n   * Method to prevent the default events\n   */\n  blockEvent(event: Event): void {\n    event.preventDefault();\n  }\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      let splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n  /**\n   * Does the actual Row Selection\n   */\n  private _doSelection(row: any, rowIndex: number): boolean {\n    let wasSelected: boolean = this.isRowSelected(row);\n    if (!wasSelected) {\n      if (!this._multiple) {\n        this.clearModel();\n      }\n      this.value.push(row);\n    } else {\n      // compare items by [compareWith] function\n      row = this.value.filter((val: any) => {\n        return this.compareWith(row, val);\n      })[0];\n      let index: number = this.value.indexOf(row);\n      if (index > -1) {\n        this.value.splice(index, 1);\n      }\n    }\n    this._calculateCheckboxState();\n    this.onRowSelect.emit({ row: row, index: rowIndex, selected: !wasSelected });\n    this.onChange(this.value);\n    return !wasSelected;\n  }\n\n  /**\n   * Calculate all the state of all checkboxes\n   */\n  private _calculateCheckboxState(): void {\n    if (this._data) {\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\n      this._indeterminate = false;\n      for (let row of this._data) {\n        if (!this.isRowSelected(row)) {\n          continue;\n        }\n        this._indeterminate = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Calculates the widths for columns and cells depending on content\n   */\n  private _calculateWidths(): void {\n    if (this._colElements && this._colElements.length) {\n      this._widths = [];\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\n        this._adjustColumnWidth(index, this._calculateWidth());\n      });\n      this._adjustColumnWidhts();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Adjusts columns after calculation to see if they need to be recalculated.\n   */\n  private _adjustColumnWidhts(): void {\n    let fixedTotalWidth: number = 0;\n    // get the number of total columns that have flexible widths (not fixed or hidden)\n    let flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\n      if (this.columns[index].hidden) {\n        return false;\n      }\n      if (width.limit || width.max || width.min) {\n        fixedTotalWidth += width.value;\n      }\n      return !width.limit && !width.max && !width.min;\n    }).length;\n    // calculate how much pixes are left that could be spread across\n    // the flexible columns\n    let recalculateHostWidth: number = 0;\n    if (fixedTotalWidth < this.hostWidth) {\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n    }\n    // if we have flexible columns and pixels to spare on them\n    // we try and spread the pixels across them\n    if (flexibleWidths && recalculateHostWidth) {\n      let newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\n      let adjustedNumber: number = 0;\n      // adjust the column widths with the spread pixels\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\n        if (\n          (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue) ||\n          (this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue) ||\n          !this._widths[colWidth.index].limit\n        ) {\n          this._adjustColumnWidth(colWidth.index, newValue);\n          adjustedNumber++;\n        }\n      });\n      // if there are still columns that need to be recalculated, we start over\n      let newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\n        return !width.limit && !width.max;\n      }).length;\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\n        this._adjustColumnWidhts();\n      }\n    }\n  }\n\n  /**\n   * Adjusts a single column to see if it can be recalculated\n   */\n  private _adjustColumnWidth(index: number, value: number): void {\n    this._widths[index] = {\n      value: value,\n      index: index,\n      limit: false,\n      min: false,\n      max: false,\n    };\n    // flag to see if we need to skip the min width projection\n    // depending if a width or min width has been provided\n    let skipMinWidthProjection: boolean = false;\n    if (this.columns[index]) {\n      // if the provided width has min/max, then we check to see if we need to set it\n      if (typeof this.columns[index].width === 'object') {\n        let widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\n        // if the column width is less than the configured min, we override it\n        skipMinWidthProjection = widthOpts && !!widthOpts.min;\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\n          this._widths[index].value = widthOpts.min;\n          this._widths[index].min = true;\n          // if the column width is more than the configured max, we override it\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n          this._widths[index].value = widthOpts.max;\n          this._widths[index].max = true;\n        }\n        // if it has a fixed width, then we just set it\n      } else if (typeof this.columns[index].width === 'number') {\n        this._widths[index].value = <number>this.columns[index].width;\n        skipMinWidthProjection = this._widths[index].limit = true;\n      }\n    }\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\n    if (!skipMinWidthProjection && this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n      this._widths[index].min = true;\n      this._widths[index].limit = false;\n    }\n  }\n\n  /**\n   * Generic method to calculate column width\n   */\n  private _calculateWidth(): number {\n    let renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\n    return Math.floor(this.hostWidth / renderedColumns.length);\n  }\n\n  /**\n   * Method to calculate the rows to be rendered in the viewport\n   */\n  private _calculateVirtualRows(): void {\n    let scrolledRows: number = 0;\n    if (this._data) {\n      this._totalHeight = 0;\n      let rowHeightSum: number = 0;\n      // loop through all rows to see if we have their height cached\n      // and sum them all to calculate the total height\n      this._data.forEach((d: any, i: number) => {\n        // iterate through all rows at first and assume all\n        // rows are the same height as the first one\n        if (!this._rowHeightCache[i]) {\n          this._rowHeightCache[i] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n        }\n        rowHeightSum += this._rowHeightCache[i];\n        // check how many rows have been scrolled\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\n          scrolledRows++;\n        }\n      });\n      this._totalHeight = rowHeightSum;\n      // set the initial row to be rendered taking into account the row offset\n      let fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n\n      let hostHeight: number = this._hostHeight;\n      let index: number = 0;\n      // calculate how many rows can fit in the viewport\n      while (hostHeight > 0) {\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\n        index++;\n      }\n      // set the last row to be rendered taking into account the row offset\n      let range: number = index - 1 + TD_VIRTUAL_OFFSET * 2;\n      let toRow: number = range + this.fromRow;\n      // if last row is greater than the total length, then we use the total length\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    // calculate the proper offset depending on how many rows have been scrolled\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\n      for (let index: number = 0; index < this.fromRow; index++) {\n        offset += this._rowHeightCache[index];\n      }\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle(\n      'translateY(' + (offset - this.totalHeight) + 'px)',\n    );\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Renderer2,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  ViewChild,\n} from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.scss'],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', { read: ElementRef }) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input('name') name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable') sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input('active') active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ? TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> = new EventEmitter<\n    ITdDataTableSortChangeEvent\n  >();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click')\n  handleClick(): void {\n    if (this.sortable) {\n      this.onSortChange.emit({ name: this.name, order: this._sortOrder });\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n}\n","import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\n\nexport type TdDataTableCellAlign = 'start' | 'center' | 'end';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td[td-data-table-cell]',\n  styleUrls: ['./data-table-cell.component.scss'],\n  templateUrl: './data-table-cell.component.html',\n})\nexport class TdDataTableCellComponent {\n  private _align: TdDataTableCellAlign;\n\n  /**\n   * numeric?: boolean\n   * Makes cell follow the numeric data-table specs.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * align?: 'start' | 'center' | 'end'\n   * Makes cell content align on demand\n   * Defaults to 'left', overrides numeric\n   */\n  @Input()\n  set align(align: TdDataTableCellAlign) {\n    this._align = align;\n  }\n  get align(): TdDataTableCellAlign {\n    return this._align;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n  }\n}\n","import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'table[td-data-table]',\n  styleUrls: ['./data-table-table.component.scss'],\n  templateUrl: './data-table-table.component.html',\n})\nexport class TdDataTableTableComponent {\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nimport { TdDataTableComponent } from './data-table.component';\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nconst TD_DATA_TABLE: Type<any>[] = [\n  TdDataTableComponent,\n  TdDataTableTemplateDirective,\n\n  TdDataTableColumnComponent,\n  TdDataTableCellComponent,\n  TdDataTableRowComponent,\n  TdDataTableColumnRowComponent,\n  TdDataTableTableComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule, MatTooltipModule, MatIconModule, MatPseudoCheckboxModule],\n  declarations: [TD_DATA_TABLE],\n  exports: [TD_DATA_TABLE],\n})\nexport class CovalentDataTableModule {}\n","import { Injectable } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TdDataTableService {\n  /**\n   * params:\n   * - data: any[]\n   * - searchTerm: string\n   * - ignoreCase: boolean = false\n   * - excludedColumns: string[] = []\n   *\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n   */\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\n    let filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n    if (filter) {\n      data = data.filter((item: any) => {\n        const res: any = Object.keys(item).find((key: string) => {\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n            const preItemValue: string = '' + item[key];\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n            return itemValue.indexOf(filter) > -1;\n          }\n        });\n        return !(typeof res === 'undefined');\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - sortBy: string\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n   *\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n   */\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\n    if (sortBy) {\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n      data.sort((a: any, b: any) => {\n        let compA: any = a[sortBy];\n        let compB: any = b[sortBy];\n        let direction: number = 0;\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n        } else {\n          if (compA < compB) {\n            direction = -1;\n          } else if (compA > compB) {\n            direction = 1;\n          }\n        }\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - fromRow: number\n   * - toRow: : number\n   *\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n   */\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\n    if (fromRow >= 1) {\n      data = data.slice(fromRow - 1, toRow);\n    }\n    return data;\n  }\n}\n","import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({ selector: 'td-dialog-title' })\nexport class TdDialogTitleDirective {}\n\n@Directive({ selector: 'td-dialog-content' })\nexport class TdDialogContentDirective {}\n\n@Directive({ selector: 'td-dialog-actions' })\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class TdDialogComponent implements AfterContentInit {\n  @ContentChildren(TdDialogTitleDirective) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss'],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  styleUrls: ['./prompt-dialog.component.scss'],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input') _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close(undefined);\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n","import { Injectable, ViewContainerRef, Provider, SkipSelf, Optional } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\n\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\n@Injectable()\nexport class TdDialogService {\n  constructor(private _dialogService: MatDialog) {}\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdAlertDialogComponent> = this._dialogService.open(\n      TdAlertDialogComponent,\n      dialogConfig,\n    );\n    let alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdConfirmDialogComponent> = this._dialogService.open(\n      TdConfirmDialogComponent,\n      dialogConfig,\n    );\n    let confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdPromptDialogComponent> = this._dialogService.open(\n      TdPromptDialogComponent,\n      dialogConfig,\n    );\n    let promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    let dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport {\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n} from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\nimport { TdDialogService } from './services/dialog.service';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatDialogModule, MatInputModule, MatButtonModule],\n  declarations: [TD_DIALOGS],\n  exports: [TD_DIALOGS],\n  providers: [TdDialogService],\n  entryComponents: [TD_DIALOGS_ENTRY_COMPONENTS],\n})\nexport class CovalentDialogsModule {}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n  ContentChild,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  tdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  tdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styleUrls: ['./expansion-panel.component.scss'],\n  templateUrl: './expansion-panel.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  animations: [tdCollapseAnimation, tdRotateAnimation],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective) expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective) expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit(undefined);\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit(undefined);\n  }\n}\n","import {\n  Component,\n  Renderer2,\n  ElementRef,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { TdExpansionPanelComponent } from './expansion-panel.component';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styleUrls: ['./expansion-panel-group.component.scss'],\n  templateUrl: './expansion-panel-group.component.html',\n})\nexport class TdExpansionPanelGroupComponent implements AfterContentInit, OnDestroy {\n  private _multi: boolean = false;\n\n  private _lastOpenedPanels: TdExpansionPanelComponent[] = [];\n\n  private _destroyed: Subject<boolean> = new Subject<boolean>();\n  private _stopWatchingPanels: Subject<boolean> = new Subject<boolean>();\n\n  /**\n   * multi?: boolean\n   * Sets whether multiple panels can be opened at a given time.\n   * Set to false for accordion mode.\n   * Defaults to false.\n   */\n  @Input('multi')\n  set multi(multi: boolean) {\n    this._multi = coerceBooleanProperty(multi);\n    if (this._multi === false && this._lastOpenedPanels.length > 0) {\n      this._closeAllExcept(this._lastOpenedPanels[this._lastOpenedPanels.length - 1]);\n    }\n  }\n\n  @ContentChildren(TdExpansionPanelComponent) expansionPanels: QueryList<TdExpansionPanelComponent>;\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel-group');\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next(true);\n    this._destroyed.unsubscribe();\n    this._stopWatchingPanels.next(true);\n    this._stopWatchingPanels.unsubscribe();\n  }\n\n  public ngAfterContentInit(): void {\n    if (!this._multi) {\n      const openedPanels: TdExpansionPanelComponent[] = this.expansionPanels.filter(\n        (expansionPanel: TdExpansionPanelComponent) => expansionPanel.expand,\n      );\n      const numOpenedPanels: number = openedPanels.length;\n      if (numOpenedPanels > 1) {\n        this._closeAllExcept(openedPanels[numOpenedPanels - 1]);\n      }\n    }\n\n    this._attachListeners(this.expansionPanels);\n\n    this.expansionPanels.changes\n      .pipe(takeUntil(this._destroyed))\n      .subscribe((expansionPanels: QueryList<TdExpansionPanelComponent>) => {\n        this._stopWatchingPanels.next(true);\n        this._stopWatchingPanels.unsubscribe();\n        this._stopWatchingPanels = new Subject<boolean>();\n        this._attachListeners(expansionPanels);\n      });\n  }\n\n  /**\n   * Opens all expansion panels, only if multi set set to true.\n   */\n  public openAll(): void {\n    if (this._multi) {\n      this.expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n        expansionPanel.open();\n      });\n    }\n  }\n\n  /**\n   * Closes all expansion panels\n   */\n  public closeAll(): void {\n    this.expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.close();\n    });\n  }\n\n  private _attachListeners(expansionPanels: QueryList<TdExpansionPanelComponent>): void {\n    this._lastOpenedPanels = [];\n    expansionPanels.forEach((expansionPanel: TdExpansionPanelComponent) => {\n      expansionPanel.expanded.pipe(takeUntil(this._stopWatchingPanels)).subscribe(() => {\n        const indexOfPanel: number = this._lastOpenedPanels.indexOf(expansionPanel);\n        if (indexOfPanel !== -1) {\n          this._lastOpenedPanels.splice(indexOfPanel, 1);\n        }\n        this._lastOpenedPanels.push(expansionPanel);\n\n        if (!this._multi) {\n          this._closeAllExcept(expansionPanel);\n        }\n      });\n\n      expansionPanel.collapsed.pipe(takeUntil(this._stopWatchingPanels)).subscribe(() => {\n        const indexOfPanel: number = this._lastOpenedPanels.indexOf(expansionPanel);\n        if (indexOfPanel !== -1) {\n          this._lastOpenedPanels.splice(indexOfPanel, 1);\n        }\n      });\n    });\n  }\n\n  private _closeAllExcept(expansionPanel: TdExpansionPanelComponent): void {\n    this.expansionPanels.forEach((panel: TdExpansionPanelComponent) => {\n      if (panel !== expansionPanel) {\n        panel.close();\n      }\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport {\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n} from './expansion-panel.component';\nimport { TdExpansionPanelGroupComponent } from './expansion-panel-group.component';\n\nconst TD_EXPANSION_PANEL: Type<any>[] = [\n  TdExpansionPanelGroupComponent,\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatRippleModule, MatIconModule, PortalModule],\n  declarations: [TD_EXPANSION_PANEL],\n  exports: [TD_EXPANSION_PANEL],\n})\nexport class CovalentExpansionPanelModule {}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {}\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      let fileInputEl: HTMLInputElement = <HTMLInputElement>event.target;\n      let files: FileList = fileInputEl.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\n      }\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (\n      this.disabled ||\n      (!this._multiple && ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))\n    ) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (\n        ((<any>types).contains && (<any>types).contains('Files')) ||\n        ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)\n      ) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput') _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n  /**\n   * Sets disable to the component. Implemented as part of ControlValueAccessor.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ContentChild,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdFileUploadComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscriber } from 'rxjs';\n\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: { [key: string]: string };\n  formData?: FormData;\n}\n\n@Injectable()\nexport class TdFileService {\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  constructor() {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * Will be depricated when Angular fixes [Http] to allow [FormData] as body.\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round((event.loaded / event.total) * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (let key in options.headers) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\nimport { TdFileService } from './services/file.service';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatIconModule, MatButtonModule, PortalModule],\n  declarations: [TD_FILE],\n  exports: [TD_FILE],\n  providers: [TdFileService],\n})\nexport class CovalentFileModule {}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styleUrls: ['./json-formatter.component.scss'],\n  templateUrl: './json-formatter.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdJsonFormatterComponent {\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    let elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? 'â¦' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, @Optional() private _dir: Dir) {}\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    let type: string = this.getType(value);\n    if (type === 'undefined' || type === 'null') {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return (\n        value\n          .toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{â¦}'\n      );\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      let date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]') {\n        if (!Number.isNaN(date.getTime())) {\n          return 'date';\n        }\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    let object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n      return 'Object';\n    }\n    let funcNameRegex: RegExp = /function (.{1,})\\(/;\n    let results: RegExpExecArray = funcNameRegex.exec(object.constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      let previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      let previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    let previewString: string = previewData.join(', ');\n    let ellipsis: string =\n      previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n      previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH\n        ? 'â¦'\n        : '';\n    return (\n      startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) + ellipsis + endChar\n    );\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (let key in this._data) {\n        this._children.push(key);\n      }\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [CommonModule, MatTooltipModule, MatIconModule],\n  declarations: [TdJsonFormatterComponent],\n  exports: [TdJsonFormatterComponent],\n})\nexport class CovalentJsonFormatterModule {}\n","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss'],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase {}\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable, private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n  @Input('tdLayoutToggle')\n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  @Input('tdLayoutClose')\n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n  @Input('tdLayoutOpen')\n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss'],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss'],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutNavListToggle')\n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutNavListClose')\n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutNavListOpen')\n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss'],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input('cardTitle') cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input('cardSubtitle') cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input('cardWidth') cardWidth: number = 70;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss'],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutManageListToggle')\n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutManageListClose')\n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutManageListOpen')\n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss'],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: string\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ContentChildren,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  Inject,\n  QueryList,\n  SecurityContext,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss'],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective) _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective) _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input('sidenavTitle') sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * avatar?: string\n   *\n   * avatar url to be displayed before the title\n   * If [icon] or [logo] are set, then this will not be shown.\n   */\n  @Input('avatar') avatar: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input('color') color: string;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      let sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input('name') name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input('email') email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n    @Optional() private _router: Router,\n    private _sanitize: DomSanitizer,\n  ) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollDispatchModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [TD_LAYOUTS],\n  exports: [TD_LAYOUTS],\n})\nexport class CovalentLayoutModule {}\n","import {\n  Component,\n  ViewChild,\n  TemplateRef,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  ElementRef,\n  DoCheck,\n} from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Observable, Subject } from 'rxjs';\n\nexport enum LoadingType {\n  Circular = 'circular',\n  Linear = 'linear',\n}\n\nexport enum LoadingMode {\n  Determinate = 'determinate',\n  Indeterminate = 'indeterminate',\n}\n\nexport enum LoadingStrategy {\n  Overlay = 'overlay',\n  Replace = 'replace',\n}\n\nexport enum LoadingStyle {\n  FullScreen = 'fullscreen',\n  Overlay = 'overlay',\n  None = 'none',\n}\n\nimport { tdFadeInOutAnimation } from '@covalent/core/common';\n\nexport const TD_CIRCLE_DIAMETER: number = 100;\n\n@Component({\n  selector: 'td-loading',\n  styleUrls: ['./loading.component.scss'],\n  templateUrl: './loading.component.html',\n  animations: [tdFadeInOutAnimation],\n})\nexport class TdLoadingComponent implements DoCheck {\n  private _animationIn: Subject<any> = new Subject<any>();\n  private _animationOut: Subject<any> = new Subject<any>();\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\n  private _value: number = 0;\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\n\n  /**\n   * Flag for animation\n   */\n  animation: boolean = false;\n\n  /**\n   * Content injected into loading component.\n   */\n  content: TemplatePortal<any>;\n\n  /**\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\n   */\n  set mode(mode: LoadingMode) {\n    this._defaultMode = mode;\n  }\n  get mode(): LoadingMode {\n    return this._mode;\n  }\n\n  /**\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\n   */\n  set value(value: number) {\n    this._value = value;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  style: LoadingStyle = LoadingStyle.None;\n\n  /**\n   * height: number\n   * Sets height of [TdLoadingComponent].\n   */\n  height: number;\n\n  /**\n   * type: LoadingType\n   * Sets type of [TdLoadingComponent] rendered.\n   */\n  type: LoadingType = LoadingType.Circular;\n\n  /**\n   * color: primary' | 'accent' | 'warn'\n   * Sets theme color of [TdLoadingComponent] rendered.\n   */\n  color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck(): void {\n    // When overlay is used and the host width has a value greater than 1px\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\n    if (this.isOverlay() && this._hostHeight() > 1) {\n      if (this.animation) {\n        this._setCircleDiameter();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  getHeight(): string {\n    // Ignore height if style is `overlay` or `fullscreen`.\n    // Add height if child elements have a height and style is `none`, else return default height.\n    if (this.isOverlay() || this.isFullScreen()) {\n      return undefined;\n    } else {\n      return this.height ? `${this.height}px` : '150px';\n    }\n  }\n\n  getCircleDiameter(): number {\n    return this._circleDiameter;\n  }\n\n  getCircleStrokeWidth(): number {\n    // we calculate the stroke width by setting it as 10% of its diameter\n    let strokeWidth: number = this.getCircleDiameter() / 10;\n    return Math.abs(strokeWidth);\n  }\n\n  isCircular(): boolean {\n    return this.type === LoadingType.Circular;\n  }\n\n  isLinear(): boolean {\n    return this.type === LoadingType.Linear;\n  }\n\n  isFullScreen(): boolean {\n    return this.style === LoadingStyle.FullScreen;\n  }\n\n  isOverlay(): boolean {\n    return this.style === LoadingStyle.Overlay;\n  }\n\n  animationComplete(event: AnimationEvent): void {\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\n    if (!event.fromState) {\n      this.inAnimationCompleted();\n    } else {\n      this.outAnimationCompleted();\n    }\n  }\n\n  inAnimationCompleted(): void {\n    this._animationIn.next(undefined);\n  }\n\n  outAnimationCompleted(): void {\n    /* little hack to reset the loader value and animation before removing it from DOM\n     * else, the loader will appear with prev value when its registered again\n     * and will do an animation going prev value to 0.\n     */\n    this.value = 0;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    this._animationOut.next(undefined);\n  }\n\n  /**\n   * Starts in animation and returns an observable for completition event.\n   */\n  startInAnimation(): Observable<any> {\n    /* need to switch back to the selected mode, so we have saved it in another variable\n     *  and then recover it. (issue with protractor)\n     */\n    this._mode = this._defaultMode;\n    // Set values before the animations starts\n    this._setCircleDiameter();\n    // Check for changes for `OnPush` change detection\n    this.animation = true;\n    this._changeDetectorRef.markForCheck();\n    return this._animationIn.asObservable();\n  }\n\n  /**\n   * Starts out animation and returns an observable for completition event.\n   */\n  startOutAnimation(): Observable<any> {\n    this.animation = false;\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\n     * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\n     */\n    this._mode = LoadingMode.Determinate;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    return this._animationOut.asObservable();\n  }\n\n  /**\n   * Calculate the proper diameter for the circle and set it\n   */\n  private _setCircleDiameter(): void {\n    // we set a default diameter of 100 since this is the default in material\n    let diameter: number = TD_CIRCLE_DIAMETER;\n    // if height is provided, then we take that as diameter\n    if (this.height) {\n      diameter = this.height;\n      // else if its not provided, then we take the host height\n    } else if (this.height === undefined) {\n      diameter = this._hostHeight();\n    }\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\n      this._circleDiameter = Math.floor(diameter);\n    } else {\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\n    }\n  }\n\n  /**\n   * Returns the host height of the loading component\n   */\n  private _hostHeight(): number {\n    if (<HTMLElement>this._elementRef.nativeElement) {\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return 0;\n  }\n}\n","import {\n  Injectable,\n  ComponentFactoryResolver,\n  ChangeDetectorRef,\n  Provider,\n  SkipSelf,\n  Optional,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingStyle } from '../loading.component';\nimport { ITdLoadingConfig } from './loading.service';\n\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\n  height?: number;\n  style?: LoadingStyle;\n}\n\nexport interface ILoadingRef {\n  observable: Observable<any>;\n  componentRef: ComponentRef<any>;\n  subject?: Subject<any>;\n  times?: number;\n}\n\n/**\n * NOTE: @internal usage only.\n */\n@Injectable()\nexport class TdLoadingFactory {\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _overlay: Overlay,\n    private _injector: Injector,\n  ) {}\n\n  /**\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\n   * into it. Leveraging the state and configuration from it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\n    let loadingRef: ILoadingRef = this._initializeContext();\n    let loading: boolean = false;\n    let overlayRef: OverlayRef;\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        overlayRef = this._createOverlay();\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\n        this._mapOptions(options, loadingRef.componentRef.instance);\n        loadingRef.componentRef.instance.startInAnimation();\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          loadingRef.componentRef.destroy();\n          overlayRef.detach();\n          overlayRef.dispose();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\n   * perfectly when overlaying it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createOverlayComponent(\n    options: ITdLoadingConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<Object>,\n  ): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\n    viewContainerRef.clear();\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        loadingRef.componentRef.instance.startOutAnimation();\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Replaces the template with the loading component depending if it was registered or resolved.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createReplaceComponent(\n    options: ITdLoadingConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<Object>,\n    context: TdLoadingContext,\n  ): ILoadingRef {\n    let nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling\n      ? nativeElement.nextElementSibling.scrollHeight\n      : undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    // passing context so when the template is attached, we can keep the reference of the variables\n    let contentRef: EmbeddedViewRef<Object> = viewContainerRef.createEmbeddedView(templateRef, context);\n    loadingRef.observable.pipe(distinctUntilChanged()).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        // detach the content and attach the loader if loader is there\n        let index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\n        if (index < 0) {\n          viewContainerRef.detach(viewContainerRef.indexOf(contentRef));\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n        }\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          // detach loader and attach the content if content is there\n          let index: number = viewContainerRef.indexOf(contentRef);\n          if (index < 0) {\n            viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\n            viewContainerRef.insert(contentRef, 0);\n          }\n          /**\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\n           * with \"OnPush\" change detection\n           */\n          contentRef.detectChanges();\n          contentRef.markForCheck();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a fullscreen overlay for the loading usage.\n   */\n  private _createOverlay(): OverlayRef {\n    let state: OverlayConfig = new OverlayConfig();\n    state.hasBackdrop = false;\n    state.positionStrategy = this._overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n    return this._overlay.create(state);\n  }\n\n  /**\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\n   */\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\n    let compRef: ILoadingRef = this._initializeContext();\n    compRef.componentRef = this._componentFactoryResolver\n      .resolveComponentFactory(TdLoadingComponent)\n      .create(this._injector);\n    this._mapOptions(options, compRef.componentRef.instance);\n    return compRef;\n  }\n\n  /**\n   * Initialize context for loading component.\n   */\n  private _initializeContext(): ILoadingRef {\n    let subject: Subject<any> = new Subject<any>();\n    return {\n      observable: subject.asObservable(),\n      subject: subject,\n      componentRef: undefined,\n      times: 0,\n    };\n  }\n\n  /**\n   * Maps configuration to the loading component instance.\n   */\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\n    instance.style = options.style;\n    if (options.type !== undefined) {\n      instance.type = options.type;\n    }\n    if (options.height !== undefined) {\n      instance.height = options.height;\n    }\n    if (options.mode !== undefined) {\n      instance.mode = options.mode;\n    }\n    if (options.color !== undefined) {\n      instance.color = options.color;\n    }\n  }\n}\n\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\n  parent: TdLoadingFactory,\n  componentFactoryResolver: ComponentFactoryResolver,\n  overlay: Overlay,\n  injector: Injector,\n): TdLoadingFactory {\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\n}\n\nexport const LOADING_FACTORY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingFactory,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\n\nexport interface ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n}\n\nexport class TdLoadingConfig implements ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n\n  constructor(config: ITdLoadingConfig) {\n    this.name = config.name;\n    if (!this.name) {\n      throw Error('Name is required for [TdLoading] configuration.');\n    }\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\n    this.type = config.type ? config.type : LoadingType.Circular;\n    this.color = config.color ? config.color : 'primary';\n  }\n}\n\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\n  strategy?: LoadingStrategy;\n}\n\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\n  name: string;\n  type: LoadingType;\n  mode: LoadingMode;\n  strategy: LoadingStrategy;\n\n  constructor(config: ITdLoadingDirectiveConfig) {\n    super(config);\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\n  }\n}\n\n@Injectable()\nexport class TdLoadingService {\n  private _context: { [key: string]: ILoadingRef } = {};\n  private _timeouts: { [key: string]: any } = {};\n\n  constructor(private _loadingFactory: TdLoadingFactory) {\n    this.create({\n      name: 'td-loading-main',\n    });\n  }\n\n  /**\n   * params:\n   * - config: ILoadingDirectiveConfig\n   * - viewContainerRef: ViewContainerRef\n   * - templateRef: TemplateRef<Object>\n   *\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\n   * Replaces the templateRef with the mask when a request is registered on it.\n   *\n   * NOTE: @internal usage only.\n   */\n  createComponent(\n    config: ITdLoadingDirectiveConfig,\n    viewContainerRef: ViewContainerRef,\n    templateRef: TemplateRef<Object>,\n    context: TdLoadingContext,\n  ): ILoadingRef {\n    let directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\n    if (this._context[directiveConfig.name]) {\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\n    }\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(\n        directiveConfig,\n        viewContainerRef,\n        templateRef,\n      );\n    } else {\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(\n        directiveConfig,\n        viewContainerRef,\n        templateRef,\n        context,\n      );\n    }\n    return this._context[directiveConfig.name];\n  }\n\n  /**\n   * params:\n   * - config: ITdLoadingConfig\n   *\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\n   * Only displayed when the mask has a request registered on it.\n   */\n  public create(config: ITdLoadingConfig): void {\n    let fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\n    this.removeComponent(fullscreenConfig.name);\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\n  }\n\n  /**\n   * params:\n   * - name: string\n   *\n   * Removes `loading` component from service context.\n   */\n  public removeComponent(name: string): void {\n    if (this._context[name]) {\n      this._context[name].subject.unsubscribe();\n      if (this._context[name].componentRef) {\n        this._context[name].componentRef.destroy();\n      }\n      this._context[name] = undefined;\n      delete this._context[name];\n    }\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - registers?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass registers argument to set a number of register calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.register()\n   */\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\n    // try registering into the service if the loading component has been instanciated or if it exists.\n    if (this._context[name]) {\n      registers = registers < 1 ? 1 : registers;\n      this._context[name].times += registers;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    } else {\n      // if it doesnt exist, set a timeout so its registered after change detection happens\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\n      if (!this._timeouts[name]) {\n        this._timeouts[name] = setTimeout(() => {\n          this.register(name, registers);\n        });\n      } else {\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\n        this._clearTimeout(name);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - resolves?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass resolves argument to set a number of resolve calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolve()\n   */\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      resolves = resolves < 1 ? 1 : resolves;\n      if (this._context[name].times > 0) {\n        let times: number = this._context[name].times;\n        times -= resolves;\n        this._context[name].times = times < 0 ? 0 : times;\n      }\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * returns: true if successful\n   *\n   * Resolves all request for the loading mask referenced by the name parameter.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolveAll()\n   */\n  public resolveAll(name: string = 'td-loading-main'): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      this._context[name].times = 0;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - value: number\n   * returns: true if successful\n   *\n   * Set value on a loading mask referenced by the name parameter.\n   * Usage only available if its mode is 'determinate' and if loading is showing.\n   */\n  public setValue(name: string, value: number): boolean {\n    if (this._context[name]) {\n      let instance: TdLoadingComponent = this._context[name].componentRef.instance;\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\n        instance.value = value;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Clears timeout linked to the name.\n   * @param name Name of the loading component to be cleared\n   */\n  private _clearTimeout(name: string): void {\n    clearTimeout(this._timeouts[name]);\n    delete this._timeouts[name];\n  }\n}\n\nexport function LOADING_PROVIDER_FACTORY(parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\n  return parent || new TdLoadingService(loadingFactory);\n}\n\nexport const LOADING_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingService,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\n  useFactory: LOADING_PROVIDER_FACTORY,\n};\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\n\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\nimport { TdLoadingService } from '../services/loading.service';\nimport { ILoadingRef } from '../services/loading.factory';\n\n/**\n * Context class for variable reference\n */\nexport class TdLoadingContext {\n  public $implicit: any = undefined;\n  public tdLoading: any = undefined;\n}\n\n// Constant for generation of the id for the next component\nlet TD_LOADING_NEXT_ID: number = 0;\n\n@Directive({\n  selector: '[tdLoading]',\n})\nexport class TdLoadingDirective implements OnInit, OnDestroy {\n  private _context: TdLoadingContext = new TdLoadingContext();\n  private _type: LoadingType;\n  private _mode: LoadingMode;\n  private _strategy: LoadingStrategy;\n  private _name: string;\n  private _loadingRef: ILoadingRef;\n\n  /**\n   * tdLoading: string\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\n   */\n  @Input('tdLoading')\n  set name(name: string) {\n    if (!this._name) {\n      if (name) {\n        this._name = name;\n      }\n    }\n  }\n\n  /**\n   * tdLoadingUntil?: any\n   * If its null, undefined or false it will be used to register requests to the mask.\n   * Else if its any value that can be resolved as true, it will resolve the mask.\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\n   */\n  @Input('tdLoadingUntil')\n  set until(until: any) {\n    if (!this._name) {\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\n    }\n    this._context.$implicit = this._context.tdLoading = until;\n    if (!until) {\n      this._loadingService.register(this._name);\n    } else {\n      this._loadingService.resolveAll(this._name);\n    }\n  }\n\n  /**\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\n   * Sets the type of loading mask depending on value.\n   * Defaults to [LoadingType.Circular | 'circular'].\n   */\n  @Input('tdLoadingType')\n  set type(type: LoadingType) {\n    switch (type) {\n      case LoadingType.Linear:\n        this._type = LoadingType.Linear;\n        break;\n      default:\n        this._type = LoadingType.Circular;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\n   * Sets the mode of loading mask depending on value.\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\n   */\n  @Input('tdLoadingMode')\n  set mode(mode: LoadingMode) {\n    switch (mode) {\n      case LoadingMode.Determinate:\n        this._mode = LoadingMode.Determinate;\n        break;\n      default:\n        this._mode = LoadingMode.Indeterminate;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\n   * Sets the strategy of loading mask depending on value.\n   * Defaults to [LoadingMode.Replace | 'replace'].\n   */\n  @Input('tdLoadingStrategy')\n  set strategy(stategy: LoadingStrategy) {\n    switch (stategy) {\n      case LoadingStrategy.Overlay:\n        this._strategy = LoadingStrategy.Overlay;\n        break;\n      default:\n        this._strategy = LoadingStrategy.Replace;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the loading component. Defaults to \"primary\"\n   */\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _templateRef: TemplateRef<TdLoadingContext>,\n    private _loadingService: TdLoadingService,\n  ) {}\n\n  /**\n   * Registers component in the DOM, so it will be available when calling resolve/register.\n   */\n  ngOnInit(): void {\n    this._registerComponent();\n  }\n\n  /**\n   * Remove component when directive is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._loadingService.removeComponent(this._name);\n    this._loadingRef = undefined;\n  }\n\n  /**\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\n   */\n  private _registerComponent(): void {\n    if (!this._name) {\n      throw new Error('Name is needed to register loading directive');\n    }\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\n    if (!this._loadingRef) {\n      this._loadingRef = this._loadingService.createComponent(\n        {\n          name: this._name,\n          type: this._type,\n          mode: this._mode,\n          color: this.color,\n          strategy: this._strategy,\n        },\n        this._viewContainerRef,\n        this._templateRef,\n        this._context,\n      );\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\nimport { TdLoadingDirective } from './directives/loading.directive';\nimport { TdLoadingComponent } from './loading.component';\n\nconst TD_LOADING: Type<any>[] = [TdLoadingComponent, TdLoadingDirective];\n\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [TdLoadingComponent];\n\n@NgModule({\n  imports: [CommonModule, MatProgressBarModule, MatProgressSpinnerModule, OverlayModule, PortalModule],\n  declarations: [TD_LOADING],\n  exports: [TD_LOADING],\n  providers: [LOADING_FACTORY_PROVIDER, LOADING_PROVIDER],\n  entryComponents: [TD_LOADING_ENTRY_COMPONENTS],\n})\nexport class CovalentLoadingModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TdMediaService {\n  private _resizing: boolean = false;\n  private _globalSubscription: Subscription;\n  private _queryMap: Map<string, string> = new Map<string, string>();\n  private _querySources: { [key: string]: BehaviorSubject<boolean> } = {};\n  private _queryObservables: { [key: string]: Observable<boolean> } = {};\n\n  constructor(private _ngZone: NgZone) {\n    this._queryMap.set('xs', '(max-width: 599px)');\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\n    this._queryMap.set('xl', '(min-width: 1920px)');\n    this._queryMap.set('landscape', '(orientation: landscape)');\n    this._queryMap.set('portrait', '(orientation: portrait)');\n    this._queryMap.set('print', 'print');\n\n    this._resizing = false;\n    // we make sure that the resize checking happend outside of Angular since it happens often\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window, 'resize').subscribe(() => {\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\n        if (!this._resizing) {\n          this._resizing = true;\n          setTimeout(() => {\n            this._onResize();\n            this._resizing = false;\n          }, 100);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deregisters a query so its stops being notified or used.\n   */\n  deregisterQuery(query: string): void {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    this._querySources[query].unsubscribe();\n    delete this._querySources[query];\n    delete this._queryObservables[query];\n  }\n\n  /**\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\n   */\n  public query(query: string): boolean {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    return this._ngZone.run(() => {\n      return matchMedia(query).matches;\n    });\n  }\n\n  /**\n   * Registers a media query and returns an [Observable] that will re-evaluate and\n   * return if the given media query matches on window resize.\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\n   */\n  public registerQuery(query: string): Observable<boolean> {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    if (!this._querySources[query]) {\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\n      this._queryObservables[query] = this._querySources[query].asObservable();\n    }\n    return this._queryObservables[query];\n  }\n\n  /**\n   * Trigger a match media event on all subscribed observables.\n   */\n  public broadcast(): void {\n    this._onResize();\n  }\n\n  private _onResize(): void {\n    for (let query in this._querySources) {\n      this._ngZone.run(() => {\n        this._matchMediaTrigger(query);\n      });\n    }\n  }\n\n  private _matchMediaTrigger(query: string): void {\n    this._querySources[query].next(matchMedia(query).matches);\n  }\n}\n","import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: { [key: string]: string } = {};\n  private _styles: { [key: string]: string } = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) {}\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (let attr in this._attributes) {\n      if (this._matches) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\n      }\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      if (this._matches) {\n        this._renderer.addClass(this._elementRef.nativeElement, className);\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\n      }\n    });\n  }\n\n  private _changeStyles(): void {\n    for (let style in this._styles) {\n      if (this._matches) {\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\n      } else {\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\n      }\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { TdMediaToggleDirective } from './directives/media-toggle.directive';\n\nconst TD_MEDIA: Type<any>[] = [TdMediaToggleDirective];\n\n@NgModule({\n  declarations: [TD_MEDIA],\n  exports: [TD_MEDIA],\n})\nexport class CovalentMediaModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class TdMenuComponent {}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdMenuComponent } from './menu.component';\n\nconst TD_MENU: Type<any>[] = [TdMenuComponent];\n\n@NgModule({\n  imports: [CommonModule, MatMenuModule, MatDividerModule],\n  declarations: [TD_MENU],\n  exports: [TD_MENU],\n})\nexport class CovalentMenuModule {}\n","import {\n  Component,\n  ViewChild,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  Optional,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Dir } from '@angular/cdk/bidi';\nimport { MatInput } from '@angular/material/input';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\n\nimport { debounceTime, skip } from 'rxjs/operators';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchInputMixinBase = mixinControlValueAccessor(TdSearchInputBase);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdSearchInputComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('searchState', [\n      state(\n        'hide-left',\n        style({\n          transform: 'translateX(-150%)',\n          display: 'none',\n        }),\n      ),\n      state(\n        'hide-right',\n        style({\n          transform: 'translateX(150%)',\n          display: 'none',\n        }),\n      ),\n      state(\n        'show',\n        style({\n          transform: 'translateX(0%)',\n          display: 'block',\n        }),\n      ),\n      transition('* => show', animate('200ms ease-in')),\n      transition('show => *', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchInputComponent extends _TdSearchInputMixinBase implements IControlValueAccessor, OnInit {\n  @ViewChild(MatInput) _input: MatInput;\n\n  /**\n   * appearance?: MatFormFieldAppearance\n   * Appearance style for the underlying input component.\n   */\n  @Input('appearance') appearance: MatFormFieldAppearance;\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._input.ngControl.valueChanges\n      .pipe(\n        debounceTime(this.debounce),\n        skip(1), // skip first change when value is set to undefined\n      )\n      .subscribe((value: string) => {\n        this._searchTermChanged(value);\n      });\n  }\n\n  /**\n   * Method to focus to underlying input.\n   */\n  focus(): void {\n    this._input.focus();\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n\n  stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  handleSearch(event: Event): void {\n    this.stopPropagation(event);\n    this.onSearch.emit(this.value);\n  }\n\n  /**\n   * Method to clear the underlying input.\n   */\n  clearSearch(): void {\n    this.value = '';\n    this._changeDetectorRef.markForCheck();\n    this.onClear.emit(undefined);\n  }\n\n  private _searchTermChanged(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';\n\nimport { TdSearchInputComponent } from '../search-input/search-input.component';\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchBoxBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);\n\n@Component({\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdSearchBoxComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('inputState', [\n      state(\n        '0',\n        style({\n          width: '0%',\n          margin: '0px',\n        }),\n      ),\n      state(\n        '1',\n        style({\n          width: '100%',\n          margin: AUTO_STYLE,\n        }),\n      ),\n      transition('0 => 1', animate('200ms ease-in')),\n      transition('1 => 0', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {\n  private _searchVisible: boolean = false;\n  @ViewChild(TdSearchInputComponent) _searchInput: TdSearchInputComponent;\n\n  get searchVisible(): boolean {\n    return this._searchVisible;\n  }\n\n  /**\n   * backIcon?: string\n   * The icon used to close the search toggle, only shown when [alwaysVisible] is false.\n   * Defaults to 'search' icon.\n   */\n  @Input('backIcon') backIcon: string = 'search';\n\n  /**\n   * searchIcon?: string\n   * The icon used to open/focus the search toggle.\n   * Defaults to 'search' icon.\n   */\n  @Input('searchIcon') searchIcon: string = 'search';\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * alwaysVisible?: boolean\n   * Sets if the input should always be visible. Defaults to 'false'.\n   */\n  @Input('alwaysVisible') alwaysVisible: boolean = false;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when the search icon is clicked.\n   */\n  searchClicked(): void {\n    if (!this.alwaysVisible && this._searchVisible) {\n      this.value = '';\n      this.handleClear();\n    } else if (this.alwaysVisible || !this._searchVisible) {\n      this._searchInput.focus();\n    }\n    this.toggleVisibility();\n  }\n\n  toggleVisibility(): void {\n    this._searchVisible = !this._searchVisible;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  handleSearchDebounce(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n  handleSearch(value: string): void {\n    this.onSearch.emit(value);\n  }\n\n  handleClear(): void {\n    this.onClear.emit(undefined);\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdSearchInputComponent } from './search-input/search-input.component';\nimport { TdSearchBoxComponent } from './search-box/search-box.component';\n\n@NgModule({\n  imports: [FormsModule, CommonModule, MatInputModule, MatIconModule, MatButtonModule],\n  declarations: [TdSearchInputComponent, TdSearchBoxComponent],\n  exports: [TdSearchInputComponent, TdSearchBoxComponent],\n})\nexport class CovalentSearchModule {}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  separatorIcon: string = 'chevron_right';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input('separatorIcon') separatorIcon: string = 'chevron_right';\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(debounceTime(10)),\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private _calculateVisibility(): void {\n    let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    let hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      let breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if (crumbWidthSum + breadcrumb.width > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n  exports: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n})\nexport class CovalentBreadcrumbsModule {}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ContentChild,\n  OnInit,\n} from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective, TemplatePortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nexport enum StepState {\n  None = 'none',\n  Required = 'required',\n  Complete = 'complete',\n}\n\n@Directive({\n  selector: '[td-step-label]ng-template',\n})\nexport class TdStepLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-actions]ng-template',\n})\nexport class TdStepActionsDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-summary]ng-template',\n})\nexport class TdStepSummaryDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdStepBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepMixinBase = mixinDisableRipple(mixinDisabled(TdStepBase));\n\n@Component({\n  selector: 'td-step',\n  inputs: ['disabled', 'disableRipple'],\n  templateUrl: './step.component.html',\n})\nexport class TdStepComponent extends _TdStepMixinBase implements OnInit, ICanDisable, ICanDisableRipple {\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  private _contentPortal: TemplatePortal<any>;\n  get stepContent(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n  @ContentChild(TdStepLabelDirective) stepLabel: TdStepLabelDirective;\n  @ContentChild(TdStepActionsDirective) stepActions: TdStepActionsDirective;\n  @ContentChild(TdStepSummaryDirective) stepSummary: TdStepSummaryDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdStepComponent] header.\n   * Defaults to 'Step #'\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdStepComponent] header.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles [TdStepComponent] between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._setActive(coerceBooleanProperty(active));\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of [TdStepComponent] depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * activated?: function\n   * Event emitted when [TdStepComponent] is activated.\n   */\n  @Output('activated') onActivated: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * deactivated?: function\n   * Event emitted when [TdStepComponent] is deactivated.\n   */\n  @Output('deactivated') onDeactivated: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n  /**\n   * Toggle active state of [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setActive(!this._active);\n  }\n\n  /**\n   * Opens [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setActive(true);\n  }\n\n  /**\n   * Closes [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setActive(false);\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this._state === StepState.Complete;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._active) {\n      this._active = false;\n      this._onDeactivated();\n    }\n  }\n\n  /**\n   * Method to change active state internally and emit the [onActivated] event if 'true' or [onDeactivated]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   * returns true if successfully changed state\n   */\n  private _setActive(newActive: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._active !== newActive) {\n      this._active = newActive;\n      if (newActive) {\n        this._onActivated();\n      } else {\n        this._onDeactivated();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onActivated(): void {\n    this.onActivated.emit(undefined);\n  }\n\n  private _onDeactivated(): void {\n    this.onDeactivated.emit(undefined);\n  }\n}\n","import { Component, Input, Output } from '@angular/core';\nimport { OnDestroy, AfterContentInit } from '@angular/core';\nimport { EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdStepComponent } from './step.component';\n\nexport interface IStepChangeEvent {\n  newStep: TdStepComponent;\n  prevStep: TdStepComponent;\n}\n\nexport enum StepMode {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\n@Component({\n  selector: 'td-steps',\n  styleUrls: ['./steps.component.scss'],\n  templateUrl: './steps.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps',\n  },\n})\nexport class TdStepsComponent implements OnDestroy, AfterContentInit {\n  private _subcriptions: Subscription[];\n  private _mode: StepMode = StepMode.Vertical;\n  private _steps: QueryList<TdStepComponent>;\n\n  @ContentChildren(TdStepComponent)\n  set stepsContent(steps: QueryList<TdStepComponent>) {\n    if (steps) {\n      this._steps = steps;\n      this._registerSteps();\n    }\n  }\n\n  get steps(): TdStepComponent[] {\n    return this._steps.toArray();\n  }\n  prevStep: TdStepComponent;\n\n  /**\n   * mode?: StepMode or [\"vertical\" | \"horizontal\"]\n   * Defines if the mode of the [TdStepsComponent].  Defaults to [StepMode.Vertical | \"vertical\"]\n   */\n  @Input('mode')\n  set mode(mode: StepMode) {\n    switch (mode) {\n      case StepMode.Horizontal:\n        this._mode = StepMode.Horizontal;\n        break;\n      default:\n        this._mode = StepMode.Vertical;\n    }\n  }\n  get mode(): StepMode {\n    return this._mode;\n  }\n\n  /**\n   * stepChange?: function\n   * Method to be executed when [onStepChange] event is emitted.\n   * Emits an [IStepChangeEvent] implemented object.\n   */\n  @Output('stepChange') onStepChange: EventEmitter<IStepChangeEvent> = new EventEmitter<IStepChangeEvent>();\n\n  /**\n   * Executed after content is initialized, loops through any [TdStepComponent] children elements,\n   * assigns them a number and subscribes as an observer to their [onActivated] event.\n   */\n  ngAfterContentInit(): void {\n    this._registerSteps();\n  }\n\n  /**\n   * Unsubscribes from [TdStepComponent] children elements when component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._deregisterSteps();\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Horizontal | 'horizontal'], else 'false'.\n   */\n  isHorizontal(): boolean {\n    return this._mode === StepMode.Horizontal;\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Vertical | 'vertical'], else 'false'.\n   */\n  isVertical(): boolean {\n    return this._mode === StepMode.Vertical;\n  }\n\n  areStepsActive(): boolean {\n    return (\n      this._steps.filter((step: TdStepComponent) => {\n        return step.active;\n      }).length > 0\n    );\n  }\n\n  /**\n   * Wraps previous and new [TdStepComponent] numbers in an object that implements [IStepChangeEvent]\n   * and emits [onStepChange] event.\n   */\n  private _onStepSelection(step: TdStepComponent): void {\n    if (this.prevStep !== step) {\n      let prevStep: TdStepComponent = this.prevStep;\n      this.prevStep = step;\n      let event: IStepChangeEvent = {\n        newStep: step,\n        prevStep: prevStep,\n      };\n      this._deactivateAllBut(step);\n      this.onStepChange.emit(event);\n    }\n  }\n\n  /**\n   * Loops through [TdStepComponent] children elements and deactivates them ignoring the one passed as an argument.\n   */\n  private _deactivateAllBut(activeStep: TdStepComponent): void {\n    this._steps\n      .filter((step: TdStepComponent) => step !== activeStep)\n      .forEach((step: TdStepComponent) => {\n        step.active = false;\n      });\n  }\n\n  private _registerSteps(): void {\n    this._subcriptions = [];\n    this._steps.toArray().forEach((step: TdStepComponent) => {\n      let subscription: Subscription = step.onActivated.asObservable().subscribe(() => {\n        this._onStepSelection(step);\n      });\n      this._subcriptions.push(subscription);\n    });\n  }\n\n  private _deregisterSteps(): void {\n    if (this._subcriptions) {\n      this._subcriptions.forEach((subs: Subscription) => {\n        subs.unsubscribe();\n      });\n      this._subcriptions = undefined;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nimport { StepState } from '../step.component';\n\nexport class TdStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdStepHeaderBase));\n\n@Component({\n  selector: 'td-step-header',\n  inputs: ['disabled', 'disableRipple'],\n  styleUrls: ['./step-header.component.scss'],\n  templateUrl: './step-header.component.html',\n})\nexport class TdStepHeaderComponent extends _TdStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n  /**\n   * Number assigned to [TdStepHeaderComponent].\n   */\n  @Input('number') number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * tabIndex?: number\n   * tabIndex of the step header for a11y\n   */\n  @Input('tabIndex') tabIndex: number;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\nimport { StepState } from '../step.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  selector: 'td-step-body',\n  styleUrls: ['./step-body.component.scss'],\n  templateUrl: './step-body.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdStepBodyComponent {\n  @ViewChild('contentRef', { read: ElementRef }) contentRef: ElementRef;\n\n  get hasContent(): boolean {\n    return (\n      this.contentRef &&\n      (this.contentRef.nativeElement.children.length > 0 || !!this.contentRef.nativeElement.textContent.trim())\n    );\n  }\n\n  @ViewChild('actionsRef', { read: ElementRef }) actionsRef: ElementRef;\n\n  get hasActions(): boolean {\n    return (\n      this.actionsRef &&\n      (this.actionsRef.nativeElement.children.length > 0 || !!this.actionsRef.nativeElement.textContent.trim())\n    );\n  }\n\n  @ViewChild('summaryRef', { read: ElementRef }) summaryRef: ElementRef;\n\n  get hasSummary(): boolean {\n    return (\n      this.summaryRef &&\n      (this.summaryRef.nativeElement.children.length > 0 || !!this.summaryRef.nativeElement.textContent.trim())\n    );\n  }\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on body.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of body.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n}\n","import { Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, ElementRef } from '@angular/core';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, ICanDisableRipple } from '@covalent/core/common';\nimport { _TdStepMixinBase, StepState } from '../../step.component';\n\n@Component({\n  selector: '[td-step-link],[tdStepLink]',\n  styleUrls: ['./nav-step-link.component.scss'],\n  templateUrl: './nav-step-link.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    '[class.td-step-link]': 'true',\n    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n    '[attr.disabled]': 'disabled || null',\n    '[class.mat-disabled]': 'disabled || null',\n    '(click)': '_handleClick($event)',\n  },\n})\nexport class TdNavStepLinkComponent extends _TdStepMixinBase implements ICanDisable, ICanDisableRipple {\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  // Number to display in step header\n  number: number;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of component depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * label?: string\n   * Label to display in step header\n   * Defaults to empty\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sublabel to display in step header\n   * Defaults to empty\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles component between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._active = coerceBooleanProperty(active);\n    this._changeDetectorRef.markForCheck();\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * tabIndex?: number\n   * tabIndex for component\n   */\n  @Input('tabIndex') tabIndex: number;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef, public elementRef: ElementRef) {\n    super();\n  }\n\n  _handleClick(click: Event): void {\n    if (this.disabled) {\n      click.preventDefault();\n      click.stopImmediatePropagation();\n    }\n  }\n}\n","import {\n  Component,\n  Optional,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  AfterContentChecked,\n  ChangeDetectorRef,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\n\nimport { Subject, merge, of } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][horizontal]',\n  styleUrls: ['./nav-steps-horizontal.component.scss'],\n  templateUrl: './nav-steps-horizontal.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-horizontal',\n    '[class.td-step-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.td-step-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class TdNavStepsHorizontalComponent implements AfterContentChecked, AfterContentInit, OnDestroy {\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  private _widthSubject: Subject<number> = new Subject<number>();\n\n  private _scrollDistance: number = 0;\n  private _scrollDistanceChanged: boolean = false;\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls: boolean = false;\n\n  /** Whether the step list can be scrolled more towards the end. */\n  _disableScrollAfter: boolean = true;\n\n  /** Whether the step list can be scrolled more towards the beginning. */\n  _disableScrollBefore: boolean = true;\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepListContainer') _stepListContainer: ElementRef;\n  @ViewChild('stepList') _stepList: ElementRef;\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewportRuler: ViewportRuler,\n    @Optional() private _dir: Directionality,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n  ngAfterContentInit(): void {\n    merge(\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n      this._viewportRuler.change(150),\n      this._dir ? this._dir.change : of(undefined),\n      this._steps.changes,\n    )\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._configureSteps();\n        this.updatePagination();\n        this._changeDetectorRef.markForCheck();\n      });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentChecked(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n    if (this._scrollDistanceChanged) {\n      this._updateStepScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Listen to right and left key events to move the the viewport.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._scrollHeader('before');\n        event.preventDefault();\n        break;\n      case RIGHT_ARROW:\n        this._scrollHeader('after');\n        event.preventDefault();\n        break;\n      default:\n      // do something\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   */\n  updatePagination(): void {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateStepScrollPosition();\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the step list that will cause the list to scroll. */\n  _updateStepScrollPosition(): void {\n    const translateX: number = this._getLayoutDirection() === 'ltr' ? -this.scrollDistance : this.scrollDistance;\n    // Move step list the amount of pixels scrolled\n    this._stepList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off.\n    if (this._getLayoutDirection() === 'ltr') {\n      this._stepListContainer.nativeElement.scrollLeft = 0;\n    } else {\n      this._stepListContainer.nativeElement.scrollLeft = this._getMaxScrollDistance();\n    }\n  }\n\n  /** Sets the distance in pixels that the step header should be transformed in the X-axis. */\n  get scrollDistance(): number {\n    return this._scrollDistance;\n  }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the step list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively).\n   */\n  _scrollHeader(scrollDir: ScrollDirection): void {\n    // Move the scroll distance one-half the length of the step list's viewport.\n    this.scrollDistance += ((scrollDir === 'before' ? -1 : 1) * this._stepListContainer.nativeElement.offsetWidth) / 2;\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * step list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   */\n  _checkPaginationEnabled(): void {\n    const isEnabled: boolean = this._stepList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   */\n  _checkScrollingControls(): void {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance === 0;\n    this._disableScrollAfter = this.scrollDistance === this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the step list container and step header container.\n   */\n  _getMaxScrollDistance(): number {\n    return this._stepList.nativeElement.scrollWidth - this._stepListContainer.nativeElement.offsetWidth || 0;\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    let stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        let separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-horizontal-line');\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  Renderer2,\n  ChangeDetectorRef,\n  ElementRef,\n} from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TdNavStepLinkComponent } from '../nav-step-link/nav-step-link.component';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n@Component({\n  selector: 'nav[td-steps][vertical]',\n  styleUrls: ['./nav-steps-vertical.component.scss'],\n  templateUrl: './nav-steps-vertical.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-steps td-steps-vertical',\n  },\n})\nexport class TdNavStepsVerticalComponent implements AfterContentInit, OnDestroy {\n  private _separators: HTMLElement[] = [];\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject<void>();\n\n  // all the sub components, which are the individual steps\n  @ContentChildren(TdNavStepLinkComponent) _steps: QueryList<TdNavStepLinkComponent>;\n\n  @ViewChild('stepList') _stepList: ElementRef;\n\n  constructor(private _renderer: Renderer2, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterContentInit(): void {\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._configureSteps();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._configureSteps();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Set the step line separators and display numbers\n   */\n  private _configureSteps(): void {\n    this._separators.forEach((separator: HTMLElement) => {\n      this._renderer.removeChild(this._stepList.nativeElement, separator);\n    });\n    let stepsArray: TdNavStepLinkComponent[] = this._steps.toArray();\n    // set the index number of the step so can display that number in circle\n    stepsArray.forEach((step: TdNavStepLinkComponent, index: number) => {\n      if (index > 0 && index < stepsArray.length) {\n        let separator: any = this._renderer.createElement('div');\n        this._renderer.addClass(separator, 'td-vertical-line-wrapper');\n        let separatorChild: any = this._renderer.createElement('div');\n        this._renderer.addClass(separatorChild, 'td-vertical-line');\n        this._renderer.appendChild(separator, separatorChild);\n        this._separators.push(separator);\n        this._renderer.insertBefore(this._stepList.nativeElement, separator, step.elementRef.nativeElement);\n      }\n      step.number = index + 1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\n\n// Steps\nimport { TdStepsComponent } from './steps.component';\nimport { TdStepHeaderComponent } from './step-header/step-header.component';\nimport { TdStepBodyComponent } from './step-body/step-body.component';\nimport {\n  TdStepComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n} from './step.component';\n\n// Nav Steps\nimport { TdNavStepsHorizontalComponent } from './nav/nav-steps-horizontal/nav-steps-horizontal.component';\nimport { TdNavStepsVerticalComponent } from './nav/nav-steps-vertical/nav-steps-vertical.component';\nimport { TdNavStepLinkComponent } from './nav/nav-step-link/nav-step-link.component';\n\nconst TD_STEPS: Type<any>[] = [\n  TdStepsComponent,\n  TdStepComponent,\n  TdStepHeaderComponent,\n  TdStepBodyComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n  TdNavStepsHorizontalComponent,\n  TdNavStepsVerticalComponent,\n  TdNavStepLinkComponent,\n];\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, PortalModule, ScrollDispatchModule, CovalentCommonModule],\n  declarations: [TD_STEPS],\n  exports: [TD_STEPS],\n})\nexport class CovalentStepsModule {}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { mixinDisabled, ICanDisable } from '@covalent/core/common';\n\nexport class TdTabOptionBase {\n  constructor(public _viewContainerRef: ViewContainerRef, public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabOptionMixinBase = mixinDisabled(TdTabOptionBase);\n\n@Component({\n  selector: 'td-tab-option',\n  templateUrl: './tab-option.component.html',\n  styleUrls: ['./tab-option.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  inputs: ['disabled'],\n})\nexport class TdTabOptionComponent extends _TdTabOptionMixinBase implements ICanDisable, OnInit {\n  private _contentPortal: TemplatePortal<any>;\n  get content(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n\n  /**\n   * Value to which the option will be binded to.\n   */\n  @Input('value') value: any;\n\n  constructor(_viewContainerRef: ViewContainerRef, _changeDetectorRef: ChangeDetectorRef) {\n    super(_viewContainerRef, _changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  AfterContentInit,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  ICanDisable,\n  mixinDisabled,\n  IControlValueAccessor,\n  mixinControlValueAccessor,\n  ICanDisableRipple,\n  mixinDisableRipple,\n} from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdTabOptionComponent } from './tab-option.component';\n\nexport class TdTabSelectBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabSelectMixinBase = mixinControlValueAccessor(mixinDisabled(mixinDisableRipple(TdTabSelectBase)));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TdTabSelectComponent),\n      multi: true,\n    },\n  ],\n  selector: 'td-tab-select',\n  templateUrl: './tab-select.component.html',\n  styleUrls: ['./tab-select.component.scss'],\n  /* tslint:disable-next-line */\n  inputs: ['value', 'disabled', 'disableRipple'],\n})\nexport class TdTabSelectComponent extends _TdTabSelectMixinBase\n  implements IControlValueAccessor, ICanDisable, ICanDisableRipple, OnInit, AfterContentInit, OnDestroy {\n  private _subs: Subscription[] = [];\n\n  private _values: any[] = [];\n  private _selectedIndex: number = 0;\n  private _stretchTabs: boolean = false;\n\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Gets all tab option children\n   */\n  @ContentChildren(TdTabOptionComponent) readonly _tabOptions: QueryList<TdTabOptionComponent>;\n\n  get tabOptions(): TdTabOptionComponent[] {\n    return this._tabOptions ? this._tabOptions.toArray() : undefined;\n  }\n\n  /**\n   * Makes the tabs stretch to fit the parent container.\n   */\n  @Input('stretchTabs')\n  set stretchTabs(stretchTabs: boolean) {\n    this._stretchTabs = coerceBooleanProperty(stretchTabs);\n  }\n  get stretchTabs(): boolean {\n    return this._stretchTabs;\n  }\n\n  /**\n   * Color of the tab group.\n   */\n  @Input('color') color: ThemePalette;\n\n  /**\n   * Background color of the tab group.\n   */\n  @Input('backgroundColor') backgroundColor: ThemePalette;\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // subscribe to check if value changes and update the selectedIndex internally.\n    this._subs.push(\n      this.valueChanges.subscribe((value: any) => {\n        this._setValue(value);\n      }),\n    );\n  }\n\n  ngAfterContentInit(): void {\n    // subscribe to listen to any tab changes.\n    this._refreshValues();\n    this._subs.push(\n      this._tabOptions.changes.subscribe(() => {\n        this._refreshValues();\n      }),\n    );\n    // initialize value\n    Promise.resolve().then(() => {\n      this._setValue(this.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs && this._subs.length) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * Method executed when user selects a different tab\n   * This updates the new selectedIndex and infers what value should be mapped to.\n   */\n  selectedIndexChange(selectedIndex: number): void {\n    this._selectedIndex = selectedIndex;\n    let value: any = this._values[selectedIndex];\n    this.value = value;\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  /**\n   * Refresh the values array whenever the number of tabs gets updated\n   */\n  private _refreshValues(): void {\n    this._values = this.tabOptions.map((tabOption: TdTabOptionComponent) => {\n      return tabOption.value;\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Try to set value depending if its part of our options\n   * else set the value of the first tab.\n   */\n  private _setValue(value: any): void {\n    let index: number = this._values.indexOf(value);\n    if (index > -1) {\n      this._selectedIndex = index;\n    } else {\n      this.value = this._values.length ? this._values[0] : undefined;\n      this._selectedIndex = 0;\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TdTabSelectComponent } from './tab-select.component';\nimport { TdTabOptionComponent } from './tab-option.component';\n\n@NgModule({\n  declarations: [TdTabSelectComponent, TdTabOptionComponent], // directives, components, and pipes owned by this NgModule\n  imports: [\n    /** Angular Modules */\n    CommonModule,\n    FormsModule,\n    /** Material Modules */\n    PortalModule,\n    MatTabsModule,\n  ], // modules needed to run this module\n  exports: [TdTabSelectComponent, TdTabOptionComponent],\n})\nexport class CovalentTabSelectModule {}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisable {\n  disabled: boolean;\n  onDisabledChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disabled(): boolean {\n      return this._disabled;\n    }\n    set disabled(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.onDisabledChange(this._disabled);\n      }\n    }\n\n    onDisabledChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisableRipple {\n  disableRipple: boolean;\n  onDisableRippleChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disableRipple(): boolean {\n      return this._disableRipple;\n    }\n    set disableRipple(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disableRipple !== newValue) {\n        this._disableRipple = newValue;\n        this.onDisableRippleChange(this._disableRipple);\n      }\n    }\n\n    onDisableRippleChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n"]}