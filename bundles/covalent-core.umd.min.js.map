{"version":3,"sources":["ng://@covalent/core/paging/paging-bar.component.ts","ng://@covalent/core/paging/paging.module.ts","node_modules/tslib/tslib.es6.js","ng://@covalent/core/virtual-scroll/virtual-scroll-row.directive.ts","ng://@covalent/core/virtual-scroll/virtual-scroll-container.component.ts","ng://@covalent/core/virtual-scroll/virtual-scroll.module.ts","ng://@covalent/core/notifications/notification-count.component.ts","ng://@covalent/core/notifications/notifications.module.ts","ng://@covalent/core/common/forms/auto-trim/auto-trim.directive.ts","ng://@covalent/core/common/pipes/time-ago/time-ago.pipe.ts","ng://@covalent/core/common/pipes/time-difference/time-difference.pipe.ts","ng://@covalent/core/common/pipes/time-until/time-until.pipe.ts","ng://@covalent/core/common/pipes/bytes/bytes.pipe.ts","ng://@covalent/core/common/pipes/decimal-bytes/decimal-bytes.pipe.ts","ng://@covalent/core/common/pipes/digits/digits.pipe.ts","ng://@covalent/core/common/pipes/truncate/truncate.pipe.ts","ng://@covalent/core/common/services/router-path.service.ts","ng://@covalent/core/common/services/icon.service.ts","ng://@covalent/core/common/common.module.ts","ng://@covalent/core/common/animations/rotate/rotate.animation.ts","ng://@covalent/core/common/animations/collapse/collapse.animation.ts","ng://@covalent/core/common/animations/fade/fadeInOut.animation.ts","ng://@covalent/core/common/animations/bounce/bounce.animation.ts","ng://@covalent/core/common/animations/flash/flash.animation.ts","ng://@covalent/core/common/animations/headshake/headshake.animation.ts","ng://@covalent/core/common/animations/jello/jello.animation.ts","ng://@covalent/core/common/animations/pulse/pulse.animation.ts","ng://@covalent/core/common/behaviors/control-value-accesor.mixin.ts","ng://@covalent/core/common/forms/validators/validators.ts","ng://@covalent/core/message/message.component.ts","ng://@covalent/core/message/message.module.ts","ng://@covalent/core/chips/chips.component.ts","ng://@covalent/core/chips/chips.module.ts","ng://@covalent/core/data-table/data-table-row/data-table-row.component.ts","ng://@covalent/core/data-table/directives/data-table-template.directive.ts","ng://@covalent/core/data-table/data-table.component.ts","ng://@covalent/core/data-table/data-table-column/data-table-column.component.ts","ng://@covalent/core/data-table/data-table-cell/data-table-cell.component.ts","ng://@covalent/core/data-table/data-table-table/data-table-table.component.ts","ng://@covalent/core/data-table/services/data-table.service.ts","ng://@covalent/core/data-table/data-table.module.ts","ng://@covalent/core/dialogs/dialog.component.ts","ng://@covalent/core/dialogs/alert-dialog/alert-dialog.component.ts","ng://@covalent/core/dialogs/confirm-dialog/confirm-dialog.component.ts","ng://@covalent/core/dialogs/prompt-dialog/prompt-dialog.component.ts","ng://@covalent/core/dialogs/services/dialog.service.ts","ng://@covalent/core/dialogs/dialogs.module.ts","ng://@covalent/core/expansion-panel/expansion-panel.component.ts","ng://@covalent/core/expansion-panel/expansion-panel-group.component.ts","ng://@covalent/core/expansion-panel/expansion-panel.module.ts","ng://@covalent/core/file/directives/file-select.directive.ts","ng://@covalent/core/file/directives/file-drop.directive.ts","ng://@covalent/core/file/file-input/file-input.component.ts","ng://@covalent/core/file/file-upload/file-upload.component.ts","ng://@covalent/core/file/services/file.service.ts","ng://@covalent/core/file/file.module.ts","ng://@covalent/core/json-formatter/json-formatter.component.ts","ng://@covalent/core/json-formatter/json-formatter.module.ts","ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts","ng://@covalent/core/loading/loading.component.ts","ng://@covalent/core/loading/services/loading.factory.ts","ng://@covalent/core/loading/services/loading.service.ts","ng://@covalent/core/loading/directives/loading.directive.ts","ng://@covalent/core/loading/loading.module.ts","ng://@covalent/core/media/services/media.service.ts","ng://@covalent/core/media/directives/media-toggle.directive.ts","ng://@covalent/core/media/media.module.ts","ng://@covalent/core/menu/menu.component.ts","ng://@covalent/core/menu/menu.module.ts","ng://@covalent/core/search/search-input/search-input.component.ts","ng://@covalent/core/search/search-box/search-box.component.ts","ng://@covalent/core/search/search.module.ts","ng://@covalent/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.component.ts","ng://@covalent/core/breadcrumbs/breadcrumbs.module.ts","ng://@covalent/core/steps/step.component.ts","ng://@covalent/core/steps/steps.component.ts","ng://@covalent/core/steps/step-header/step-header.component.ts","ng://@covalent/core/steps/step-body/step-body.component.ts","ng://@covalent/core/steps/steps.module.ts","ng://@covalent/core/tab-select/tab-option.component.ts","ng://@covalent/core/tab-select/tab-select.component.ts","ng://@covalent/core/tab-select/tab-select.module.ts","ng://@covalent/core/common/behaviors/disabled.mixin.ts","ng://@covalent/core/common/behaviors/disable-ripple.mixin.ts"],"names":["TdPagingBarComponent","_dir","_changeDetectorRef","this","_pageSize","_total","_page","_fromRow","_toRow","_initialized","_pageLinks","_pageLinkCount","_hitEnd","_hitStart","firstLast","initialPage","onChange","EventEmitter","Object","defineProperty","prototype","pageLinkCount","coerceNumberProperty","_calculatePageLinks","markForCheck","pageSize","_handleOnChange","total","_calculateRows","Math","ceil","dir","ngOnInit","navigateToPage","page","maxPage","floor","firstPage","prevPage","nextPage","lastPage","isMinPage","isMaxPage","top","actualPageLinkCount","middlePageLinks","x","event","fromRow","toRow","emit","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","selector","template","Dir","decorators","type","Optional","ChangeDetectorRef","Input","Output","CovalentPagingModule","NgModule","imports","CommonModule","MatIconModule","MatButtonModule","declarations","exports","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","TdVirtualScrollRowDirective","templateRef","viewContainerRef","_super","tslib_1.__extends","Directive","TemplateRef","ViewContainerRef","TemplatePortalDirective","TdVirtualScrollContainerComponent","_elementRef","_domSanitizer","_renderer","_subs","_bottom","Subject","_totalHeight","_hostHeight","_scrollVerticalOffset","bottom","trackBy","index","item","_data","data","_calculateVirtualRows","_virtualData","_rows","toArray","nativeElement","getBoundingClientRect","height","_offsetTransform","ngAfterViewInit","_this","changes","subscribe","pipe","debounceTime","lastRow","lastIndex","ngAfterViewChecked","newHostHeight","ngOnDestroy","forEach","sub","unsubscribe","handleScroll","element","verticalScroll","scrollTop","rowHeight","refresh","scrollTo","row","scrollToStart","scrollToEnd","totalHeight","isFinite","offset","bypassSecurityTrustStyle","slice","Promise","resolve","then","ElementRef","DomSanitizer","Renderer2","ViewChildren","ContentChild","HostListener","TD_VIRTUAL_SCROLL","CovalentVirtualScrollModule","Top","Bottom","Center","Before","After","TdNotificationCountComponent","_notifications","_limit","color","_positionX","positionX","_positionY","positionY","notifications","limit","show","_hasContent","toString","isNaN","ngAfterContentInit","TdNotificationCountPositionX","TdNotificationCountPositionY","content","contentElement","children","textContent","trim","ViewChild","HostBinding","TD_NOTIFICATIONS","CovalentNotificationsModule","TdAutoTrimDirective","_model","onBlur","update","NgModel","Host","TdTimeAgoPipe","transform","time","reference","Date","ref","getTime","startTime","now","diff","Pipe","name","TdTimeDifferencePipe","start","end","endTime","undefined","days","hours","minutes","seconds","pad","daysFormatted","substring","TdTimeUntilPipe","TdBytesPipe","bytes","precision","parseInt","log","parseFloat","pow","toFixed","TdDecimalBytesPipe","TdDigitsPipe","_locale","_decimalPipe","DecimalPipe","digits","size","Inject","LOCALE_ID","TdTruncatePipe","text","truncated","substr","lastIndexOf","RouterPathService","_router","events","filter","RoutesRecognized","pairwise","_previousRoute","urlAfterRedirects","getPreviousRoute","Injectable","Router","IconService","_icons","query","icons","el","toLowerCase","indexOf","TD_FORMS","TD_VALIDATORS","TD_PIPES","CovalentCommonModule","FormsModule","providers","tdRotateAnimation","trigger","state","style","params","degressStart","degreesEnd","transition","group","animateChild","optional","animate","duration","delay","ease","tdCollapseAnimation","overflow","AUTO_STYLE","tdFadeInOutAnimation","opacity","visibility","easeOnIn","easeOnOut","tdBounceAnimation","keyframes","animationTimingFunction","tdFlashAnimation","tdHeadshakeAnimation","tdJelloAnimation","tdPulseAnimation","noop","CovalentValidators","min","minValue","c","Validators","required","v","actualValue","max","maxValue","numberRequired","Number","TdMessageContainerDirective","viewContainer","TdMessageComponent","_opened","_hidden","_animating","icon","addClass","_color","removeClass","opened","open","close","animationDoneListener","_detach","_attach","_startAnimationState","toggle","_childElement","createEmbeddedView","_template","clear","animations","TD_MESSAGE","CovalentMessageModule","TdChipDirective","TdAutocompleteOptionDirective","TdChipsBase","_TdChipsMixinBase","mixinControlValueAccessor","mixinDisabled","TdChipsComponent","_document","_outsideClickSubs","Subscription","EMPTY","_isMousedown","_length","_stacked","_requireMatch","_inputPosition","_chipAddition","_chipRemoval","_focused","_required","_tabIndex","_touchendDebounce","_internalClick","_internalActivateOption","inputControl","FormControl","debounce","onAdd","onRemove","onInputChange","onChipFocus","onChipBlur","_items","items","_setFirstOptionActive","stacked","coerceBooleanProperty","inputPosition","requireMatch","chipAddition","_toggleInput","disabled","chipRemoval","canAddChip","placeholder","focusListener","focus","preventDefault","mousedownListener","timer","toPromise","clickListener","clickTarget","className","stopPropagation","keydownListener","keyCode","TAB","removeFocusedState","ESCAPE","_inputChild","focused","_nativeInput","blur","_closeAutocomplete","valueChanges","_watchOutsideClick","ngDoCheck","_setInternalClick","onDisabledChange","_handleAddChip","selectedOptions","_options","option","active","setInactiveStyles","_autocompleteTrigger","activeOption","addChip","setFocusedState","_openAutocomplete","setValue","removeChip","removedValues","splice","_totalChips","_focusChip","_handleChipBlur","_handleChipFocus","_handleFocus","_focusFirstChip","_inputKeydown","UP_ARROW","LEFT_ARROW","DELETE","BACKSPACE","_focusLastChip","RIGHT_ARROW","_chipKeydown","canRemoveChip","DOWN_ARROW","_removeInputDisplay","panelOpen","openPanel","closePanel","_chipsChildren","enable","disable","setActiveStyles","merge","fromEvent","setTimeout","contains","onTouched","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","DOCUMENT","MatInput","MatAutocompleteTrigger","MatChip","MatOption","CovalentChipsModule","ReactiveFormsModule","MatInputModule","MatChipsModule","MatAutocompleteModule","TdDataTableColumnRowComponent","TdDataTableRowComponent","_selected","selected","TdDataTableTemplateDirective","Ascending","Descending","TdDataTableBase","_TdDataTableMixinBase","TdDataTableComponent","_hostWidth","_resizableColumns","_columnClientX","_onColumnResize","_widths","_onResize","_scrollHorizontalOffset","_onHorizontalScroll","_onVerticalScroll","_rowHeightCache","_selectable","_clickable","_multiple","_allSelected","_indeterminate","_sortable","_sortOrder","TdDataTableSortingOrder","_shiftPreviouslyPressed","_lastSelectedIndex","_firstSelectedIndex","_firstCheckboxValue","_templateMap","Map","onSortChange","onRowSelect","onRowClick","onSelectAll","compareWith","model","_resizingColumn","selectable","_scrollableDiv","_columns","hasData","keys","k","find","label","cols","resizableColumns","clickable","multiple","sortable","columnName","column","columns","Error","_sortBy","order","sortOrder","toUpperCase","_resizeSubs","asObservable","_calculateWidths","_columnResizeSubs","clientX","_horizontalScrollSubs","horizontalScroll","_verticalScrollSubs","_valueChangesSubs","_templates","set","tdDataTableTemplate","ngAfterContentChecked","newHostWidth","width","_rowsChangedSubs","scrollLeft","getColumnWidth","getCellValue","nested","_getNestedValue","getTemplateRef","get","clearModel","_calculateCheckboxState","selectAll","checked","toggledRows","isRowSelected","modelRow","val","rows","select","currentSelected","blockEvent","mouseEvent","shiftKey","firstIndex","_doSelection","rowSelected","disableTextSelection","onselectstart","enableTextSelection","handleRowClick","srcElement","currentTarget","getAttribute","tagName","handleSort","_rowKeyup","ENTER","SPACE","_handleStartColumnDrag","_handleColumnDrag","xPosition","proposedManualWidth","_colElements","projectedWidth","_handleEndColumnDrag","splitName","split","rowIndex","wasSelected","_b","__values","tslib_1.__values","_c","col","_adjustColumnWidth","_calculateWidth","_adjustColumnWidhts","fixedTotalWidth","flexibleWidths","hidden","recalculateHostWidth","hostWidth","newValue_1","adjustedNumber_1","colWidth","newFlexibleWidths","skipMinWidthProjection","widthOpts","renderedColumns","scrolledRows","rowHeightSum_1","hostHeight","ContentChildren","TdDataTableColumnComponent","numeric","_columnContent","handleClick","isAscending","isDescending","read","TdDataTableCellComponent","TdDataTableTableComponent","TdDataTableService","filterData","searchTerm","ignoreCase","excludedColumns","key","preItemValue","sortData","sortBy","from","sort","a","compA","compB","direction","pageData","DATA_TABLE_PROVIDER_FACTORY","parent","DATA_TABLE_PROVIDER","deps","SkipSelf","useFactory","TD_DATA_TABLE","CovalentDataTableModule","MatCheckboxModule","MatTooltipModule","MatPseudoCheckboxModule","TdDialogTitleDirective","TdDialogContentDirective","TdDialogActionsDirective","TdDialogComponent","dialogTitle","dialogContent","dialogActions","TdAlertDialogComponent","_dialogRef","closeButton","MatDialogRef","TdConfirmDialogComponent","cancelButton","acceptButton","cancel","accept","TdPromptDialogComponent","_input","handleInputFocus","TdDialogService","_dialogService","component","config","closeAll","openAlert","dialogConfig","_createConfig","dialogRef","alertDialogComponent","componentInstance","title","message","openConfirm","confirmDialogComponent","openPrompt","promptDialogComponent","MatDialogConfig","assign","MatDialog","DIALOG_PROVIDER_FACTORY","dialog","DIALOG_PROVIDER","TD_DIALOGS","TD_DIALOGS_ENTRY_COMPONENTS","CovalentDialogsModule","MatDialogModule","entryComponents","TdExpansionPanelHeaderDirective","TdExpansionPanelLabelDirective","TdExpansionPanelSublabelDirective","TdExpansionPanelSummaryComponent","TdExpansionPanelBase","_TdExpansionPanelMixinBase","mixinDisableRipple","TdExpansionPanelComponent","_expand","expanded","collapsed","expand","_setExpand","clickEvent","_onCollapsed","newExpand","_onExpanded","TdExpansionPanelGroupComponent","TD_EXPANSION_PANEL","CovalentExpansionPanelModule","MatRippleModule","PortalModule","TdFileSelectDirective","onFileSelect","target","HTMLInputElement","files","TdFileDropBase","_TdFileDropMixinBase","TdFileDropDirective","_element","onFileDrop","onDrop","dataTransfer","_stopEvent","onDragOver","transfer","dropEffect","_typeCheck","types","mozItemCount","onDragEnter","onDragLeave","TdFileInputLabelDirective","TdFileInputBase","_TdFileInputMixinBase","TdFileInputComponent","onSelect","_inputElement","handleSelect","writeValue","setProperty","inputElement","TdFileUploadBase","_TdFileUploadMixinBase","TdFileUploadComponent","defaultColor","activeColor","cancelColor","onUpload","onCancel","uploadPressed","fileInput","TdFileService","_progressSubject","_progressObservable","upload","options","Observable","subscriber","xhr","XMLHttpRequest","formData","FormData","file","append","onprogress","progress","lengthComputable","round","loaded","onreadystatechange","readyState","status","response","complete","method","url","setRequestHeader","headers","send","TD_FILE","CovalentFileModule","TdJsonFormatterComponent","_open","_levelsOpen","levelsOpen","isInteger","elipsis","_key","KEY_MAX_LENGTH","parseChildren","_children","isObject","getType","isArray","hasChildren","getValue","replace","getObjectName","object","date","results","exec","getPreview","previewData","startChar","endChar","PREVIEW_LIMIT","map","obj","previewString","join","ellipsis","PREVIEW_STRING_MAX_LENGTH","CovalentJsonFormatterModule","TdLayoutComponent","mode","sidenavWidth","containerAutosize","sidenav","MatSidenav","LayoutToggleBase","_TdLayoutToggleMixinBase","LayoutToggle","_layout","_hideWhenOpened","_noLayoutMessage","hideWhenOpened","_toggleVisibility","_toggleSubs","_animationStarted","onClick","setStyle","console","warn","TdLayoutToggleDirective","layout","renderer","elementRef","tdLayoutToggle","TdLayoutCloseDirective","tdLayoutClose","TdLayoutOpenDirective","tdLayoutOpen","TdLayoutNavComponent","navigationRoute","handleNavigationClick","routerEnabled","navigateByUrl","TdLayoutNavListComponent","TdLayoutNavListToggleDirective","tdLayoutNavListToggle","TdLayoutNavListCloseDirective","tdLayoutNavListClose","TdLayoutNavListOpenDirective","tdLayoutNavListOpen","TdLayoutCardOverComponent","cardWidth","TdLayoutManageListComponent","TdLayoutManageListToggleDirective","tdLayoutManageListToggle","TdLayoutManageListCloseDirective","tdLayoutManageListClose","TdLayoutManageListOpenDirective","tdLayoutManageListOpen","TdLayoutFooterComponent","TdNavigationDrawerMenuDirective","TdNavigationDrawerToolbarDirective","TdNavigationDrawerComponent","_sanitize","_menuToggled","_drawerMenu","_toolbar","_backgroundImage","backgroundUrl","sanitizedUrl","sanitize","SecurityContext","RESOURCE_URL","STYLE","_closeSubscription","openedChange","toggleMenu","isMenuAvailable","TD_LAYOUTS","CovalentLayoutModule","ScrollDispatchModule","MatSidenavModule","MatToolbarModule","MatCardModule","MatDividerModule","Circular","Linear","Determinate","Indeterminate","Overlay","Replace","FullScreen","None","TdLoadingComponent","_animationIn","_animationOut","_mode","LoadingMode","_defaultMode","_value","_circleDiameter","animation","LoadingStyle","LoadingType","isOverlay","_setCircleDiameter","getHeight","isFullScreen","getCircleDiameter","getCircleStrokeWidth","strokeWidth","abs","isCircular","isLinear","animationComplete","fromState","outAnimationCompleted","inAnimationCompleted","startInAnimation","startOutAnimation","diameter","TdLoadingFactory","_componentFactoryResolver","_overlay","_injector","createFullScreenComponent","overlayRef","loadingRef","_initializeContext","loading","observable","distinctUntilChanged","registered","_createOverlay","componentRef","attach","ComponentPortal","_mapOptions","instance","changeDetectorRef","detectChanges","subs_1","destroy","detach","dispose","createOverlayComponent","_createComponent","TemplatePortal","insert","hostView","createReplaceComponent","context","nextElementSibling","scrollHeight","contentRef","subs_2","OverlayConfig","hasBackdrop","positionStrategy","position","global","centerHorizontally","centerVertically","compRef","resolveComponentFactory","subject","times","ComponentFactoryResolver","Injector","LOADING_FACTORY_PROVIDER_FACTORY","componentFactoryResolver","overlay","injector","LOADING_FACTORY_PROVIDER","TdLoadingConfig","TdLoadingDirectiveConfig","strategy","LoadingStrategy","TdLoadingService","_loadingFactory","_context","_timeouts","createComponent","directiveConfig","fullscreenConfig","removeComponent","register","registers","_clearTimeout","resolves","resolveAll","clearTimeout","LOADING_PROVIDER_FACTORY","loadingFactory","LOADING_PROVIDER","TdLoadingContext","$implicit","tdLoading","TD_LOADING_NEXT_ID","TdLoadingDirective","_viewContainerRef","_templateRef","_loadingService","_name","until","_type","stategy","_strategy","_registerComponent","_loadingRef","TD_LOADING","TD_LOADING_ENTRY_COMPONENTS","CovalentLoadingModule","MatProgressBarModule","MatProgressSpinnerModule","OverlayModule","TdMediaService","_ngZone","_resizing","_queryMap","_querySources","_queryObservables","_globalSubscription","runOutsideAngular","window","deregisterQuery","run","matchMedia","matches","registerQuery","BehaviorSubject","broadcast","this_1","_matchMediaTrigger","NgZone","MEDIA_PROVIDER_FACTORY","ngZone","MEDIA_PROVIDER","TdMediaToggleDirective","_mediaService","_matches","_attributes","_styles","_classes","_query","attributes","classes","styles","_mediaChange","_subscription","_changeAttributes","_changeClasses","_changeStyles","attr","setAttribute","removeAttribute","removeStyle","TD_MEDIA","CovalentMediaModule","TdMenuComponent","TD_MENU","CovalentMenuModule","MatMenuModule","TdSearchInputBase","_TdSearchInputMixinBase","TdSearchInputComponent","showUnderline","clearIcon","onSearchDebounce","onSearch","onClear","ngControl","skip","_searchTermChanged","handleBlur","handleSearch","clearSearch","display","TdSearchBoxBase","_TdSearchBoxMixinBase","TdSearchBoxComponent","_searchVisible","backIcon","searchIcon","alwaysVisible","searchClicked","handleClear","_searchInput","toggleVisibility","handleSearchDebounce","margin","CovalentSearchModule","TdBreadcrumbComponent","_displayCrumb","_width","separatorIcon","_displayIcon","shouldDisplay","_handleIconClick","host","class","TdBreadcrumbsComponent","_resizeSubscription","_widthSubject","hiddenBreadcrumbs","_calculateVisibility","nativeElementWidth","setCrumbIcons","getComputedStyle","borderLeft","borderRight","marginLeft","marginRight","paddingLeft","paddingRight","_breadcrumbs","breadcrumbArray","breadcrumb","crumbsArray","crumbWidthSum","hiddenCrumbs","displayCrumb","CovalentBreadcrumbsModule","Required","Complete","TdStepLabelDirective","TdStepActionsDirective","TdStepSummaryDirective","TdStepBase","_TdStepMixinBase","TdStepComponent","_active","_state","StepState","onActivated","onDeactivated","_contentPortal","_setActive","_content","isComplete","_onDeactivated","newActive","_onActivated","Vertical","Horizontal","TdStepsComponent","StepMode","onStepChange","steps","_steps","_registerSteps","_deregisterSteps","isHorizontal","isVertical","areStepsActive","step","_onStepSelection","prevStep","event_1","newStep","_deactivateAllBut","activeStep","_subcriptions","subscription","subs","TdStepHeaderBase","_TdStepHeaderMixinBase","TdStepHeaderComponent","apply","isRequired","TdStepBodyComponent","actionsRef","summaryRef","TD_STEPS","CovalentStepsModule","TdTabOptionBase","_TdTabOptionMixinBase","TdTabOptionComponent","TdTabSelectBase","_TdTabSelectMixinBase","TdTabSelectComponent","_values","_selectedIndex","_stretchTabs","valueChange","_tabOptions","stretchTabs","_setValue","_refreshValues","selectedIndexChange","selectedIndex","tabOptions","tabOption","CovalentTabSelectModule","MatTabsModule","base","initialValue","class_1","_i","_","_subjectValueChanges","registerOnChange","fn","registerOnTouched","_disabled","newValue","_disableRipple","onDisableRippleChange"],"mappings":"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A,WAEA,SAAAA,KAuBA,OAlBEA,EAAA7O,UAAAoM,UAAA,SAAU0C,EAAW3J,GACnB,GAAoB,iBAAT2J,EACT,MAAO,OAILC,EAAoBD,EAAKE,OAAO,EAAG7J,GAUvC,OARI2J,EAAK3J,OAASA,IACiB,EAA7B4J,EAAUE,YAAY,OACxBF,EAAYA,EAAUvD,QAGxBuD,GAAa,KAGRA,uBArBVlC,EAAAA,KAAI7K,KAAA,CAAC,CACJ8K,KAAM,eAsBR+B,EAzBA,GCAAK,GAAA,WAQE,SAAAA,EAAoBC,GAAApQ,KAAAoQ,QAAAA,EAClBpQ,KAAKoQ,QAAQC,OAAO1H,KAClB2H,EAAAA,OAAO,SAAC7K,GAAW,OAAAA,aAAa8K,EAAAA,mBAChCC,EAAAA,YACA9H,UAAU,SAACjD,GACX0K,EAAkBM,eAAiBhL,EAAE,GAAGiL,oBAW9C,OAHEP,EAAAlP,UAAA0P,iBAAA,WACE,OAAOR,EAAkBM,gBAfdN,EAAAM,eAAyB,wBAFvCG,EAAAA,sDAJQC,EAAAA,UAuBTV,EAxBA,iBCOA,SAAAW,IAGU9Q,KAAA+Q,OAAmB,CACzB,eACA,gBACA,cACA,gBACA,kBACA,yBACA,cACA,iBACA,MACA,YACA,UACA,aACA,qBACA,oBACA,gBACA,SACA,QACA,YACA,YACA,WACA,QACA,UACA,eACA,OACA,UACA,aACA,kBACA,yBACA,gBACA,gBACA,eACA,aACA,aACA,iBACA,kBACA,oBACA,sBACA,uBACA,kBACA,cACA,eACA,aACA,aACA,YACA,WACA,YACA,SACA,gBACA,wBACA,eACA,cACA,kBACA,WACA,QACA,YACA,kBACA,sBACA,qBACA,sBACA,gBACA,cACA,WACA,UACA,OACA,WACA,kBACA,aACA,gBACA,eACA,eACA,oBACA,eACA,cACA,eACA,eACA,eACA,aACA,kBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,kBACA,kBACA,iBACA,oBACA,eACA,QACA,aACA,QACA,WACA,SACA,OACA,OACA,WACA,YACA,aACA,cACA,gBACA,aACA,SACA,aACA,eACA,cACA,cACA,SACA,OACA,iBACA,sBACA,oBACA,OACA,QACA,YACA,0BACA,eACA,eACA,gBACA,QACA,QACA,YACA,QACA,iBACA,QACA,eACA,aACA,iBACA,YACA,cACA,eACA,cACA,uBACA,aACA,WACA,UACA,UACA,WACA,sBACA,gBACA,WACA,eACA,cACA,gBACA,gBACA,0BACA,SACA,cACA,OACA,YACA,WACA,WACA,WACA,WACA,YACA,iBACA,gBACA,gBACA,cACA,YACA,aACA,SACA,SACA,cACA,cACA,kBACA,UACA,kBACA,iBACA,aACA,UACA,aACA,UACA,aACA,kBACA,kBACA,iBACA,iBACA,qBACA,iBACA,oBACA,qBACA,kBACA,YACA,MACA,iBACA,qBACA,OACA,SACA,OACA,WACA,SACA,YACA,MACA,OACA,QACA,QACA,YACA,QACA,gBACA,QACA,kBACA,aACA,aACA,aACA,cACA,cACA,cACA,WACA,UACA,WACA,iBACA,iBACA,kBACA,kBACA,gBACA,YACA,OACA,eACA,cACA,WACA,kBACA,WACA,gBACA,cACA,SACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,gBACA,iBACA,sBACA,eACA,gBACA,aACA,cACA,cACA,oBACA,iBACA,eACA,eACA,OACA,QACA,aACA,YACA,WACA,SACA,cACA,iBACA,OACA,eACA,gBACA,SACA,cACA,gBACA,iBACA,gBACA,sBACA,uBACA,oBACA,qBACA,cACA,eACA,oBACA,qBACA,oBACA,yBACA,yBACA,gBACA,sBACA,uBACA,uBACA,eACA,eACA,cACA,uBACA,8BACA,8BACA,oBACA,QACA,UACA,aACA,aACA,YACA,aACA,kBACA,YACA,UACA,QACA,UACA,UACA,MACA,YACA,gBACA,UACA,QACA,WACA,QACA,aACA,WACA,UACA,QACA,YACA,aACA,KACA,UACA,SACA,aACA,WACA,UACA,cACA,UACA,UACA,OACA,eACA,eACA,gBACA,UACA,OACA,QACA,kBACA,iBACA,OACA,QACA,QACA,qBACA,gBACA,QACA,0BACA,OACA,eACA,QACA,eACA,iBACA,oBACA,kBACA,oBACA,cACA,eACA,gBACA,oBACA,MACA,WACA,sBACA,sBACA,uBACA,oBACA,qBACA,oBACA,gBACA,kBACA,eACA,iBACA,QACA,gBACA,YACA,WACA,SACA,oBACA,aACA,iBACA,SACA,SACA,eACA,WACA,cACA,OACA,cACA,gBACA,gBACA,OACA,OACA,YACA,UACA,iBACA,gBACA,YACA,YACA,aACA,iBACA,0BACA,eACA,cACA,gBACA,oBACA,sBACA,iBACA,cACA,wBACA,gBACA,aACA,eACA,cACA,gBACA,iBACA,cACA,cACA,aACA,oBACA,kBACA,YACA,iBACA,aACA,gBACA,oBACA,eACA,cACA,qBACA,OACA,YACA,eACA,QACA,UACA,UACA,UACA,UACA,YACA,YACA,OACA,QACA,UACA,OACA,MACA,aACA,qBACA,SACA,OACA,aACA,UACA,MACA,WACA,UACA,MACA,eACA,YACA,YACA,oBACA,OACA,WACA,OACA,aACA,YACA,QACA,QACA,iBACA,aACA,iBACA,mBACA,mBACA,cACA,SACA,gBACA,kBACA,gBACA,aACA,eACA,iBACA,eACA,eACA,MACA,SACA,iBACA,WACA,gBACA,uBACA,qBACA,oBACA,uBACA,cACA,iBACA,kBACA,cACA,YACA,QACA,WACA,UACA,WACA,oBACA,sBACA,oBACA,sBACA,aACA,QACA,sBACA,uBACA,UACA,SACA,iBACA,kBACA,wBACA,oBACA,0BACA,gBACA,aACA,iBACA,iBACA,SACA,aACA,iBACA,aACA,iBACA,QACA,gBACA,0BACA,kBACA,gBACA,eACA,eACA,eACA,eACA,YACA,kBACA,iBACA,gBACA,iBACA,kBACA,QACA,cACA,eACA,gBACA,2BACA,0BACA,0BACA,iBACA,qBACA,WACA,QACA,aACA,qBACA,sBACA,gBACA,oBACA,eACA,WACA,OACA,UACA,oBACA,WACA,QACA,cACA,qBACA,iBACA,QACA,SACA,UACA,gBACA,kBACA,QACA,cACA,QACA,uBACA,yBACA,cACA,UACA,gBACA,SACA,OACA,UACA,SACA,gBACA,wBACA,iBACA,UACA,SACA,aACA,SACA,YACA,YACA,WACA,QACA,YACA,SACA,iBACA,kBACA,UACA,cACA,OACA,wBACA,cACA,eACA,SACA,YACA,OACA,UACA,WACA,SACA,wBACA,uBACA,uBACA,kBACA,UACA,aACA,SACA,WACA,aACA,OACA,WACA,wBACA,0BACA,qBACA,sBACA,gBACA,oBACA,yBACA,2BACA,2BACA,sBACA,wBACA,oBACA,iBACA,iBACA,kBACA,2BACA,iBACA,QACA,OACA,WACA,kBACA,gBACA,UACA,wBACA,8CACA,yBACA,uBACA,sBACA,oBACA,yBACA,kBACA,WACA,iBACA,YACA,gBACA,YACA,aACA,MACA,aACA,SACA,OACA,gBACA,YACA,UACA,gBACA,gBACA,gBACA,aACA,OACA,cACA,YACA,QACA,yBACA,wBACA,yBACA,wBACA,OACA,UACA,QACA,uBACA,aACA,kBACA,QACA,UACA,YACA,qBACA,iBACA,aACA,aACA,YACA,uBACA,gBACA,eACA,OACA,gBACA,eACA,gBACA,oBACA,MACA,iBACA,SACA,iBACA,aACA,YACA,eACA,UACA,cACA,UACA,UACA,WACA,aACA,WACA,iBACA,gBACA,YACA,QACA,WACA,UACA,YACA,MACA,QACA,OACA,WACA,OACA,gBACA,UACA,YACA,YACA,gBACA,gBACA,cACA,OACA,YACA,gBACA,KACA,OACA,cACA,cACA,MACA,gBACA,wBACA,wBACA,qBACA,YACA,gBACA,WACA,eACA,cACA,aACA,gBACA,cACA,aACA,eACA,WACA,gBACA,YACA,cACA,aACA,cACA,YACA,WACA,aACA,iBACA,aACA,YACA,cACA,cACA,aACA,YACA,UACA,WACA,YACA,UACA,QACA,UACA,YACA,kBACA,gBACA,WACA,KACA,MACA,WACA,UACA,OACA,YACA,iBACA,OACA,YACA,uBACA,UACA,YAYJ,OATEhQ,OAAAC,eAAI8P,EAAA7P,UAA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","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, Optional, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Dir } from '@angular/cdk/bidi';\n\nexport interface IPageChangeEvent {\n  page: number;\n  maxPage: number;\n  pageSize: number;\n  total: number;\n  fromRow: number;\n  toRow: number;\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-paging-bar',\n  templateUrl: './paging-bar.component.html',\n  styleUrls: ['./paging-bar.component.scss' ],\n})\nexport class TdPagingBarComponent implements OnInit {\n\n  private _pageSize: number = 50;\n  private _total: number = 0;\n  private _page: number = 1;\n  private _fromRow: number = 1;\n  private _toRow: number = 1;\n  private _initialized: boolean = false;\n  private _pageLinks: number[] = [];\n  private _pageLinkCount: number = 0;\n  // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n  private _hitEnd: boolean = false;\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n  private _hitStart: boolean = false;\n\n  /**\n   * firstLast?: boolean\n   * Shows or hides the first and last page buttons of the paging bar. Defaults to 'false'\n   */\n  @Input('firstLast') firstLast: boolean = true;\n\n  /**\n   * initialPage?: number\n   * Sets starting page for the paging bar. Defaults to '1'\n   */\n  @Input('initialPage') initialPage: number = 1;\n\n  /**\n   * pageLinkCount?: number\n   * Amount of page navigation links for the paging bar. Defaults to '0'\n   */\n  @Input('pageLinkCount')\n  set pageLinkCount(pageLinkCount: number) {\n    this._pageLinkCount = coerceNumberProperty(pageLinkCount);\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageLinkCount(): number {\n    return this._pageLinkCount;\n  }\n\n  /**\n   * pageSize?: number\n   * Selected page size for the pagination. Defaults 50.\n   */\n  @Input('pageSize')\n  set pageSize(pageSize: number) {\n    this._pageSize = coerceNumberProperty(pageSize);\n    this._page = 1;\n    if (this._initialized) {\n      this._handleOnChange();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  /**\n   * total: number\n   * Total rows for the pagination.\n   */\n  @Input('total')\n  set total(total: number) {\n    this._total = coerceNumberProperty(total);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._changeDetectorRef.markForCheck();\n  }\n  get total(): number {\n    return this._total;\n  }\n\n  /**\n   * pageLinks: number[]\n   * Returns the pageLinks in an array\n   */\n  get pageLinks(): number[] {\n    return this._pageLinks;\n  }\n\n  /**\n   * range: string\n   * Returns the range of the rows.\n   */\n  get range(): string {\n    return `${!this._toRow ? 0 : this._fromRow}-${this._toRow}`;\n  }\n\n  /**\n   * page: number\n   * Returns the current page.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * page: number\n   * Returns the max page for the current pageSize and total.\n   */\n  get maxPage(): number {\n    return Math.ceil(this._total / this._pageSize);\n  }\n\n  /**\n   * change?: function\n   * Method to be executed when page size changes or any button is clicked in the paging bar.\n   * Emits an [IPageChangeEvent] implemented object.\n   */\n  @Output('change') onChange: EventEmitter<IPageChangeEvent> = new EventEmitter<IPageChangeEvent>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._page = coerceNumberProperty(this.initialPage);\n    this._calculateRows();\n    this._calculatePageLinks();\n    this._initialized = true;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * navigateToPage?: function\n   * Navigates to a specific valid page. Returns 'true' if page is valid, else 'false'.\n   */\n  navigateToPage(page: number): boolean {\n    if (page === 1 || (page >= 1 && page <= this.maxPage)) {\n      this._page = coerceNumberProperty(Math.floor(page));\n      this._handleOnChange();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * firstPage?: function\n   * Navigates to the first page. Returns 'true' if page is valid, else 'false'.\n   */\n  firstPage(): boolean {\n    return this.navigateToPage(1);\n  }\n\n  /**\n   * prevPage?: function\n   * Navigates to the previous page. Returns 'true' if page is valid, else 'false'.\n   */\n  prevPage(): boolean {\n    return this.navigateToPage(this._page - 1);\n  }\n\n  /**\n   * nextPage?: function\n   * Navigates to the next page. Returns 'true' if page is valid, else 'false'.\n   */\n  nextPage(): boolean {\n    return this.navigateToPage(this._page + 1);\n  }\n\n  /**\n   * lastPage?: function\n   * Navigates to the last page. Returns 'true' if page is valid, else 'false'.\n   */\n  lastPage(): boolean {\n    return this.navigateToPage(this.maxPage);\n  }\n\n  isMinPage(): boolean {\n    return this._page <= 1;\n  }\n\n  isMaxPage(): boolean {\n    return this._page >= this.maxPage;\n  }\n\n  private _calculateRows(): void {\n    let top: number = (this._pageSize * this._page);\n    this._fromRow = (this._pageSize * (this._page - 1)) + 1;\n    this._toRow = this._total > top ? top : this._total;\n  }\n\n  /**\n   * _calculatePageLinks?: function\n   * Calculates the page links that should be shown to the user based on the current state of the paginator\n   */\n  private _calculatePageLinks(): void {\n    // special case when 2 pageLinks, detect when hit end of pages so can lead in correct direction\n    if (this.isMaxPage()) {\n      this._hitEnd = true;\n      this._hitStart = false;\n    }\n    // special case when 2 pageLinks, detect when hit start of pages so can lead in correct direction\n    if (this.isMinPage()) {\n      this._hitEnd = false;\n      this._hitStart = true;\n    }\n    // If the pageLinkCount goes above max possible pages based on perpage setting then reset it to maxPage\n    let actualPageLinkCount: number = this.pageLinkCount;\n    if (this.pageLinkCount > this.maxPage) {\n      actualPageLinkCount = this.maxPage;\n    }\n    // reset the pageLinks array\n    this._pageLinks = [];\n    // fill in the array with the pageLinks based on the current selected page\n    let middlePageLinks: number = Math.floor(actualPageLinkCount / 2);\n    for (let x: number = 0; x < actualPageLinkCount; x++) {\n      // don't go past the maxPage in the pageLinks\n      // have to handle even and odd pageLinkCounts differently so can still lead to the next numbers\n      if ((actualPageLinkCount % 2 === 0 && (this.page + middlePageLinks > this.maxPage)) ||\n          (actualPageLinkCount % 2 !== 0 && (this.page + middlePageLinks >= this.maxPage))) {\n        this._pageLinks[x] = this.maxPage - (actualPageLinkCount - (x + 1));\n      // if the selected page is after the middle then set that page as middle and get the correct balance on left and right\n      // special handling when there are only 2 pageLinks to just drop to next if block so can lead to next numbers when moving to right\n      // when moving to the left then go into this block\n      } else if ((actualPageLinkCount > 2 || actualPageLinkCount <= 2 && this._hitEnd) && (this.page - middlePageLinks) > 0) {\n        this._pageLinks[x] = (this.page - middlePageLinks) + x;\n      // if the selected page is before the middle then set the pages based on the x index leading up to and after selected page\n      } else if ((this.page - middlePageLinks) <= 0) {\n        this._pageLinks[x] = x + 1;\n      // other wise just set the array in order starting from the selected page\n      } else {\n        this._pageLinks[x] = this.page + x;\n      }\n    }\n  }\n\n  private _handleOnChange(): void {\n    this._calculateRows();\n    this._calculatePageLinks();\n    let event: IPageChangeEvent = {\n      page: this._page,\n      maxPage: this.maxPage,\n      pageSize: this._pageSize,\n      total: this._total,\n      fromRow: this._fromRow,\n      toRow: this._toRow,\n    };\n    this._changeDetectorRef.markForCheck();\n    this.onChange.emit(event);\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdPagingBarComponent } from './paging-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdPagingBarComponent,\n  ],\n  exports: [\n    TdPagingBarComponent,\n  ],\n})\nexport class CovalentPagingModule {\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({selector: '[tdVirtualScrollRow]'})\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\n\n  constructor(templateRef: TemplateRef<any>,\n              viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n  \n}\n","import { Component, Directive, Input, Output, EventEmitter, ContentChild, AfterViewInit, ViewChild,\n         ChangeDetectionStrategy, ChangeDetectorRef, QueryList, ViewChildren, ElementRef, HostListener,\n         Renderer2, AfterViewChecked, OnDestroy, TrackByFunction } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\n\nconst TD_VIRTUAL_OFFSET: number = 2;\nconst SCROLL_DEBOUNCE: number = 200;\n\nexport interface ITdVirtualScrollBottomEvent {\n  lastRow: any;\n  lastIndex: number;\n}\n\n@Component({\n  selector: 'td-virtual-scroll-container',\n  styleUrls: ['./virtual-scroll-container.component.scss' ],\n  templateUrl: './virtual-scroll-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\n\n  private _subs: Subscription[] = [];\n  private _bottom: Subject<any> = new Subject();\n  private _initialized: boolean = false;\n\n  private _totalHeight: number = 0;\n  private _hostHeight: number = 0;\n  private _scrollVerticalOffset: number = 0;\n  private _offsetTransform: SafeStyle;\n\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  private _data: any[];\n  private _virtualData: any[];\n\n  /**\n   * data: any[]\n   * List of items to virtually iterate on.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    if (this._initialized) {\n      this._calculateVirtualRows();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * bottom: function\n   * Method to be executed when user scrolled to the last item of the list.\n   * An [ITdVirtualScrollBottomEvent] event is emitted\n   */\n  @Output() bottom: EventEmitter<ITdVirtualScrollBottomEvent> = new EventEmitter<ITdVirtualScrollBottomEvent>();\n\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\n\n  @ContentChild(TdVirtualScrollRowDirective) _rowTemplate: TdVirtualScrollRowDirective;\n\n  get rowHeight(): number {\n    if (this._rows && this._rows.toArray()[0]) {\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\n    }\n    return 0;\n  }\n\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _domSanitizer: DomSanitizer,\n              private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this._subs.push(this._rows.changes.subscribe(() => {\n      this._calculateVirtualRows();\n    }));\n    this._initialized = true;\n    this._calculateVirtualRows();\n\n    this._subs.push(this._bottom.pipe(\n      debounceTime(SCROLL_DEBOUNCE),\n    ).subscribe(() => {\n      this.bottom.emit({\n        lastRow: this._data[this._data.length - 1],\n        lastIndex: this.toRow,\n      });\n    }));\n  }\n\n  ngAfterViewChecked(): void {\n    let newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\n    if (this._hostHeight !== newHostHeight) {\n      this._hostHeight = newHostHeight;\n      if (this._initialized) {\n        this._calculateVirtualRows();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * trackBy?: TrackByFunction\n   * This accepts the same trackBy function [ngFor] does.\n   * https://angular.io/api/core/TrackByFunction\n   */\n  @Input('trackBy') trackBy: TrackByFunction<any> =  (index: number, item: any) => {\n    return item;\n  }\n\n  @HostListener('scroll', ['$event'])\n  handleScroll(event: Event): void {\n    let element: HTMLElement = (<HTMLElement>event.target);\n    if (element) {\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._scrollVerticalOffset = verticalScroll;\n        if (this._initialized) {\n          this._calculateVirtualRows();\n        }\n      }\n      if (this._initialized) {\n        // check to see if bottom was hit to throw the bottom event\n        if ((this._data.length * this.rowHeight) - (verticalScroll + this._hostHeight) === 0) {\n          this._bottom.next();\n        }\n      }\n    }\n  }\n\n  /**\n   * Method to refresh and recalculate the virtual rows\n   * e.g. after changing the [data] content\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Method to scroll to a specific row of the list.\n   */\n  scrollTo(row: number): void {\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the start of the list.\n   */\n  scrollToStart(): void {\n    this.scrollTo(0);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to scroll to the end of the list.\n   */\n  scrollToEnd(): void {\n    this.scrollTo(this.totalHeight / this.rowHeight);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _calculateVirtualRows(): void {\n    if (this._data) {\n      this._totalHeight = this._data.length * this.rowHeight;\n      let fromRow: number = Math.floor((this._scrollVerticalOffset / this.rowHeight)) - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n      let range: number = Math.floor((this._hostHeight / this.rowHeight)) + (TD_VIRTUAL_OFFSET * 2);\n      let toRow: number = range + this.fromRow;\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    if (this._scrollVerticalOffset > (TD_VIRTUAL_OFFSET * this.rowHeight)) {\n      offset = this.fromRow * this.rowHeight;\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\n\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [\n  TdVirtualScrollRowDirective,\n  TdVirtualScrollContainerComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_VIRTUAL_SCROLL,\n  ],\n  exports: [\n    TD_VIRTUAL_SCROLL,\n  ],\n})\nexport class CovalentVirtualScrollModule {\n\n}\n","import { Component, Input, HostBinding, ChangeDetectionStrategy,\n         ViewChild, ElementRef, AfterContentInit } from '@angular/core';\n\nexport enum TdNotificationCountPositionY {\n  Top = 'top',\n  Bottom = 'bottom',\n  Center = 'center',\n}\n\nexport enum TdNotificationCountPositionX {\n  Before = 'before',\n  After = 'after',\n  Center = 'center',\n}\n\nexport const DEFAULT_NOTIFICATION_LIMIT: number = 99;\n\n@Component({\n  selector: 'td-notification-count',\n  styleUrls: ['./notification-count.component.scss' ],\n  templateUrl: './notification-count.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdNotificationCountComponent implements AfterContentInit {\n\n  private _notifications: number | boolean = 0;\n  private _positionY: TdNotificationCountPositionY;\n  private _positionX: TdNotificationCountPositionX;\n  private _limit: number = DEFAULT_NOTIFICATION_LIMIT;\n\n  /**\n   * Div content wrapper of `ng-content`.\n   */\n  @ViewChild('content') content: ElementRef;\n\n  /**\n   * color?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\n   */\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\n\n  /**\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\n   * Sets the X position of the notification tip.\n   * Defaults to \"after\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionX(positionX: TdNotificationCountPositionX) {\n    this._positionX = positionX;\n  }\n  get positionX(): TdNotificationCountPositionX {\n    return this._positionX;\n  }\n\n  /**\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\n   * Sets the Y position of the notification tip.\n   * Defaults to \"top\" if it has content, else 'center'.\n   */\n  @Input()\n  set positionY(positionY: TdNotificationCountPositionY) {\n    this._positionY = positionY;\n  }\n  get positionY(): TdNotificationCountPositionY {\n    return this._positionY;\n  }\n\n  /**\n   * notifications?: number | boolean\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\n   */\n  @Input()\n  set notifications(notifications: number | boolean) {\n    this._notifications = notifications;\n  }\n\n   /**\n    * limit?: number\n    * Limit for notification count. If the number of notifications is greater than limit, then + will be added. Defaults to 99.\n    */\n  @Input()\n  set limit(limit: number) {\n    this._limit = limit;\n  }\n\n  @HostBinding('class.td-notification-hidden')\n  get hideHost(): boolean {\n    return !this.show && !this._hasContent();\n  }\n\n  /**\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\n   * Makes the notification tip show without a count.\n   */\n  get noCount(): string | boolean {\n    return this._notifications === true;\n  }\n\n  /**\n   * Notification display string when a count is available.\n   * Anything over 99 gets set as 99+\n   */\n  get notificationsDisplay(): string {\n    if (this._notifications > this._limit) {\n      return `${this._limit}+`;\n    }\n    return this._notifications.toString();\n  }\n\n  /**\n   * Shows notification tip only when [notifications] is true or a positive integer.\n   */\n  get show(): boolean {\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\n  }\n\n  /**\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\n   */\n  ngAfterContentInit(): void {\n    if (!this._positionX) {\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\n    }\n    if (!this._positionY) {\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\n    }\n  }\n\n  /**\n   * Method to check if element has any kind of content (elements or text)\n   */\n  private _hasContent(): boolean {\n    if (this.content) {\n      let contentElement: HTMLElement = this.content.nativeElement;\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\n    }\n    return false;\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { TdNotificationCountComponent } from './notification-count.component';\n\nconst TD_NOTIFICATIONS: Type<any>[] = [\n  TdNotificationCountComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_NOTIFICATIONS,\n  ],\n  exports: [\n    TD_NOTIFICATIONS,\n  ],\n})\nexport class CovalentNotificationsModule {\n\n}\n","import { Directive } from '@angular/core';\nimport { HostListener, Host, Optional } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdAutoTrim]',\n})\nexport class TdAutoTrimDirective {\n\n  constructor(@Optional() @Host() private _model: NgModel) {}\n\n  /**\n   * Listens to host's (blur) event and trims value.\n   */\n  @HostListener('blur', ['$event'])\n  onBlur(event: Event): void {\n    if (this._model && this._model.value && typeof(this._model.value) === 'string') {\n      this._model.update.emit(this._model.value.trim());\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TdTimeAgoPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((startTime - time.getTime()) / 1000);\n\n    if (diff < 2) {\n      return '1 second ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' seconds ago';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 minute ago';\n    }\n    if (diff < 60) {\n      return Math.floor(diff) + ' minutes ago';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return '1 hour ago';\n    }\n    if (diff < 24) {\n      return Math.floor(diff) + ' hours ago';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return '1 day ago';\n    }\n    if (diff < 30) {\n      return Math.floor(diff) + ' days ago';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return '1 month ago';\n    }\n    if (diff < 12) {\n      return Math.floor(diff) + ' months ago';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return '1 year ago';\n    } else {\n      return Math.floor(diff) + ' years ago';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeDifference',\n})\n\nexport class TdTimeDifferencePipe implements PipeTransform {\n  transform(start: any, end?: any): string {\n    let startTime: Date = new Date(start);\n    let endTime: Date;\n\n    if (end !== undefined) {\n      endTime = new Date(end);\n    } else {\n      endTime = new Date();\n    }\n\n    if (!startTime.getTime() || !endTime.getTime()) {\n      return 'Invalid Date';\n    }\n\n    let diff: number = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);\n\n    let days: number = Math.floor(diff / (60 * 60 * 24));\n    diff = diff - (days * (60 * 60 * 24));\n\n    let hours: number = Math.floor(diff / (60 * 60));\n    diff = diff - (hours * (60 * 60));\n\n    let minutes: number = Math.floor(diff / (60));\n    diff -= minutes * (60);\n\n    let seconds: number = diff;\n\n    let pad: string = '00';\n\n    let daysFormatted: string = '';\n\n    if (days > 0 && days < 2) {\n      daysFormatted = ' day - ';\n    } else if (days > 1) {\n      daysFormatted = ' days - ' ;\n    }\n\n    return (days > 0 ? days + daysFormatted : daysFormatted) +\n     pad.substring(0, pad.length - (hours + '').length) + hours + ':' +\n     pad.substring(0, pad.length - (minutes + '').length) + minutes + ':' +\n     pad.substring(0, pad.length - (seconds + '').length) + seconds;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeUntil',\n})\nexport class TdTimeUntilPipe implements PipeTransform {\n  transform(time: any, reference?: any): string {\n    // Convert time to date object if not already\n    time = new Date(time);\n    let ref: Date = new Date(reference);\n\n    // If not a valid timestamp, return 'Invalid Date'\n    if (!time.getTime()) {\n      return 'Invalid Date';\n    }\n\n    // For unit testing, we need to be able to declare a static start time\n    // for calculations, or else speed of tests can bork.\n    let startTime: number = isNaN(ref.getTime()) ? Date.now() : ref.getTime();\n    let diff: number = Math.floor((time.getTime() - startTime) / 1000);\n\n    if (diff < 2) {\n      return 'in 1 second';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' seconds';\n    }\n    // Minutes\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 minute';\n    }\n    if (diff < 60) {\n      return 'in ' + Math.floor(diff) + ' minutes';\n    }\n    // Hours\n    diff = diff / 60;\n    if (diff < 2) {\n      return 'in 1 hour';\n    }\n    if (diff < 24) {\n      return 'in ' + Math.floor(diff) + ' hours';\n    }\n    // Days\n    diff = diff / 24;\n    if (diff < 2) {\n      return 'in 1 day';\n    }\n    if (diff < 30) {\n      return 'in ' + Math.floor(diff) + ' days';\n    }\n    // Months\n    diff = diff / 30;\n    if (diff < 2) {\n      return 'in 1 month';\n    }\n    if (diff < 12) {\n      return 'in ' + Math.floor(diff) + ' months';\n    }\n    // Years\n    diff = diff / 12;\n    if (diff < 2) {\n      return 'in 1 year';\n    } else {\n      return 'in ' + Math.floor(diff) + ' years';\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes',\n})\n\nexport class TdBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1024;\n    let sizes: string[] = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decimalBytes',\n})\n\nexport class TdDecimalBytesPipe implements PipeTransform {\n  /* `bytes` needs to be `any` or TypeScript complains\n  Tried both `number` and `number | string` */\n  transform(bytes: any, precision: number = 2): string {\n    if (bytes === 0) {\n      return '0 B';\n    } else if (isNaN(parseInt(bytes, 10))) {\n      /* If not a valid number, return 'Invalid Number' */\n      return 'Invalid Number';\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i: number = Math.floor(Math.log(bytes) / Math.log(k));\n    // if less than 1\n    if (i < 0) {\n      return 'Invalid Number';\n    }\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(precision)) + ' ' + sizes[i];\n  }\n}\n","import { Pipe, PipeTransform, Inject, LOCALE_ID } from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\n@Pipe({\n  name: 'digits',\n})\n\nexport class TdDigitsPipe implements PipeTransform {\n\n  private _decimalPipe: DecimalPipe;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string = 'en') {\n    this._decimalPipe = new DecimalPipe(this._locale);\n  }\n\n  /* `digits` needs to be type `digits: any` or TypeScript complains */\n  transform(digits: any, precision: number = 1): string {\n    if (digits === 0) {\n      return '0';\n    } else if (isNaN(parseInt(digits, 10))) {\n      /* If not a valid number, return the value */\n      return digits;\n    } else if (digits < 1) {\n      return this._decimalPipe.transform(digits.toFixed(precision));\n    }\n    let k: number = 1000;\n    let sizes: string[] = ['', 'K', 'M', 'B', 'T', 'Q'];\n    let i: number = Math.floor(Math.log(digits) / Math.log(k));\n    let size: string = sizes[i];\n    return this._decimalPipe.transform(parseFloat((digits / Math.pow(k, i)).toFixed(precision))) + (size ? ' ' + size : '');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate',\n})\n\nexport class TdTruncatePipe implements PipeTransform {\n  transform(text: any, length: number): string {\n    if (typeof text !== 'string') {\n      return '';\n    }\n\n    // Truncate\n    let truncated: string = text.substr(0, length);\n\n    if (text.length > length) {\n      if (truncated.lastIndexOf(' ') > 0) {\n        truncated = truncated.trim();\n      }\n\n      truncated += 'â¦';\n    }\n\n    return truncated;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized } from '@angular/router';\n\nimport { filter, pairwise } from 'rxjs/operators';\n\n@Injectable()\nexport class RouterPathService {\nprivate static _previousRoute: string = '/';\n  constructor(private _router: Router) {\n    this._router.events.pipe(\n      filter((e: any) => e instanceof RoutesRecognized),\n      pairwise(),\n    ).subscribe((e: any[]) => {\n      RouterPathService._previousRoute = e[0].urlAfterRedirects;\n    });\n  }\n\n  /*\n  * Utility function to get the route the user previously went to\n  * good for use in a \"back button\"\n  */\n  getPreviousRoute(): string {\n    return RouterPathService._previousRoute;\n  }\n}\n","/*\n * Copyright (C) 2016-2017 by Teradata Corporation. All rights reserved.\n * TERADATA CORPORATION CONFIDENTIAL AND TRADE SECRET\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IconService {\n\n  private _icons: string[] = [\n    'access_alarm',\n    'access_alarms',\n    'access_time',\n    'accessibility',\n    'account_balance',\n    'account_balance_wallet',\n    'account_box',\n    'account_circle',\n    'add',\n    'add_alarm',\n    'add_box',\n    'add_circle',\n    'add_circle_outline',\n    'add_shopping_cart',\n    'add_to_photos',\n    'adjust',\n    'alarm',\n    'alarm_add',\n    'alarm_off',\n    'alarm_on',\n    'album',\n    'android',\n    'announcement',\n    'apps',\n    'archive',\n    'arrow_back',\n    'arrow_drop_down',\n    'arrow_drop_down_circle',\n    'arrow_drop_up',\n    'arrow_forward',\n    'aspect_ratio',\n    'assessment',\n    'assignment',\n    'assignment_ind',\n    'assignment_late',\n    'assignment_return',\n    'assignment_returned',\n    'assignment_turned_in',\n    'assistant_photo',\n    'attach_file',\n    'attach_money',\n    'attachment',\n    'audiotrack',\n    'autorenew',\n    'av_timer',\n    'backspace',\n    'backup',\n    'battery_alert',\n    'battery_charging_full',\n    'battery_full',\n    'battery_std',\n    'battery_unknown',\n    'beenhere',\n    'block',\n    'bluetooth',\n    'bluetooth_audio',\n    'bluetooth_connected',\n    'bluetooth_disabled',\n    'bluetooth_searching',\n    'blur_circular',\n    'blur_linear',\n    'blur_off',\n    'blur_on',\n    'book',\n    'bookmark',\n    'bookmark_border',\n    'border_all',\n    'border_bottom',\n    'border_clear',\n    'border_color',\n    'border_horizontal',\n    'border_inner',\n    'border_left',\n    'border_outer',\n    'border_right',\n    'border_style',\n    'border_top',\n    'border_vertical',\n    'brightness_1',\n    'brightness_2',\n    'brightness_3',\n    'brightness_4',\n    'brightness_5',\n    'brightness_6',\n    'brightness_7',\n    'brightness_auto',\n    'brightness_high',\n    'brightness_low',\n    'brightness_medium',\n    'broken_image',\n    'brush',\n    'bug_report',\n    'build',\n    'business',\n    'cached',\n    'cake',\n    'call',\n    'call_end',\n    'call_made',\n    'call_merge',\n    'call_missed',\n    'call_received',\n    'call_split',\n    'camera',\n    'camera_alt',\n    'camera_front',\n    'camera_rear',\n    'camera_roll',\n    'cancel',\n    'cast',\n    'cast_connected',\n    'center_focus_strong',\n    'center_focus_weak',\n    'chat',\n    'check',\n    'check_box',\n    'check_box_outline_blank',\n    'check_circle',\n    'chevron_left',\n    'chevron_right',\n    'class',\n    'clear',\n    'clear_all',\n    'close',\n    'closed_caption',\n    'cloud',\n    'cloud_circle',\n    'cloud_done',\n    'cloud_download',\n    'cloud_off',\n    'cloud_queue',\n    'cloud_upload',\n    'collections',\n    'collections_bookmark',\n    'color_lens',\n    'colorize',\n    'comment',\n    'compare',\n    'computer',\n    'confirmation_number',\n    'contact_phone',\n    'contacts',\n    'content_copy',\n    'content_cut',\n    'content_paste',\n    'control_point',\n    'control_point_duplicate',\n    'create',\n    'credit_card',\n    'crop',\n    'crop_16_9',\n    'crop_3_2',\n    'crop_5_4',\n    'crop_7_5',\n    'crop_din',\n    'crop_free',\n    'crop_landscape',\n    'crop_original',\n    'crop_portrait',\n    'crop_square',\n    'dashboard',\n    'data_usage',\n    'dehaze',\n    'delete',\n    'description',\n    'desktop_mac',\n    'desktop_windows',\n    'details',\n    'developer_board',\n    'developer_mode',\n    'device_hub',\n    'devices',\n    'dialer_sip',\n    'dialpad',\n    'directions',\n    'directions_bike',\n    'directions_boat',\n    'directions_bus',\n    'directions_car',\n    'directions_railway',\n    'directions_run',\n    'directions_subway',\n    'directions_transit',\n    'directions_walk',\n    'disc_full',\n    'dns',\n    'do_not_disturb',\n    'do_not_disturb_alt',\n    'dock',\n    'domain',\n    'done',\n    'done_all',\n    'drafts',\n    'drive_eta',\n    'dvr',\n    'edit',\n    'eject',\n    'email',\n    'equalizer',\n    'error',\n    'error_outline',\n    'event',\n    'event_available',\n    'event_busy',\n    'event_note',\n    'event_seat',\n    'exit_to_app',\n    'expand_less',\n    'expand_more',\n    'explicit',\n    'explore',\n    'exposure',\n    'exposure_neg_1',\n    'exposure_neg_2',\n    'exposure_plus_1',\n    'exposure_plus_2',\n    'exposure_zero',\n    'extension',\n    'face',\n    'fast_forward',\n    'fast_rewind',\n    'favorite',\n    'favorite_border',\n    'feedback',\n    'file_download',\n    'file_upload',\n    'filter',\n    'filter_1',\n    'filter_2',\n    'filter_3',\n    'filter_4',\n    'filter_5',\n    'filter_6',\n    'filter_7',\n    'filter_8',\n    'filter_9',\n    'filter_9_plus',\n    'filter_b_and_w',\n    'filter_center_focus',\n    'filter_drama',\n    'filter_frames',\n    'filter_hdr',\n    'filter_list',\n    'filter_none',\n    'filter_tilt_shift',\n    'filter_vintage',\n    'find_in_page',\n    'find_replace',\n    'flag',\n    'flare',\n    'flash_auto',\n    'flash_off',\n    'flash_on',\n    'flight',\n    'flight_land',\n    'flight_takeoff',\n    'flip',\n    'flip_to_back',\n    'flip_to_front',\n    'folder',\n    'folder_open',\n    'folder_shared',\n    'folder_special',\n    'font_download',\n    'format_align_center',\n    'format_align_justify',\n    'format_align_left',\n    'format_align_right',\n    'format_bold',\n    'format_clear',\n    'format_color_fill',\n    'format_color_reset',\n    'format_color_text',\n    'format_indent_decrease',\n    'format_indent_increase',\n    'format_italic',\n    'format_line_spacing',\n    'format_list_bulleted',\n    'format_list_numbered',\n    'format_paint',\n    'format_quote',\n    'format_size',\n    'format_strikethrough',\n    'format_textdirection_l_to_r',\n    'format_textdirection_r_to_l',\n    'format_underlined',\n    'forum',\n    'forward',\n    'forward_10',\n    'forward_30',\n    'forward_5',\n    'fullscreen',\n    'fullscreen_exit',\n    'functions',\n    'gamepad',\n    'games',\n    'gesture',\n    'get_app',\n    'gif',\n    'gps_fixed',\n    'gps_not_fixed',\n    'gps_off',\n    'grade',\n    'gradient',\n    'grain',\n    'graphic_eq',\n    'grid_off',\n    'grid_on',\n    'group',\n    'group_add',\n    'group_work',\n    'hd',\n    'hdr_off',\n    'hdr_on',\n    'hdr_strong',\n    'hdr_weak',\n    'headset',\n    'headset_mic',\n    'healing',\n    'hearing',\n    'help',\n    'help_outline',\n    'high_quality',\n    'highlight_off',\n    'history',\n    'home',\n    'hotel',\n    'hourglass_empty',\n    'hourglass_full',\n    'http',\n    'https',\n    'image',\n    'image_aspect_ratio',\n    'import_export',\n    'inbox',\n    'indeterminate_check_box',\n    'info',\n    'info_outline',\n    'input',\n    'insert_chart',\n    'insert_comment',\n    'insert_drive_file',\n    'insert_emoticon',\n    'insert_invitation',\n    'insert_link',\n    'insert_photo',\n    'invert_colors',\n    'invert_colors_off',\n    'iso',\n    'keyboard',\n    'keyboard_arrow_down',\n    'keyboard_arrow_left',\n    'keyboard_arrow_right',\n    'keyboard_arrow_up',\n    'keyboard_backspace',\n    'keyboard_capslock',\n    'keyboard_hide',\n    'keyboard_return',\n    'keyboard_tab',\n    'keyboard_voice',\n    'label',\n    'label_outline',\n    'landscape',\n    'language',\n    'laptop',\n    'laptop_chromebook',\n    'laptop_mac',\n    'laptop_windows',\n    'launch',\n    'layers',\n    'layers_clear',\n    'leak_add',\n    'leak_remove',\n    'lens',\n    'library_add',\n    'library_books',\n    'library_music',\n    'link',\n    'list',\n    'live_help',\n    'live_tv',\n    'local_activity',\n    'local_airport',\n    'local_atm',\n    'local_bar',\n    'local_cafe',\n    'local_car_wash',\n    'local_convenience_store',\n    'local_dining',\n    'local_drink',\n    'local_florist',\n    'local_gas_station',\n    'local_grocery_store',\n    'local_hospital',\n    'local_hotel',\n    'local_laundry_service',\n    'local_library',\n    'local_mall',\n    'local_movies',\n    'local_offer',\n    'local_parking',\n    'local_pharmacy',\n    'local_phone',\n    'local_pizza',\n    'local_play',\n    'local_post_office',\n    'local_printshop',\n    'local_see',\n    'local_shipping',\n    'local_taxi',\n    'location_city',\n    'location_disabled',\n    'location_off',\n    'location_on',\n    'location_searching',\n    'lock',\n    'lock_open',\n    'lock_outline',\n    'looks',\n    'looks_3',\n    'looks_4',\n    'looks_5',\n    'looks_6',\n    'looks_one',\n    'looks_two',\n    'loop',\n    'loupe',\n    'loyalty',\n    'mail',\n    'map',\n    'markunread',\n    'markunread_mailbox',\n    'memory',\n    'menu',\n    'merge_type',\n    'message',\n    'mic',\n    'mic_none',\n    'mic_off',\n    'mms',\n    'mode_comment',\n    'mode_edit',\n    'money_off',\n    'monochrome_photos',\n    'mood',\n    'mood_bad',\n    'more',\n    'more_horiz',\n    'more_vert',\n    'mouse',\n    'movie',\n    'movie_creation',\n    'music_note',\n    'my_library_add',\n    'my_library_books',\n    'my_library_music',\n    'my_location',\n    'nature',\n    'nature_people',\n    'navigate_before',\n    'navigate_next',\n    'navigation',\n    'network_cell',\n    'network_locked',\n    'network_wifi',\n    'new_releases',\n    'nfc',\n    'no_sim',\n    'not_interested',\n    'note_add',\n    'notifications',\n    'notifications_active',\n    'notifications_none',\n    'notifications_off',\n    'notifications_paused',\n    'offline_pin',\n    'ondemand_video',\n    'open_in_browser',\n    'open_in_new',\n    'open_with',\n    'pages',\n    'pageview',\n    'palette',\n    'panorama',\n    'panorama_fish_eye',\n    'panorama_horizontal',\n    'panorama_vertical',\n    'panorama_wide_angle',\n    'party_mode',\n    'pause',\n    'pause_circle_filled',\n    'pause_circle_outline',\n    'payment',\n    'people',\n    'people_outline',\n    'perm_camera_mic',\n    'perm_contact_calendar',\n    'perm_data_setting',\n    'perm_device_information',\n    'perm_identity',\n    'perm_media',\n    'perm_phone_msg',\n    'perm_scan_wifi',\n    'person',\n    'person_add',\n    'person_outline',\n    'person_pin',\n    'personal_video',\n    'phone',\n    'phone_android',\n    'phone_bluetooth_speaker',\n    'phone_forwarded',\n    'phone_in_talk',\n    'phone_iphone',\n    'phone_locked',\n    'phone_missed',\n    'phone_paused',\n    'phonelink',\n    'phonelink_erase',\n    'phonelink_lock',\n    'phonelink_off',\n    'phonelink_ring',\n    'phonelink_setup',\n    'photo',\n    'photo_album',\n    'photo_camera',\n    'photo_library',\n    'photo_size_select_actual',\n    'photo_size_select_large',\n    'photo_size_select_small',\n    'picture_as_pdf',\n    'picture_in_picture',\n    'pin_drop',\n    'place',\n    'play_arrow',\n    'play_circle_filled',\n    'play_circle_outline',\n    'play_for_work',\n    'play_shopping_bag',\n    'playlist_add',\n    'plus_one',\n    'poll',\n    'polymer',\n    'portable_wifi_off',\n    'portrait',\n    'power',\n    'power_input',\n    'power_settings_new',\n    'present_to_all',\n    'print',\n    'public',\n    'publish',\n    'query_builder',\n    'question_answer',\n    'queue',\n    'queue_music',\n    'radio',\n    'radio_button_checked',\n    'radio_button_unchecked',\n    'rate_review',\n    'receipt',\n    'recent_actors',\n    'redeem',\n    'redo',\n    'refresh',\n    'remove',\n    'remove_circle',\n    'remove_circle_outline',\n    'remove_red_eye',\n    'reorder',\n    'repeat',\n    'repeat_one',\n    'replay',\n    'replay_10',\n    'replay_30',\n    'replay_5',\n    'reply',\n    'reply_all',\n    'report',\n    'report_problem',\n    'restaurant_menu',\n    'restore',\n    'ring_volume',\n    'room',\n    'rotate_90_degrees_ccw',\n    'rotate_left',\n    'rotate_right',\n    'router',\n    'satellite',\n    'save',\n    'scanner',\n    'schedule',\n    'school',\n    'screen_lock_landscape',\n    'screen_lock_portrait',\n    'screen_lock_rotation',\n    'screen_rotation',\n    'sd_card',\n    'sd_storage',\n    'search',\n    'security',\n    'select_all',\n    'send',\n    'settings',\n    'settings_applications',\n    'settings_backup_restore',\n    'settings_bluetooth',\n    'settings_brightness',\n    'settings_cell',\n    'settings_ethernet',\n    'settings_input_antenna',\n    'settings_input_component',\n    'settings_input_composite',\n    'settings_input_hdmi',\n    'settings_input_svideo',\n    'settings_overscan',\n    'settings_phone',\n    'settings_power',\n    'settings_remote',\n    'settings_system_daydream',\n    'settings_voice',\n    'share',\n    'shop',\n    'shop_two',\n    'shopping_basket',\n    'shopping_cart',\n    'shuffle',\n    'signal_cellular_4_bar',\n    'signal_cellular_connected_no_internet_4_bar',\n    'signal_cellular_no_sim',\n    'signal_cellular_null',\n    'signal_cellular_off',\n    'signal_wifi_4_bar',\n    'signal_wifi_4_bar_lock',\n    'signal_wifi_off',\n    'sim_card',\n    'sim_card_alert',\n    'skip_next',\n    'skip_previous',\n    'slideshow',\n    'smartphone',\n    'sms',\n    'sms_failed',\n    'snooze',\n    'sort',\n    'sort_by_alpha',\n    'space_bar',\n    'speaker',\n    'speaker_group',\n    'speaker_notes',\n    'speaker_phone',\n    'spellcheck',\n    'star',\n    'star_border',\n    'star_half',\n    'stars',\n    'stay_current_landscape',\n    'stay_current_portrait',\n    'stay_primary_landscape',\n    'stay_primary_portrait',\n    'stop',\n    'storage',\n    'store',\n    'store_mall_directory',\n    'straighten',\n    'strikethrough_s',\n    'style',\n    'subject',\n    'subtitles',\n    'supervisor_account',\n    'surround_sound',\n    'swap_calls',\n    'swap_horiz',\n    'swap_vert',\n    'swap_vertical_circle',\n    'switch_camera',\n    'switch_video',\n    'sync',\n    'sync_disabled',\n    'sync_problem',\n    'system_update',\n    'system_update_alt',\n    'tab',\n    'tab_unselected',\n    'tablet',\n    'tablet_android',\n    'tablet_mac',\n    'tag_faces',\n    'tap_and_play',\n    'terrain',\n    'text_format',\n    'textsms',\n    'texture',\n    'theaters',\n    'thumb_down',\n    'thumb_up',\n    'thumbs_up_down',\n    'time_to_leave',\n    'timelapse',\n    'timer',\n    'timer_10',\n    'timer_3',\n    'timer_off',\n    'toc',\n    'today',\n    'toll',\n    'tonality',\n    'toys',\n    'track_changes',\n    'traffic',\n    'transform',\n    'translate',\n    'trending_down',\n    'trending_flat',\n    'trending_up',\n    'tune',\n    'turned_in',\n    'turned_in_not',\n    'tv',\n    'undo',\n    'unfold_less',\n    'unfold_more',\n    'usb',\n    'verified_user',\n    'vertical_align_bottom',\n    'vertical_align_center',\n    'vertical_align_top',\n    'vibration',\n    'video_library',\n    'videocam',\n    'videocam_off',\n    'view_agenda',\n    'view_array',\n    'view_carousel',\n    'view_column',\n    'view_comfy',\n    'view_compact',\n    'view_day',\n    'view_headline',\n    'view_list',\n    'view_module',\n    'view_quilt',\n    'view_stream',\n    'view_week',\n    'vignette',\n    'visibility',\n    'visibility_off',\n    'voice_chat',\n    'voicemail',\n    'volume_down',\n    'volume_mute',\n    'volume_off',\n    'volume_up',\n    'vpn_key',\n    'vpn_lock',\n    'wallpaper',\n    'warning',\n    'watch',\n    'wb_auto',\n    'wb_cloudy',\n    'wb_incandescent',\n    'wb_iridescent',\n    'wb_sunny',\n    'wc',\n    'web',\n    'whatshot',\n    'widgets',\n    'wifi',\n    'wifi_lock',\n    'wifi_tethering',\n    'work',\n    'wrap_text',\n    'youtube_searched_for',\n    'zoom_in',\n    'zoom_out',\n  ];\n\n  get icons(): string[] {\n    return this._icons;\n  }\n\n  filter(query: string): string[] {\n    return this.icons.filter((el: string) => {\n      return el.toLowerCase().indexOf(query ? query.toLowerCase() : '') > -1;\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * FORMS\n */\n\n// Form Directives\nimport { TdAutoTrimDirective } from './forms/auto-trim/auto-trim.directive';\n\nconst TD_FORMS: Type<any>[] = [\n  TdAutoTrimDirective,\n];\n\n// Validators\nconst TD_VALIDATORS: Type<any>[] = [\n];\n\n/**\n * PIPES\n */\nimport { TdTimeAgoPipe } from './pipes/time-ago/time-ago.pipe';\nimport { TdTimeDifferencePipe } from './pipes/time-difference/time-difference.pipe';\nimport { TdTimeUntilPipe } from './pipes/time-until/time-until.pipe';\nimport { TdBytesPipe } from './pipes/bytes/bytes.pipe';\nimport { TdDecimalBytesPipe } from './pipes/decimal-bytes/decimal-bytes.pipe';\nimport { TdDigitsPipe } from './pipes/digits/digits.pipe';\nimport { TdTruncatePipe } from './pipes/truncate/truncate.pipe';\n\nconst TD_PIPES: Type<any>[] = [\n  TdTimeAgoPipe,\n  TdTimeDifferencePipe,\n  TdTimeUntilPipe,\n  TdBytesPipe,\n  TdDecimalBytesPipe,\n  TdDigitsPipe,\n  TdTruncatePipe,\n];\n\n/**\n * Services\n */\n\nimport { RouterPathService } from './services/router-path.service';\nimport { IconService } from './services/icon.service';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n  ],\n  declarations: [\n    TD_FORMS,\n    TD_PIPES,\n    TD_VALIDATORS,\n  ],\n  exports: [\n    FormsModule,\n    CommonModule,\n    TD_FORMS,\n    TD_PIPES,\n    TD_VALIDATORS,\n  ],\n  providers: [\n    RouterPathService,\n    IconService,\n  ],\n})\nexport class CovalentCommonModule {\n\n}\n","import {\n  trigger, state, style, transition, animate, AnimationTriggerMetadata,\n  query, animateChild, group,\n} from '@angular/animations';\n\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IRotateAnimation extends IAnimationOptions {\n  degrees?: number;\n  ease?: string;\n}\n\n/**\n * const tdRotateAnimation\n *\n * Parameter Options:\n * * degressStart: Degrees of rotation that the dom object will end up in during the \"false\" state\n * * degreesEnd: Degrees of rotation that the dom object will end up in during the \"true\" state\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerates and decelerates. Defaults to ease-in.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a rotation animation.\n *\n * usage: [@tdRotate]=\"{ value: true | false, params: { degreesEnd: 90 }}\"\n */\n\nexport const tdRotateAnimation: AnimationTriggerMetadata = trigger('tdRotate', [\n  state('0', style({\n    transform: 'rotate({{ degressStart }}deg)',\n  }), { params: { degressStart: 0 }}),\n  state('1',  style({\n    transform: 'rotate({{ degreesEnd }}deg)',\n  }), { params: { degreesEnd: 180 }}),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}'),\n    ]),\n  ], { params: { duration: 250, delay: '0', ease: 'ease-in' }}),\n]);\n","import { trigger, state, style, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface ICollapseAnimation extends IAnimationOptions {\n   easeOnClose?: string;\n   easeOnOpen?: string;\n}\n\n/**\n * const tdCollapseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnClose: Animation accelerates and decelerates when closing. Defaults to ease-in.\n * * easeOnOpen: Animation accelerates and decelerates when opening. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a collapse/expand animation.\n *\n * usage: [@tdCollapse]=\"{ value: true | false, params: { duration: 500 }}\"\n */\nexport const tdCollapseAnimation: AnimationTriggerMetadata = trigger('tdCollapse', [\n  state('1', style({\n    height: '0',\n    overflow: 'hidden',\n  })),\n  state('0',  style({\n    height: AUTO_STYLE,\n    overflow: AUTO_STYLE,\n  })),\n  transition('0 => 1', [\n    style({\n      overflow: 'hidden',\n      height: AUTO_STYLE,\n    }),\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}', style({\n        height: '0',\n        overflow: 'hidden',\n      })),\n    ]),\n  ], { params: { duration: 150, delay: '0', ease: 'ease-in' }}),\n  transition('1 => 0', [\n    style({\n      height: '0',\n      overflow: 'hidden',\n    }),\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}', style({\n        overflow: 'hidden',\n        height: AUTO_STYLE,\n      })),\n    ]),\n  ], { params: { duration: 150, delay: '0', ease: 'ease-out' }}),\n]);\n","import { trigger, state, style, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group  } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\nexport interface IFadeInOutAnimation extends IAnimationOptions {\n  easeOnIn?: string;\n  easeOnOut?: string;\n}\n\n/**\n * const tdFadeInOutAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 150 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * easeOnIn: Animation accelerates and decelerates when fading in. Defaults to ease-in.\n * * easeOnOut: Animation accelerates and decelerates when fading out. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a fade animation.\n *\n * usage: [@tdFadeInOut]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFadeInOutAnimation: AnimationTriggerMetadata = trigger('tdFadeInOut', [\n    state('0', style({\n      opacity: '0',\n      visibility: 'hidden',\n    })),\n    state('1',  style({\n      opacity: AUTO_STYLE,\n      visibility: AUTO_STYLE,\n    })),\n    transition('0 => 1', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnIn }}'),\n      ]),\n    ], { params: { duration: 150, delay: '0', easeOnIn: 'ease-in' }}),\n    transition('1 => 0', [\n      group([\n        query('@*', animateChild(), { optional: true }),\n        animate('{{ duration }}ms {{ delay }}ms {{ easeOnOut }}'),\n    ]),\n  ], { params: { duration: 150, delay: '0', easeOnOut: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdBounceAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a bounce animation.\n *\n * usage: [@tdBounce]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdBounceAnimation: AnimationTriggerMetadata = trigger('tdBounce', [\n  state('0', style({\n    transform: 'translate3d(0, 0, 0)',\n  })),\n  state('1',  style({\n    transform: 'translate3d(0, 0, 0)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.2}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.4}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -30px, 0)', offset: 0.43}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.53}),\n        style({animationTimingFunction: 'cubic-bezier(0.755, 0.050, 0.855, 0.060)', transform: 'translate3d(0, -15px, 0)', offset: .7}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 0.8}),\n        style({transform: 'translate3d(0, -4px, 0)', offset: .9}),\n        style({animationTimingFunction: 'cubic-bezier(0.215, 0.610, 0.355, 1.000)', transform: 'translate3d(0, 0, 0)', offset: 1.0}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdFlashAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a flash animation.\n *\n * usage: [@tdFlash]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdFlashAnimation: AnimationTriggerMetadata = trigger('tdFlash', [\n  state('0', style({\n    opacity: 1,\n  })),\n  state('1',  style({\n    opacity: 1,\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({opacity: 1, offset: 0}),\n        style({opacity: 0, offset: 0.25}),\n        style({opacity: 1, offset: 0.5}),\n        style({opacity: 0, offset: 0.75}),\n        style({opacity: 1, offset: 1.0}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdHeadshakeAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a headshake animation.\n *\n * usage: [@tdHeadshake]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdHeadshakeAnimation: AnimationTriggerMetadata = trigger('tdHeadshake', [\n  state('0', style({\n    transform: 'translateX(0)',\n  })),\n  state('1',  style({\n    transform: 'translateX(0)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({transform: 'translateX(0)', offset: 0}),\n        style({transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065}),\n        style({transform: 'translateX(5px) rotateY(7deg)', offset: 0.185}),\n        style({transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315}),\n        style({transform: 'translateX(2px) rotateY(3deg)', offset: 0.435}),\n        style({transform: 'translateX(0)', offset: 0.50}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdJelloAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a jello animation.\n *\n * usage: [@tdJello]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdJelloAnimation: AnimationTriggerMetadata = trigger('tdJello', [\n  state('0', style({\n    transform: 'none',\n  })),\n  state('1',  style({\n    transform: 'none',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n        style({transform: 'none', offset: 0}),\n        style({transform: 'none', offset: 0.011}),\n        style({transform: 'skewX(-12.5deg) skewY(-12.5deg)', offset: 0.222}),\n        style({transform: 'skewX(6.25deg) skewY(6.25deg)', offset: 0.333}),\n        style({transform: 'skewX(-3.125deg) skewY(-3.125deg)', offset: 0.444}),\n        style({transform: 'skewX(1.5625deg) skewY(1.5625deg)', offset: 0.555}),\n        style({transform: 'skewX(-0.78125deg) skewY(-0.78125deg)', offset: 0.666}),\n        style({transform: 'skewX(0.390625deg) skewY(0.390625deg)', offset: 0.777}),\n        style({transform: 'skewX(-0.1953125deg) skewY(-0.1953125deg)', offset: 0.888}),\n      ])),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","\nimport { trigger, state, style, keyframes, transition, animate,\n         AnimationTriggerMetadata, AUTO_STYLE, query, animateChild, group } from '@angular/animations';\nimport { IAnimationOptions } from '../common/interfaces';\n\n/**\n * const tdPulseAnimation\n *\n * Parameter Options:\n * * duration: Duration the animation will run in milliseconds. Defaults to 500 ms.\n * * delay: Delay before the animation will run in milliseconds. Defaults to 0 ms.\n * * ease: Animation accelerate and decelerate style. Defaults to ease-out.\n *\n * Returns an [AnimationTriggerMetadata] object with boolean states for a pulse animation.\n *\n * usage: [@tdPulse]=\"{ value: true | false, params: { duration: 200 }}\"\n */\nexport const tdPulseAnimation: AnimationTriggerMetadata = trigger('tdPulse', [\n  state('0', style({\n    transform: 'scale3d(1, 1, 1)',\n  })),\n  state('1',  style({\n    transform: 'scale3d(1, 1, 1)',\n  })),\n  transition('0 <=> 1', [\n    group([\n      query('@*', animateChild(), { optional: true }),\n      animate('{{ duration }}ms {{ delay }}ms {{ ease }}',\n      keyframes([\n          style({ transform: 'scale3d(1, 1, 1)', offset: 0 }),\n          style({ transform: 'scale3d(1.05, 1.05, 1.05)', offset: 0.5 }),\n          style({ transform: 'scale3d(1, 1, 1)', offset: 1.0 }),\n        ]),\n      ),\n    ]),\n  ], { params: { duration: 500, delay: '0', ease: 'ease-out' }}),\n]);\n","import { ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nimport { Observable, Subject } from 'rxjs';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport interface IControlValueAccessor extends ControlValueAccessor {\n  value: any;\n  valueChanges: Observable<any>;\n  onChange: (_: any) => any;\n  onTouched: () => any;\n}\n\nexport interface IHasChangeDetectorRef {\n  _changeDetectorRef: ChangeDetectorRef;\n}\n\n/** Mixin to augment a component with ngModel support. */\nexport function mixinControlValueAccessor<T extends Constructor<IHasChangeDetectorRef>>\n                (base: T, initialValue?: any): Constructor<IControlValueAccessor> & T {\n  return class extends base {\n    private _value: any = initialValue;\n    private _subjectValueChanges: Subject<any>;\n    valueChanges: Observable<any>;\n\n    constructor(...args: any[]) {\n      super(...args); \n      this._subjectValueChanges = new Subject<any>();\n      this.valueChanges = this._subjectValueChanges.asObservable();\n    }\n\n    set value(v: any) {\n      if (v !== this._value) {\n        this._value = v;\n        this.onChange(v);\n        this._changeDetectorRef.markForCheck();\n        this._subjectValueChanges.next(v);\n      }\n    }\n    get value(): any {\n      return this._value;\n    }\n\n    writeValue(value: any): void {\n      this.value = value;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n      this.onTouched = fn;\n    }\n\n    onChange = (_: any) => noop;\n    onTouched = () => noop;\n\n  };\n}\n","import { Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class CovalentValidators {\n  static min(minValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {\n      if (!!Validators.required(c) || (!minValue && minValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v < minValue ?\n        { min: {minValue: minValue, actualValue: v} } :\n        undefined;\n    };\n    return func;\n  }\n\n  static max(maxValue: any): ValidatorFn {\n    let func: ValidatorFn = (c: AbstractControl): {[key: string]: any} => {\n      if (!!Validators.required(c) || (!maxValue && maxValue !== 0)) {\n        return undefined;\n      }\n      let v: number = c.value;\n      return v > maxValue ?\n        { max: {maxValue: maxValue, actualValue: v} } :\n        undefined;\n    };\n    return func;\n  }\n\n  static numberRequired(c: AbstractControl): {[key: string]: any} {\n    return (Number.isNaN(c.value)) ?\n        { required: true } :\n        undefined;\n  }\n\n}\n","import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\n         HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'td-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss'],\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdMessageComponent implements AfterViewInit {\n\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): any {\n    return { value: !this._opened, duration: 100 };\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\n\nconst TD_MESSAGE: Type<any>[] = [\n  TdMessageComponent,\n  TdMessageContainerDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TD_MESSAGE,\n  ],\n  exports: [\n    TD_MESSAGE,\n  ],\n})\nexport class CovalentMessageModule {\n\n}\n","import { Component, Input, Output, forwardRef, DoCheck, ViewChild, ViewChildren, QueryList, OnInit, HostListener,\n  ElementRef, Optional, Inject, Directive, TemplateRef, ViewContainerRef, ContentChild, ChangeDetectionStrategy,\n  ChangeDetectorRef, AfterViewInit, OnDestroy, HostBinding, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { EventEmitter } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, ESCAPE, LEFT_ARROW, RIGHT_ARROW, DELETE, BACKSPACE, ENTER, SPACE, TAB, HOME } from '@angular/cdk/keycodes';\nimport { MatChip } from '@angular/material/chips';\nimport { MatInput } from '@angular/material/input';\nimport { MatOption } from '@angular/material/core';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\nimport { Observable, Subscription, timer, merge, fromEvent } from 'rxjs';\nimport { filter, debounceTime } from 'rxjs/operators';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-chip]ng-template',\n})\nexport class TdChipDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-autocomplete-option]ng-template',\n})\nexport class TdAutocompleteOptionDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdChipsBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdChipsMixinBase = mixinControlValueAccessor(mixinDisabled(TdChipsBase), []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdChipsComponent),\n    multi: true,\n  }],\n  selector: 'td-chips',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./chips.component.scss' ],\n  templateUrl: './chips.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdChipsComponent extends _TdChipsMixinBase implements IControlValueAccessor, DoCheck, OnInit, AfterViewInit, OnDestroy, ICanDisable {\n\n  private _outsideClickSubs: Subscription = Subscription.EMPTY;\n\n  private _isMousedown: boolean = false;\n\n  private _items: any[];\n  private _length: number = 0;\n  private _stacked: boolean = false;\n  private _requireMatch: boolean = false;\n  private _color: 'primary' | 'accent' | 'warn' = 'primary';\n  private _inputPosition: 'before' | 'after' = 'after';\n  private _chipAddition: boolean = true;\n  private _chipRemoval: boolean = true;\n  private _focused: boolean = false;\n  private _required: boolean = false;\n  private _tabIndex: number = 0;\n  private _touchendDebounce: number = 100;\n\n  _internalClick: boolean = false;\n  _internalActivateOption: boolean = false;\n\n  @ViewChild('input') _nativeInput: ElementRef;\n  @ViewChild(MatInput) _inputChild: MatInput;\n  @ViewChild(MatAutocompleteTrigger) _autocompleteTrigger: MatAutocompleteTrigger;\n  @ViewChildren(MatChip) _chipsChildren: QueryList<MatChip>;\n\n  @ContentChild(TdChipDirective) _chipTemplate: TdChipDirective;\n  @ContentChild(TdAutocompleteOptionDirective) _autocompleteOptionTemplate: TdAutocompleteOptionDirective;\n\n  @ViewChildren(MatOption) _options: QueryList<MatOption>;\n\n  /**\n   * Flag that is true when autocomplete is focused.\n   */\n  get focused(): boolean {\n    return this._focused;\n  }\n\n  /**\n   * FormControl for the matInput element.\n   */\n  inputControl: FormControl = new FormControl();\n\n  /**\n   * items?: any[]\n   * Renders the `mat-autocomplete` with the provided list to display as options.\n   */\n  @Input('items')\n  set items(items: any[]) {\n    this._items = items;\n    this._setFirstOptionActive();\n    this._changeDetectorRef.markForCheck();\n  }\n  get items(): any[] {\n    return this._items;\n  }\n\n  /**\n   * stacked?: boolean\n   * Set stacked or horizontal chips depending on value.\n   * Defaults to false.\n   */\n  @Input('stacked')\n  set stacked(stacked: boolean) {\n    this._stacked = coerceBooleanProperty(stacked);\n  }\n  get stacked(): boolean {\n    return this._stacked;\n  }\n\n  /**\n   * inputPosition?: 'before' | 'after'\n   * Set input position before or after the chips.\n   * Defaults to 'after'.\n   */\n  @Input('inputPosition')\n  set inputPosition(inputPosition: 'before' | 'after') {\n    this._inputPosition = inputPosition;\n  }\n  get inputPosition(): 'before' | 'after' {\n    return this._inputPosition;\n  }\n\n  /**\n   * requireMatch?: boolean\n   * Blocks custom inputs and only allows selections from the autocomplete list.\n   */\n  @Input('requireMatch')\n  set requireMatch(requireMatch: boolean) {\n    this._requireMatch = coerceBooleanProperty(requireMatch);\n  }\n  get requireMatch(): boolean {\n    return this._requireMatch;\n  }\n\n  /**\n   * required?: boolean\n   * Value is set to true if at least one chip is needed\n   * Defaults to false\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * chipAddition?: boolean\n   * Disables the ability to add chips. When setting disabled as true, this will be overriden.\n   * Defaults to true.\n   */\n  @Input('chipAddition')\n  set chipAddition(chipAddition: boolean) {\n    this._chipAddition = chipAddition;\n    this._toggleInput();\n  }\n  get chipAddition(): boolean {\n    return this._chipAddition;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   * States if a chip can be added and if the input is available\n   */\n  get canAddChip(): boolean {\n    return this.chipAddition && !this.disabled;\n  }\n\n  /**\n   * chipRemoval?: boolean\n   * Disables the ability to remove chips. If it doesn't exist chip remmoval defaults to true.\n   * When setting disabled as true, this will be overriden to false.\n   */\n  @Input('chipRemoval')\n  set chipRemoval(chipRemoval: boolean) {\n    this._chipRemoval = chipRemoval;\n  }\n  get chipRemoval(): boolean {\n    return this._chipRemoval;\n  }\n\n  /**\n   * Checks if not in disabled state and if chipRemoval is set to 'true'\n   * States if a chip can be removed\n   */\n  get canRemoveChip(): boolean {\n    return this.chipRemoval && !this.disabled;\n  }\n\n  /**\n   * returns the display placeholder\n   */\n  get displayPlaceHolder(): string {\n    if (!this.canAddChip) {\n      return '';\n    }\n    return (this._required) ? `${this.placeholder} *` :  this.placeholder;\n  }\n\n  /**\n   * placeholder?: string\n   * Placeholder for the autocomplete input.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 200.\n   */\n  @Input('debounce') debounce: number = 200;\n\n  /**\n   * color?: 'primary' | 'accent' | 'warn'\n   * Sets the color for the input and focus/selected state of the chips.\n   * Defaults to 'primary'\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  /**\n   * add?: function\n   * Method to be executed when a chip is added.\n   * Sends chip value as event.\n   */\n  @Output('add') onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * remove?: function\n   * Method to be executed when a chip is removed.\n   * Sends chip value as event.\n   */\n  @Output('remove') onRemove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * inputChange?: function\n   * Method to be executed when the value in the autocomplete input changes.\n   * Sends string value as event.\n   */\n  @Output('inputChange') onInputChange: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * chipFocus?: function\n   * Method to be executed when a chip is focused.\n   * Sends chip value as event.\n   */\n  @Output('chipFocus') onChipFocus: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * blur?: function\n   * Method to be executed when a chip is blurred.\n   * Sends chip value as event.\n   */\n  @Output('chipBlur') onChipBlur: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Hostbinding to set the a11y of the TdChipsComponent depending on its state\n   */\n  @HostBinding('attr.tabindex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : this._tabIndex;\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _renderer: Renderer2,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n    this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n  }\n\n  /**\n   * Listens to host focus event to act on it\n   */\n  @HostListener('focus', ['$event'])\n  focusListener(event: FocusEvent): void {\n    // should only focus if its not via mousedown to prevent clashing with autocomplete\n    if (!this._isMousedown) {\n      this.focus();\n    }\n    event.preventDefault();\n  }\n\n  /**\n   * Listens to host mousedown event to act on it\n   */\n  @HostListener('mousedown', ['$event'])\n  mousedownListener(event: FocusEvent): void {\n     // sets a flag to know if there was a mousedown and then it returns it back to false\n    this._isMousedown = true;\n    timer().toPromise().then(() => {\n      this._isMousedown = false;\n    });\n  }\n\n  /**\n   * If clicking on :host or `td-chips-wrapper`, then we stop the click propagation so the autocomplete\n   * doesnt close automatically.\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    const clickTarget: HTMLElement = <HTMLElement>event.target;\n    if (clickTarget === this._elementRef.nativeElement ||\n        clickTarget.className.indexOf('td-chips-wrapper') > -1) {\n      this.focus();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Listens to host keydown event to act on it depending on the keypress\n   */\n  @HostListener('keydown', ['$event'])\n  keydownListener(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case TAB:\n        // if tabing out, then unfocus the component\n        timer().toPromise().then(() => {\n          this.removeFocusedState();\n        });\n        break;\n      case ESCAPE:\n        if (this._inputChild.focused) {\n          this._nativeInput.nativeElement.blur();\n          this.removeFocusedState();\n          this._closeAutocomplete();\n        } else {\n          this.focus();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  ngOnInit(): void {\n    this.inputControl.valueChanges.pipe(\n      debounceTime(this.debounce),\n    ).subscribe((value: string) => {\n      this.onInputChange.emit(value ? value : '');\n    });\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this._watchOutsideClick();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngDoCheck(): void {\n    // Throw onChange event only if array changes size.\n    if (this.value && this.value.length !== this._length) {\n      this._length = this.value.length;\n      this.onChange(this.value);\n    }\n  }\n\n  ngOnDestroy(): void {\n      this._outsideClickSubs.unsubscribe();\n  }\n\n  _setInternalClick(): void {\n    this._internalClick = true;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    this._toggleInput();\n  }\n\n  /**\n   * Method that is executed when trying to create a new chip from the autocomplete.\n   * It check if [requireMatch] is enabled, and tries to add the first active option\n   * else if just adds the value thats on the input\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  _handleAddChip(): boolean {\n    let value: any;\n    if (this.requireMatch) {\n      let selectedOptions: MatOption[] = this._options.toArray().filter((option: MatOption) => {\n        return option.active;\n      });\n      if (selectedOptions.length > 0) {\n        value = selectedOptions[0].value;\n        selectedOptions[0].setInactiveStyles();\n      }\n      if (!value) {\n        return false;\n      }\n    } else {\n      // if there is a selection, then use that\n      // else use the input value as chip\n      if (this._autocompleteTrigger.activeOption) {\n        value = this._autocompleteTrigger.activeOption.value;\n        this._autocompleteTrigger.activeOption.setInactiveStyles();\n      } else {\n        value = this._inputChild.value;\n        if (value.trim() === '') {\n          return false;\n        }\n      }\n    }\n    return this.addChip(value);\n  }\n\n  /**\n   * Method thats exectuted when trying to add a value as chip\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  addChip(value: any): boolean {\n    /**\n     * add a debounce ms delay when reopening the autocomplete to give it time\n     * to rerender the next list and at the correct spot\n     */\n    \n    this._closeAutocomplete();\n    timer(this.debounce).toPromise().then(() => {\n      this.setFocusedState();\n      this._setFirstOptionActive();\n      this._openAutocomplete();\n    });\n\n    this.inputControl.setValue('');\n    // check if value is already part of the model\n    if (this.value.indexOf(value) > -1) {\n      return false;\n    }\n\n    this.value.push(value);\n    this.onAdd.emit(value);\n    this.onChange(this.value);\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Method that is executed when trying to remove a chip.\n   * returns 'true' if successful, 'false' if it fails.\n   */\n  removeChip(index: number): boolean {\n    let removedValues: any[] = this.value.splice(index, 1);\n    if (removedValues.length === 0) {\n      return false;\n    }\n\n    /**\n     * Checks if deleting last single chip, to focus input afterwards\n     * Else check if its not the last chip of the list to focus the next one.\n     */\n    if (index === (this._totalChips - 1) && index === 0) {\n      this._inputChild.focus();     \n    } else if (index < (this._totalChips - 1)) {\n      this._focusChip(index + 1);\n    } else if (index > 0) {\n      this._focusChip(index - 1);\n    }\n\n    this.onRemove.emit(removedValues[0]);\n    this.onChange(this.value);\n    this.inputControl.setValue('');\n    this._changeDetectorRef.markForCheck();\n    return true;\n  }\n\n  /**\n   * Sets blur of chip and sends out event\n   */\n  _handleChipBlur(event: FocusEvent, value: any): void {\n    this.onChipBlur.emit(value);\n  }\n\n  /**\n   * Sets focus of chip and sends out event\n   */\n  _handleChipFocus(event: FocusEvent, value: any): void {\n    this.setFocusedState();\n    this.onChipFocus.emit(value);\n  }\n\n  _handleFocus(): boolean {\n    this.setFocusedState();\n    this._setFirstOptionActive();\n    return true;\n  }\n\n  /**\n   * Sets focus state of the component\n   */\n  setFocusedState(): void {\n    if (!this.disabled) {\n      this._focused = true;\n      this._tabIndex = -1;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Removes focus state of the component\n   */\n  removeFocusedState(): void {\n    this._focused = false;\n    this._tabIndex = 0;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Programmatically focus the input or first chip. Since its the component entry point\n   * depending if a user can add or remove chips\n   */\n  focus(): void {\n    if (this.canAddChip) {\n      this._inputChild.focus();\n    } else if (!this.disabled) {\n      this._focusFirstChip();\n    }\n  }\n\n  /**\n   * Passes relevant input key presses.\n   */\n  _inputKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case UP_ARROW:\n        /**\n         * Since the first item is highlighted on [requireMatch], we need to inactivate it\n         * when pressing the up key\n         */\n        if (this.requireMatch) {\n          let length: number = this._options.length;\n          if (length > 1 && this._options.toArray()[0].active && this._internalActivateOption) {\n            this._options.toArray()[0].setInactiveStyles();\n            this._internalActivateOption = false;\n            // prevent default window scrolling\n            event.preventDefault();\n          }\n        }\n        break;\n      case LEFT_ARROW:\n      case DELETE:\n      case BACKSPACE:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing left arrow to move to the last chip */\n        if (!this._inputChild.value) {\n          this._focusLastChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      case RIGHT_ARROW:\n        this._closeAutocomplete();\n        /** Check to see if input is empty when pressing right arrow to move to the first chip */\n        if (!this._inputChild.value) {\n          this._focusFirstChip();\n          // prevent default window scrolling\n          event.preventDefault();\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Passes relevant chip key presses.\n   */\n  _chipKeydown(event: KeyboardEvent, index: number): void {\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        /** Check to see if we can delete a chip */\n        if (this.canRemoveChip) {\n         this.removeChip(index);\n        }\n        break;\n      case UP_ARROW:\n      case LEFT_ARROW:\n        /**\n         * Check to see if left/down arrow was pressed while focusing the first chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === 0) {\n          // only try to target input if pressing left\n          if (this.canAddChip && event.keyCode === LEFT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusLastChip();\n          }\n        } else if (index > 0) {\n          this._focusChip(index - 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      case DOWN_ARROW:\n      case RIGHT_ARROW:\n        /**\n         * Check to see if right/up arrow was pressed while focusing the last chip to focus input next\n         * Also check if input should be focused\n         */\n        if (index === (this._totalChips - 1)) {\n          // only try to target input if pressing right\n          if (this.canAddChip && event.keyCode === RIGHT_ARROW) {\n            this._inputChild.focus();\n          } else {\n            this._focusFirstChip();\n          }\n        } else if (index < (this._totalChips - 1)) {\n          this._focusChip(index + 1);\n        }\n        // prevent default window scrolling\n        event.preventDefault();\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Method to remove from display the value added from the autocomplete since it goes directly as chip.\n   */\n  _removeInputDisplay(): string {\n    return '';\n  }\n\n  /**\n   * Method to open the autocomplete manually if its not already opened\n   */\n  _openAutocomplete(): void {\n    if (!this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.openPanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Method to close the autocomplete manually if its not already closed\n   */\n  _closeAutocomplete(): void {\n    if (this._autocompleteTrigger.panelOpen) {\n      this._autocompleteTrigger.closePanel();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Get total of chips\n   */\n  get _totalChips(): number {\n    let chips: MatChip[] = this._chipsChildren.toArray();\n    return chips.length;\n  }\n\n  /**\n   * Method to focus a desired chip by index\n   */\n  private _focusChip(index: number): void {\n    /** check to see if index exists in the array before focusing */\n    if (index > -1 && this._totalChips > index) {\n      this._chipsChildren.toArray()[index].focus();\n    }\n  }\n\n  /** Method to focus first chip */\n  private _focusFirstChip(): void {\n    this._focusChip(0);\n  }\n\n  /** Method to focus last chip */\n  private _focusLastChip(): void {\n    this._focusChip(this._totalChips - 1);\n  }\n\n  /**\n   * Method to toggle the disable state of input\n   * Checks if not in disabled state and if chipAddition is set to 'true'\n   */\n  private _toggleInput(): void {\n    if (this.canAddChip) {\n      this.inputControl.enable();\n    } else {\n      this.inputControl.disable();\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Sets first option as active to let the user know which one will be added when pressing enter\n   * Only if [requireMatch] has been set\n   */\n  private _setFirstOptionActive(): void {\n    if (this.requireMatch) {\n      // need to use a timer here to wait until the autocomplete has been opened (end of queue)\n      timer().toPromise().then(() => {\n        if (this.focused && this._options && this._options.length > 0) {\n          // clean up of previously active options\n          this._options.toArray().forEach((option: MatOption) => {\n            option.setInactiveStyles();\n          });\n          // set the first one as active\n          this._options.toArray()[0].setActiveStyles();\n          this._internalActivateOption = true;\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n  }\n\n  /**\n   * Watches clicks outside of the component to remove the focus\n   * The autocomplete panel is considered inside the component so we\n   * need to use a flag to find out when its clicked.\n   */\n  private _watchOutsideClick(): void {\n    if (this._document) {\n      this._outsideClickSubs = merge(\n        fromEvent(this._document, 'click'),\n        fromEvent(this._document, 'touchend'),\n      ).pipe(\n        debounceTime(this._touchendDebounce),\n        filter(\n          (event: MouseEvent) => {\n            const clickTarget: HTMLElement = <HTMLElement>event.target;\n            setTimeout(() => {\n              this._internalClick = false;\n            });\n            return this.focused &&\n                  (clickTarget !== this._elementRef.nativeElement) &&\n                  !this._elementRef.nativeElement.contains(clickTarget) && !this._internalClick;\n          },\n        ),\n      ).subscribe(() => {\n        if (this.focused) {\n          this._autocompleteTrigger.closePanel();\n          this.removeFocusedState();\n          this.onTouched();\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n    return undefined;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { TdChipsComponent, TdChipDirective, TdAutocompleteOptionDirective } from './chips.component';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n  ],\n  declarations: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n  exports: [\n    TdChipsComponent,\n    TdChipDirective,\n    TdAutocompleteOptionDirective,\n  ],\n})\nexport class CovalentChipsModule {\n\n}\n","import { Component, Input, Output, Renderer2, ElementRef, ContentChildren, QueryList, HostListener } from '@angular/core';\n\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-column-row]',\n  styleUrls: ['./data-table-row.component.scss' ],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableColumnRowComponent {\n\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\n  }\n\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'tr[td-data-table-row]',\n  styleUrls: ['./data-table-row.component.scss' ],\n  templateUrl: './data-table-row.component.html',\n})\nexport class TdDataTableRowComponent {\n\n  private _selected: boolean = false;\n\n  @Input('selected')\n  set selected(selected: boolean) {\n    if (selected) {\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\n    } else {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\n    }\n    this._selected = selected;\n  }\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  get height(): number {\n    let height: number = 48;\n    if (this._elementRef.nativeElement) {\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return height;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\n  }\n\n  /**\n   * Listening to click event to explicitly focus the row element.\n   */\n  @HostListener('click')\n  clickListener(): void {\n    this.focus();\n  }\n\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\n@Directive({selector: '[tdDataTableTemplate]ng-template'})\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\n\n  @Input() tdDataTableTemplate: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n","import { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectionStrategy,\n         ChangeDetectorRef, ViewChild, OnDestroy, AfterViewInit,\n         ContentChildren, TemplateRef, AfterContentInit, QueryList, Inject,\n         Optional, ViewChildren, ElementRef, OnInit, AfterContentChecked } from '@angular/core';\nimport { DOCUMENT, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\n\nimport { Observable, Subscription, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\nimport { ITdDataTableSortChangeEvent, TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport enum TdDataTableSortingOrder {\n  Ascending = 'ASC',\n  Descending = 'DESC',\n}\n\nexport interface ITdDataTableColumnWidth {\n  min?: number;\n  max?: number;\n}\n\nexport interface ITdDataTableColumn {\n  name: string;\n  label: string;\n  tooltip?: string;\n  numeric?: boolean;\n  format?: (value: any) => any;\n  nested?: boolean;\n  sortable?: boolean;\n  hidden?: boolean;\n  filter?: boolean;\n  width?: ITdDataTableColumnWidth | number;\n}\n\nexport interface ITdDataTableSelectEvent {\n  row: any;\n  selected: boolean;\n  index: number;\n}\n\nexport interface ITdDataTableSelectAllEvent {\n  rows: any[];\n  selected: boolean;\n}\n\nexport interface ITdDataTableRowClickEvent {\n  row: any;\n  index: number;\n}\n\nexport interface IInternalColumnWidth {\n  value: number;\n  limit: boolean;\n  index: number;\n  min?: boolean;\n  max?: boolean;\n}\n\n/**\n * Constant to set the rows offset before and after the viewport\n */\nconst TD_VIRTUAL_OFFSET: number = 2;\n\n/**\n * Constant to set default row height if none is provided\n */\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\n\nexport class TdDataTableBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdDataTableComponent),\n    multi: true,\n  }],\n  selector: 'td-data-table',\n  styleUrls: ['./data-table.component.scss' ],\n  templateUrl: './data-table.component.html',\n  inputs: ['value'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDataTableComponent extends _TdDataTableMixinBase implements IControlValueAccessor, OnInit,\n                                          AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\n\n  /** responsive width calculations */\n  private _resizeSubs: Subscription;\n  private _rowsChangedSubs: Subscription;\n  private _hostWidth: number = 0;\n\n  /** manually resizable columns */\n  private _resizableColumns: boolean = false;\n  private _columnClientX: number = 0;\n  private _columnResizeSubs: Subscription;\n  private _resizingColumn: number;\n  private _onColumnResize: Subject<number> = new Subject<number>();\n\n  get resizingColumn(): number {\n    return this._resizingColumn;\n  }\n\n  get hostWidth(): number {\n    // if the checkboxes are rendered, we need to remove their width\n    // from the total width to calculate properly\n    if (this.selectable) {\n      return this._hostWidth - 42;\n    }\n    return this._hostWidth;\n  }\n\n  private _widths: IInternalColumnWidth[] = [];\n  private _onResize: Subject<void> = new Subject<void>();\n\n  /** column header reposition and viewpoort */\n  private _verticalScrollSubs: Subscription;\n  private _horizontalScrollSubs: Subscription;\n  private _scrollHorizontalOffset: number = 0;\n\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\n\n  // Array of cached row heights to allow dynamic row heights\n  private _rowHeightCache: number[] = [];\n  // Total pseudo height of all the elements\n  private _totalHeight: number = 0;\n  // Total host height for the viewport\n  private _hostHeight: number = 0;\n  // Scrolled vertical pixels\n  private _scrollVerticalOffset: number = 0;\n  // Style to move the content a certain offset depending on scrolled offset\n  private _offsetTransform: SafeStyle;\n\n  // Variables that set from and to which rows will be rendered\n  private _fromRow: number = 0;\n  private _toRow: number = 0;\n\n  /**\n   * Returns the offset style with a proper calculation on how much it should move\n   * over the y axis of the total height\n   */\n  get offsetTransform(): SafeStyle {\n    return this._offsetTransform;\n  }\n\n  /**\n   * Returns the assumed total height of the rows\n   */\n  get totalHeight(): number {\n    return this._totalHeight;\n  }\n\n  /**\n   * Returns the initial row to render in the viewport\n   */\n  get fromRow(): number {\n    return this._fromRow;\n  }\n\n  /**\n   * Returns the last row to render in the viewport\n   */\n  get toRow(): number {\n    return this._toRow;\n  }\n\n  private _valueChangesSubs: Subscription;\n  /** internal attributes */\n  private _data: any[];\n  // data virtually iterated by component\n  private _virtualData: any[];\n  private _columns: ITdDataTableColumn[];\n  private _selectable: boolean = false;\n  private _clickable: boolean = false;\n  private _multiple: boolean = true;\n  private _allSelected: boolean = false;\n  private _indeterminate: boolean = false;\n\n  /** sorting */\n  private _sortable: boolean = false;\n  private _sortBy: ITdDataTableColumn;\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  /** shift select */\n  private _shiftPreviouslyPressed: boolean = false;\n  private _lastSelectedIndex: number = -1;\n  private _firstSelectedIndex: number = -1;\n  private _firstCheckboxValue: boolean = false;\n\n  /** template fetching support */\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDataTableTemplateDirective) _templates: QueryList<TdDataTableTemplateDirective>;\n\n  @ViewChild('scrollableDiv') _scrollableDiv: ElementRef;\n\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\n\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\n\n  /**\n   * Returns scroll position to reposition column headers\n   */\n  get columnsLeftScroll(): number {\n    return this._scrollHorizontalOffset * -1;\n  }\n\n  /**\n   * Returns true if all values are selected.\n   */\n  get allSelected(): boolean {\n    return this._allSelected;\n  }\n\n  /**\n   * Returns true if all values are not deselected\n   * and at least one is.\n   */\n  get indeterminate(): boolean {\n    return this._indeterminate;\n  }\n\n  /**\n   * data?: {[key: string]: any}[]\n   * Sets the data to be rendered as rows.\n   */\n  @Input('data')\n  set data(data: any[]) {\n    this._data = data;\n    this._rowHeightCache = [];\n    Promise.resolve().then(() => {\n      this.refresh();\n      // scroll back to the top if the data has changed\n      this._scrollableDiv.nativeElement.scrollTop = 0;\n    });\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  get virtualData(): any[] {\n    return this._virtualData;\n  }\n\n  /**\n   * columns?: ITdDataTableColumn[]\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\n   * Defaults to [data] keys.\n   */\n  @Input('columns')\n  set columns(cols: ITdDataTableColumn[]) {\n    this._columns = cols;\n  }\n  get columns(): ITdDataTableColumn[] {\n    if (this._columns) {\n      return this._columns;\n    }\n\n    if (this.hasData) {\n      this._columns = [];\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\n      let row: any = this._data[0];\n      Object.keys(row).forEach((k: string) => {\n        if (!this._columns.find((c: any) => c.name === k)) {\n          this._columns.push({ name: k, label: k });\n        }\n      });\n      return this._columns;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * resizableColumns?: boolean\n   * Enables manual column resize.\n   * Defaults to 'false'\n   */\n  @Input('resizableColumns')\n  set resizableColumns(resizableColumns: boolean) {\n    this._resizableColumns = coerceBooleanProperty(resizableColumns);\n  }\n  get resizableColumns(): boolean {\n    return this._resizableColumns;\n  }\n\n  /**\n   * selectable?: boolean\n   * Enables row selection events, hover and selected row states.\n   * Defaults to 'false'\n   */\n  @Input('selectable')\n  set selectable(selectable: boolean) {\n    this._selectable = coerceBooleanProperty(selectable);\n  }\n  get selectable(): boolean {\n    return this._selectable;\n  }\n\n  /**\n   * clickable?: boolean\n   * Enables row click events, hover.\n   * Defaults to 'false'\n   */\n  @Input('clickable')\n  set clickable(clickable: boolean) {\n    this._clickable = coerceBooleanProperty(clickable);\n  }\n  get clickable(): boolean {\n    return this._clickable;\n  }\n\n  /**\n   * multiple?: boolean\n   * Enables multiple row selection. [selectable] needs to be enabled.\n   * Defaults to 'false'\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable')\n  set sortable(sortable: boolean) {\n    this._sortable = coerceBooleanProperty(sortable);\n  }\n  get sortable(): boolean {\n    return this._sortable;\n  }\n\n  /**\n   * sortBy?: string\n   * Sets the active sort column. [sortable] needs to be enabled.\n   */\n  @Input('sortBy')\n  set sortBy(columnName: string) {\n    if (!columnName) {\n      return;\n    }\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\n    if (!column) {\n      throw new Error('[sortBy] must be a valid column name');\n    }\n\n    this._sortBy = column;\n  }\n  get sortByColumn(): ITdDataTableColumn {\n    return this._sortBy;\n  }\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n  get sortOrderEnum(): TdDataTableSortingOrder {\n    return this._sortOrder;\n  }\n\n  get hasData(): boolean {\n    return this._data && this._data.length > 0;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                                      new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  /**\n   * rowSelect?: function\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectEvent] implemented object.\n   */\n  @Output('rowSelect') onRowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\n\n  /**\n   * rowClick?: function\n   * Event emitted when a row is clicked.\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\n   */\n  @Output('rowClick') onRowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<ITdDataTableRowClickEvent>();\n\n  /**\n   * selectAll?: function\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\n   */\n  @Output('selectAll') onSelectAll: EventEmitter<ITdDataTableSelectAllEvent> =\n                                    new EventEmitter<ITdDataTableSelectAllEvent>();\n\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\n              private _elementRef: ElementRef,\n              private _domSanitizer: DomSanitizer,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * compareWith?: function(row, model): boolean\n   * Allows custom comparison between row and model to see if row is selected or not\n   * Default comparation is by reference\n   */\n  @Input('compareWith') compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\n    return row === model;\n  }\n\n  /**\n   * Initialize observable for resize and scroll events\n   */\n  ngOnInit(): void {\n    // initialize observable for resize calculations\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\n      if (this._rows) {\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\n        });\n      }\n      this._calculateWidths();\n      this._calculateVirtualRows();\n    });\n\n    // initialize observable for column resize calculations\n    this._columnResizeSubs = this._onColumnResize.asObservable().pipe(\n      debounceTime(0),\n    ).subscribe((clientX: number) => {\n      this._columnClientX = clientX;\n      this._calculateWidths();\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for scroll column header reposition\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable()\n      .subscribe((horizontalScroll: number) => {\n      this._scrollHorizontalOffset = horizontalScroll;\n      this._changeDetectorRef.markForCheck();\n    });\n    // initialize observable for virtual scroll rendering\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable()\n      .subscribe((verticalScroll: number) => {\n      this._scrollVerticalOffset = verticalScroll;\n      this._calculateVirtualRows();\n      this._changeDetectorRef.markForCheck();\n    });\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Loads templates and sets them in a map for faster access.\n   */\n  ngAfterContentInit(): void {\n    for (let i: number = 0; i < this._templates.toArray().length; i++) {\n      this._templateMap.set(\n        this._templates.toArray()[i].tdDataTableTemplate,\n        this._templates.toArray()[i].templateRef,\n      );\n    }\n  }\n\n  /**\n   * Checks hosts native elements widths to see if it has changed (resize check)\n   */\n  ngAfterContentChecked(): void {\n    if (this._elementRef.nativeElement) {\n      let newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\n      // if the width has changed then we throw a resize event.\n      if (this._hostWidth !== newHostWidth) {\n        this._hostWidth = newHostWidth;\n        this._onResize.next();\n      }\n    }\n    if (this._scrollableDiv.nativeElement) {\n      let newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\n      // if the height of the viewport has changed, then we mark for check\n      if (this._hostHeight !== newHostHeight) {\n        this._hostHeight = newHostHeight;\n        this._calculateVirtualRows();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Registers to an observable that checks if all rows have been rendered\n   * so we can start calculating the widths\n   */\n  ngAfterViewInit(): void {\n    this._rowsChangedSubs = this._rows.changes.pipe(\n      debounceTime(0),\n    ).subscribe(() => {\n      this._onResize.next();\n    });\n    this._calculateVirtualRows();\n  }\n\n  /**\n   * Unsubscribes observables when data table is destroyed\n   */\n  ngOnDestroy(): void {\n    if (this._resizeSubs) {\n      this._resizeSubs.unsubscribe();\n    }\n    if (this._columnResizeSubs) {\n      this._columnResizeSubs.unsubscribe();\n    }\n    if (this._horizontalScrollSubs) {\n      this._horizontalScrollSubs.unsubscribe();\n    }\n    if (this._verticalScrollSubs) {\n      this._verticalScrollSubs.unsubscribe();\n    }\n    if (this._rowsChangedSubs) {\n      this._rowsChangedSubs.unsubscribe();\n    }\n    if (this._valueChangesSubs) {\n      this._valueChangesSubs.unsubscribe();\n    }\n  }\n\n  /**\n   * Method that gets executed every time there is a scroll event\n   * Calls the scroll observable\n   */\n  handleScroll(event: Event): void {\n    let element: HTMLElement = (<HTMLElement>event.target);\n    if (element) {\n      let horizontalScroll: number = element.scrollLeft;\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\n        this._onHorizontalScroll.next(horizontalScroll);\n      }\n      let verticalScroll: number = element.scrollTop;\n      if (this._scrollVerticalOffset !== verticalScroll) {\n        this._onVerticalScroll.next(verticalScroll);\n      }\n    }\n  }\n\n  /**\n   * Returns the width needed for the columns via index\n   */\n  getColumnWidth(index: number): number {\n    if (this._widths[index]) {\n      return this._widths[index].value;\n    }\n    return undefined;\n  }\n\n  getCellValue(column: ITdDataTableColumn, value: any): string {\n    if (column.nested === undefined || column.nested) {\n      return this._getNestedValue(column.name, value);\n    }\n    return value[column.name];\n  }\n\n  /**\n   * Getter method for template references\n   */\n   getTemplateRef(name: string): TemplateRef<any> {\n     return this._templateMap.get(name);\n   }\n\n  /**\n   * Clears model (ngModel) of component by removing all values in array.\n   */\n  clearModel(): void {\n    this.value.splice(0, this.value.length);\n  }\n\n  /**\n   * Refreshes data table and rerenders [data] and [columns]\n   */\n  refresh(): void {\n    this._calculateVirtualRows();\n    this._calculateWidths();\n    this._calculateCheckboxState();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Selects or clears all rows depending on 'checked' value.\n   */\n  selectAll(checked: boolean): void {\n    let toggledRows: any[] = [];\n    if (checked) {\n      this._data.forEach((row: any) => {\n        // skiping already selected rows\n        if (!this.isRowSelected(row)) {\n          this.value.push(row);\n          // checking which ones are being toggled\n          toggledRows.push(row);\n        }\n      });\n      this._allSelected = true;\n      this._indeterminate = true;\n    } else {\n      this._data.forEach((row: any) => {\n        // checking which ones are being toggled\n        if (this.isRowSelected(row)) {\n          toggledRows.push(row);\n          let modelRow: any = this.value.filter((val: any) => {\n            return this.compareWith(row, val);\n          })[0];\n          let index: number = this.value.indexOf(modelRow);\n          if (index > -1) {\n            this.value.splice(index, 1);\n          }\n        }\n      });\n      this._allSelected = false;\n      this._indeterminate = false;\n    }\n    this.onSelectAll.emit({rows: toggledRows, selected: checked});\n    this.onChange(this.value);\n  }\n\n  /**\n   * Checks if row is selected\n   */\n  isRowSelected(row: any): boolean {\n    // compare items by [compareWith] function\n    return this.value ? this.value.filter((val: any) => {\n      return this.compareWith(row, val);\n    }).length > 0 : false;\n  }\n\n  /**\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\n   * handles cntrl clicks and shift clicks for multi-select\n   */\n  select(row: any, event: Event, currentSelected: number): void {\n    if (this.selectable) {\n      this.blockEvent(event);\n      // Check to see if Shift key is selected and need to select everything in between\n      let mouseEvent: MouseEvent = event as MouseEvent;\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\n        let firstIndex: number = currentSelected;\n        let lastIndex: number = this._lastSelectedIndex;\n        if (currentSelected > this._lastSelectedIndex) {\n          firstIndex = this._lastSelectedIndex;\n          lastIndex = currentSelected;\n        }\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\n        // else the checkboxes clicked are all after the initial one\n        if ((this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\n           (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)) {\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            if (this._firstSelectedIndex !== i) {\n              this._doSelection(this._data[i], i);\n            }\n          }\n        } else if ((this._firstSelectedIndex > currentSelected) || (this._firstSelectedIndex < currentSelected)) {\n          // change indexes depending on where the next checkbox is selected (before or after)\n          if (this._firstSelectedIndex > currentSelected) {\n            lastIndex--;\n          } else if (this._firstSelectedIndex < currentSelected) {\n            firstIndex++;\n          }\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\n            let rowSelected: boolean = this.isRowSelected(this._data[i]);\n            // if row is selected and first checkbox was selected\n            // or if row was unselected and first checkbox was unselected\n            // we ignore the toggle\n            if ((this._firstCheckboxValue && !rowSelected) ||\n                (!this._firstCheckboxValue && rowSelected)) {\n              this._doSelection(this._data[i], i);\n            } else if (this._shiftPreviouslyPressed) {\n              // else if the checkbox selected was in the middle of the last selection and the first selection\n              // then we undo the selections\n              if ((currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\n                  (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex)) {\n                this._doSelection(this._data[i], i);\n              }\n            }\n          }\n        }\n        this._shiftPreviouslyPressed = true;\n      // if shift wasnt pressed, then we take the element checked as the first row\n      // incase the next click uses shift\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\n        this._shiftPreviouslyPressed = false;\n        this._firstSelectedIndex = currentSelected;\n      }\n      this._lastSelectedIndex = currentSelected;\n    }\n  }\n\n  /**\n   * Overrides the onselectstart method of the document so other text on the page\n   * doesn't get selected when doing shift selections.\n   */\n  disableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = function(): boolean {\n        return false;\n      };\n    }\n  }\n\n  /**\n   * Resets the original onselectstart method.\n   */\n  enableTextSelection(): void {\n    if (this._document) {\n      this._document.onselectstart = undefined;\n    }\n  }\n\n  /**\n   * emits the onRowClickEvent when a row is clicked\n   * if clickable is true and selectable is false then select the row\n   */\n  handleRowClick(row: any, index: number, event: Event): void {\n    if (this.clickable) {\n      // ignoring linting rules here because attribute it actually null or not there\n      // can't check for undefined\n      const srcElement: any = event.srcElement || event.currentTarget;\n      let element: HTMLElement = event.target as HTMLElement;\n      /* tslint:disable-next-line */\n      if (srcElement.getAttribute('stopRowClick') === null && element.tagName.toLowerCase() !== 'mat-pseudo-checkbox') {\n        this.onRowClick.emit({\n          row: row,\n          index: index,\n        });\n      }\n    }\n  }\n\n  /**\n   * Method handle for sort click event in column headers.\n   */\n  handleSort(column: ITdDataTableColumn): void {\n    if (this._sortBy === column) {\n      this._sortOrder = this._sortOrder === TdDataTableSortingOrder.Ascending ?\n        TdDataTableSortingOrder.Descending : TdDataTableSortingOrder.Ascending;\n    } else {\n      this._sortBy = column;\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\n    }\n    this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\n  }\n\n  /**\n   * Handle all keyup events when focusing a data table row\n   */\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        /** if user presses enter or space, the row should be selected */\n        if (this.selectable) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case UP_ARROW:\n        /**\n         * if users presses the up arrow, we focus the prev row\n         * unless its the first row\n         */\n        if (index > 0) {\n          this._rows.toArray()[index - 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      case DOWN_ARROW:\n        /**\n         * if users presses the down arrow, we focus the next row\n         * unless its the last row\n         */\n        if (index < (this._rows.toArray().length - 1)) {\n          this._rows.toArray()[index + 1].focus();\n        }\n        this.blockEvent(event);\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\n        }\n        break;\n      default:\n        // default\n    }\n  }\n\n  /**\n   * Sets column index of the dragged column and initial clientX of column\n   */\n  _handleStartColumnDrag(index: number, event: MouseEvent): void {\n    this._columnClientX = event.clientX;\n    this._resizingColumn = index;\n  }\n\n  /**\n   * Calculates new width depending on new clientX of dragger column\n   */\n  _handleColumnDrag(event: MouseEvent | DragEvent): void {\n    // check if there was been a separator clicked for resize\n    if (this._resizingColumn !== undefined && event.clientX > 0) {\n      let xPosition: number = event.clientX;\n      // checks if the separator is being moved to try and resize the column, else dont do anything\n      if (xPosition > 0 && this._columnClientX > 0 && (xPosition - this._columnClientX) !== 0) {\n        // calculate the new width depending if making the column bigger or smaller\n        let proposedManualWidth: number = this._widths[this._resizingColumn].value + (xPosition - this._columnClientX);\n        // if the proposed new width is less than the projected min width of the column, use projected min width\n        if (proposedManualWidth < this._colElements.toArray()[this._resizingColumn].projectedWidth) {\n          proposedManualWidth = this._colElements.toArray()[this._resizingColumn].projectedWidth;\n        }\n        this.columns[this._resizingColumn].width = proposedManualWidth;\n        // update new x position for the resized column\n        this._onColumnResize.next(xPosition);\n      }\n    }\n  }\n\n  /**\n   * Ends dragged flags\n   */\n  _handleEndColumnDrag(): void {\n    this._columnClientX = undefined;\n    this._resizingColumn = undefined;\n  }\n\n  /**\n   * Method to prevent the default events\n   */\n  blockEvent(event: Event): void {\n    event.preventDefault();\n  }\n\n  private _getNestedValue(name: string, value: any): string {\n    if (!(value instanceof Object) || !name) {\n      return value;\n    }\n    if (name.indexOf('.') > -1) {\n      let splitName: string[] = name.split(/\\.(.+)/, 2);\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\n    } else {\n      return value[name];\n    }\n  }\n\n  /**\n   * Does the actual Row Selection\n   */\n  private _doSelection(row: any, rowIndex: number): boolean {\n    let wasSelected: boolean = this.isRowSelected(row);\n    if (!wasSelected) {\n      if (!this._multiple) {\n        this.clearModel();\n      }\n      this.value.push(row);\n    } else {\n      // compare items by [compareWith] function\n      row = this.value.filter((val: any) => {\n        return this.compareWith(row, val);\n      })[0];\n      let index: number = this.value.indexOf(row);\n      if (index > -1) {\n        this.value.splice(index, 1);\n      }\n    }\n    this._calculateCheckboxState();\n    this.onRowSelect.emit({row: row, index: rowIndex, selected: !wasSelected});\n    this.onChange(this.value);\n    return !wasSelected;\n  }\n\n  /**\n   * Calculate all the state of all checkboxes\n   */\n  private _calculateCheckboxState(): void {\n    if (this._data) {\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\n      this._indeterminate = false;\n      for (let row of this._data) {\n        if (!this.isRowSelected(row)) {\n          continue;\n        }\n        this._indeterminate = true;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Calculates the widths for columns and cells depending on content\n   */\n  private _calculateWidths(): void {\n    if (this._colElements && this._colElements.length) {\n      this._widths = [];\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\n        this._adjustColumnWidth(index, this._calculateWidth());\n      });\n      this._adjustColumnWidhts();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Adjusts columns after calculation to see if they need to be recalculated.\n   */\n  private _adjustColumnWidhts(): void {\n    let fixedTotalWidth: number = 0;\n    // get the number of total columns that have flexible widths (not fixed or hidden)\n    let flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\n      if (this.columns[index].hidden) {\n        return false;\n      }\n      if (width.limit || width.max || width.min) {\n        fixedTotalWidth += width.value;\n      }\n      return !width.limit && !width.max && !width.min;\n    }).length;\n    // calculate how much pixes are left that could be spread across\n    // the flexible columns\n    let recalculateHostWidth: number = 0;\n    if (fixedTotalWidth < this.hostWidth) {\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\n    }\n    // if we have flexible columns and pixels to spare on them\n    // we try and spread the pixels across them\n    if (flexibleWidths && recalculateHostWidth) {\n      let newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\n      let adjustedNumber: number = 0;\n      // adjust the column widths with the spread pixels\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\n        if (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue ||\n            this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue ||\n            !this._widths[colWidth.index].limit) {\n          this._adjustColumnWidth(colWidth.index, newValue);\n          adjustedNumber++;\n        }\n      });\n      // if there are still columns that need to be recalculated, we start over\n      let newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\n        return !width.limit && !width.max;\n      }).length;\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\n        this._adjustColumnWidhts();\n      }\n    }\n  }\n\n  /**\n   * Adjusts a single column to see if it can be recalculated\n   */\n  private _adjustColumnWidth(index: number, value: number): void {\n    this._widths[index] = {\n      value: value,\n      index: index,\n      limit: false,\n      min: false,\n      max: false,\n    };\n    // flag to see if we need to skip the min width projection\n    // depending if a width or min width has been provided\n    let skipMinWidthProjection: boolean = false;\n    if (this.columns[index]) {\n      // if the provided width has min/max, then we check to see if we need to set it\n      if (typeof this.columns[index].width === 'object') {\n        let widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\n        // if the column width is less than the configured min, we override it\n        skipMinWidthProjection = (widthOpts && !!widthOpts.min);\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\n          this._widths[index].value = widthOpts.min;\n          this._widths[index].min = true;\n        // if the column width is more than the configured max, we override it\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\n          this._widths[index].value = widthOpts.max;\n          this._widths[index].max = true;\n        }\n      // if it has a fixed width, then we just set it\n      } else if (typeof this.columns[index].width === 'number') {\n        this._widths[index].value = <number>this.columns[index].width;\n        skipMinWidthProjection = this._widths[index].limit = true;\n      }\n    }\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\n    if (!skipMinWidthProjection &&\n        this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\n      this._widths[index].min = true;\n      this._widths[index].limit = false;\n    }\n  }\n\n  /**\n   * Generic method to calculate column width\n   */\n  private _calculateWidth(): number {\n    let renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\n    return Math.floor(this.hostWidth / renderedColumns.length);\n  }\n\n  /**\n   * Method to calculate the rows to be rendered in the viewport\n   */\n  private _calculateVirtualRows(): void {\n    let scrolledRows: number = 0;\n    if (this._data) {\n      this._totalHeight = 0;\n      let rowHeightSum: number = 0;\n      // loop through all rows to see if we have their height cached\n      // and sum them all to calculate the total height\n      this._data.forEach((d: any, i: number) => {\n        // iterate through all rows at first and assume all\n        // rows are the same height as the first one\n        if (!this._rowHeightCache[i]) {\n          this._rowHeightCache[i] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\n        }\n        rowHeightSum += this._rowHeightCache[i];\n        // check how many rows have been scrolled\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\n          scrolledRows++;\n        }\n      });\n      this._totalHeight = rowHeightSum;\n      // set the initial row to be rendered taking into account the row offset\n      let fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\n      this._fromRow = fromRow > 0 ? fromRow : 0;\n\n      let hostHeight: number = this._hostHeight;\n      let index: number = 0;\n      // calculate how many rows can fit in the viewport\n      while (hostHeight > 0) {\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\n        index++;\n      }\n      // set the last row to be rendered taking into account the row offset\n      let range: number = (index - 1) + (TD_VIRTUAL_OFFSET * 2);\n      let toRow: number = range + this.fromRow;\n      // if last row is greater than the total length, then we use the total length\n      if (isFinite(toRow) && toRow > this._data.length) {\n        toRow = this._data.length;\n      } else if (!isFinite(toRow)) {\n        toRow = TD_VIRTUAL_OFFSET;\n      }\n      this._toRow = toRow;\n    } else {\n      this._totalHeight = 0;\n      this._fromRow = 0;\n      this._toRow = 0;\n    }\n\n    let offset: number = 0;\n    // calculate the proper offset depending on how many rows have been scrolled\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\n      for (let index: number = 0; index < this.fromRow; index++) {\n        offset += this._rowHeightCache[index];\n      }\n    }\n\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\n    if (this._data) {\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\n    }\n    // mark for check at the end of the queue so we are sure\n    // that the changes will be marked\n    Promise.resolve().then(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n}\n","import { Component, Input, Output, EventEmitter, Renderer2, ElementRef, HostBinding, HostListener, ViewChild } from '@angular/core';\n\nimport { TdDataTableSortingOrder } from '../data-table.component';\n\nexport interface ITdDataTableSortChangeEvent {\n  order: TdDataTableSortingOrder;\n  name: string;\n}\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'th[td-data-table-column]',\n  styleUrls: ['./data-table-column.component.scss' ],\n  templateUrl: './data-table-column.component.html',\n})\nexport class TdDataTableColumnComponent {\n\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\n\n  @ViewChild('columnContent', {read: ElementRef}) _columnContent: ElementRef;\n\n  get projectedWidth(): number {\n    if (this._columnContent && this._columnContent.nativeElement) {\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\n    }\n    return 100;\n  }\n\n  /**\n   * name?: string\n   * Sets unique column [name] for [sortable] events.\n   */\n  @Input('name') name: string = '';\n\n  /**\n   * sortable?: boolean\n   * Enables sorting events, sort icons and active column states.\n   * Defaults to 'false'\n   */\n  @Input('sortable') sortable: boolean = false;\n\n  /**\n   * active?: boolean\n   * Sets column to active state when 'true'.\n   * Defaults to 'false'\n   */\n  @Input('active') active: boolean = false;\n\n  /**\n   * numeric?: boolean\n   * Makes column follow the numeric data-table specs and sort icon.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  /**\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\n   * Sets the sort order of column.\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\n   */\n  @Input('sortOrder')\n  set sortOrder(order: 'ASC' | 'DESC') {\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\n    }\n\n    this._sortOrder = sortOrder === 'ASC' ?\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\n  }\n\n  /**\n   * sortChange?: function\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\n   */\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\n                        new EventEmitter<ITdDataTableSortChangeEvent>();\n\n  @HostBinding('class.mat-clickable')\n  get bindClickable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-sortable')\n  get bingSortable(): boolean {\n    return this.sortable;\n  }\n\n  @HostBinding('class.mat-active')\n  get bindActive(): boolean {\n    return this.active;\n  }\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\n  }\n\n  /**\n   * Listening to click event on host to throw a sort event\n   */\n  @HostListener('click')\n  handleClick(): void {\n    if (this.sortable) {\n      this.onSortChange.emit({name: this.name, order: this._sortOrder});\n    }\n  }\n\n  isAscending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\n  }\n\n  isDescending(): boolean {\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\n  }\n\n}\n","import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td[td-data-table-cell]',\n  styleUrls: ['./data-table-cell.component.scss' ],\n  templateUrl: './data-table-cell.component.html',\n})\nexport class TdDataTableCellComponent {\n\n  /**\n   * numeric?: boolean\n   * Makes cell follow the numeric data-table specs.\n   * Defaults to 'false'\n   */\n  @Input('numeric') numeric: boolean = false;\n\n  @HostBinding('class.mat-numeric')\n  get bindNumeric(): boolean {\n    return this.numeric;\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\n  }\n\n}\n","import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'table[td-data-table]',\n  styleUrls: ['./data-table-table.component.scss' ],\n  templateUrl: './data-table-table.component.html',\n})\nexport class TdDataTableTableComponent {\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\n  }\n\n}\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\n\nimport { TdDataTableSortingOrder, ITdDataTableColumn } from '../data-table.component';\n\n@Injectable()\nexport class TdDataTableService {\n\n  /**\n   * params:\n   * - data: any[]\n   * - searchTerm: string\n   * - ignoreCase: boolean = false\n   * - excludedColumns: string[] = []\n   *\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\n   */\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\n    let filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n    if (filter) {\n      data = data.filter((item: any) => {\n        const res: any = Object.keys(item).find((key: string) => {\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\n            const preItemValue: string = ('' + item[key]);\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n            return itemValue.indexOf(filter) > -1;\n          }\n        });\n        return !(typeof res === 'undefined');\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - sortBy: string\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\n   *\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\n   */\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\n    if (sortBy) {\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\n      data.sort((a: any, b: any) => {\n        let compA: any = a[sortBy];\n        let compB: any = b[sortBy];\n        let direction: number = 0;\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n        } else {\n          if (compA < compB) {\n            direction = -1;\n          } else if (compA > compB) {\n            direction = 1;\n          }\n        }\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\n      });\n    }\n    return data;\n  }\n\n  /**\n   * params:\n   * - data: any[]\n   * - fromRow: number\n   * - toRow: : number\n   *\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\n   */\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\n    if (fromRow >= 1) {\n      data = data.slice(fromRow - 1, toRow);\n    }\n    return data;\n  }\n}\n\nexport function DATA_TABLE_PROVIDER_FACTORY(\n    parent: TdDataTableService): TdDataTableService {\n  return parent || new TdDataTableService();\n}\n\nexport const DATA_TABLE_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdDataTableService,\n  deps: [[new Optional(), new SkipSelf(), TdDataTableService]],\n  useFactory: DATA_TABLE_PROVIDER_FACTORY,\n};\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nimport { TdDataTableComponent } from './data-table.component';\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\n\nimport { DATA_TABLE_PROVIDER } from './services/data-table.service';\n\nconst TD_DATA_TABLE: Type<any>[] = [\n  TdDataTableComponent,\n  TdDataTableTemplateDirective,\n\n  TdDataTableColumnComponent,\n  TdDataTableCellComponent,\n  TdDataTableRowComponent,\n  TdDataTableColumnRowComponent,\n  TdDataTableTableComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatPseudoCheckboxModule,\n  ],\n  declarations: [\n    TD_DATA_TABLE,\n  ],\n  exports: [\n    TD_DATA_TABLE,\n  ],\n  providers: [\n    DATA_TABLE_PROVIDER,\n  ],\n})\nexport class CovalentDataTableModule {\n\n}\n","import { Component, Directive, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\n@Directive({selector: 'td-dialog-title'})\nexport class TdDialogTitleDirective {}\n\n@Directive({selector: 'td-dialog-content'})\nexport class TdDialogContentDirective {}\n\n@Directive({selector: 'td-dialog-actions'})\nexport class TdDialogActionsDirective {}\n\n@Component({\n  selector: 'td-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss' ],\n})\nexport class TdDialogComponent implements AfterContentInit {\n\n  @ContentChildren(TdDialogTitleDirective) dialogTitle: QueryList<TdDialogTitleDirective>;\n  @ContentChildren(TdDialogContentDirective) dialogContent: QueryList<TdDialogContentDirective>;\n  @ContentChildren(TdDialogActionsDirective) dialogActions: QueryList<TdDialogActionsDirective>;\n\n  ngAfterContentInit(): void {\n    if (this.dialogTitle.length > 1) {\n      throw new Error('Duplicate td-dialog-title component at in td-dialog.');\n    }\n    if (this.dialogContent.length > 1) {\n      throw new Error('Duplicate td-dialog-content component at in td-dialog.');\n    }\n    if (this.dialogActions.length > 1) {\n      throw new Error('Duplicate td-dialog-actions component at in td-dialog.');\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-alert-dialog',\n  templateUrl: './alert-dialog.component.html',\n  styleUrls: ['./alert-dialog.component.scss' ],\n})\nexport class TdAlertDialogComponent {\n  title: string;\n  message: string;\n  closeButton: string = 'CLOSE';\n\n  constructor(private _dialogRef: MatDialogRef<TdAlertDialogComponent>) {}\n\n  close(): void {\n    this._dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss' ],\n})\nexport class TdConfirmDialogComponent {\n  title: string;\n  message: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  constructor(private _dialogRef: MatDialogRef<TdConfirmDialogComponent>) {}\n\n  cancel(): void {\n    this._dialogRef.close(false);\n  }\n\n  accept(): void {\n    this._dialogRef.close(true);\n  }\n}\n","import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'td-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n  styleUrls: ['./prompt-dialog.component.scss' ],\n})\nexport class TdPromptDialogComponent implements AfterViewInit {\n  title: string;\n  message: string;\n  value: string;\n  cancelButton: string = 'CANCEL';\n  acceptButton: string = 'ACCEPT';\n\n  @ViewChild('input') _input: ElementRef;\n\n  constructor(private _dialogRef: MatDialogRef<TdPromptDialogComponent>) {}\n\n  ngAfterViewInit(): void {\n    // focus input once everything is rendered and good to go\n    Promise.resolve().then(() => {\n      (<HTMLInputElement>this._input.nativeElement).focus();\n    });\n  }\n\n  /**\n   * Method executed when input is focused\n   * Selects all text\n   */\n  handleInputFocus(): void {\n    (<HTMLInputElement>this._input.nativeElement).select();\n  }\n\n  cancel(): void {\n    this._dialogRef.close(undefined);\n  }\n\n  accept(): void {\n    this._dialogRef.close(this.value);\n  }\n}\n","import { Injectable, ViewContainerRef, Provider, SkipSelf, Optional } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatDialogConfig } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\nimport { TdAlertDialogComponent } from '../alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from '../prompt-dialog/prompt-dialog.component';\n\nexport interface IDialogConfig extends MatDialogConfig {\n  title?: string;\n  message: string;\n}\n\nexport interface IAlertConfig extends IDialogConfig {\n  closeButton?: string;\n}\n\nexport interface IConfirmConfig extends IDialogConfig {\n  acceptButton?: string;\n  cancelButton?: string;\n}\n\nexport interface IPromptConfig extends IConfirmConfig {\n  value?: string;\n}\n\n@Injectable()\nexport class TdDialogService {\n\n  constructor(private _dialogService: MatDialog) {}\n\n  /**\n   * params:\n   * - component: ComponentType<T>\n   * - config: MatDialogConfig\n   * Wrapper function over the open() method in MatDialog.\n   * Opens a modal dialog containing the given component.\n   */\n  public open<T>(component: ComponentType<T>, config?: MatDialogConfig): MatDialogRef<T> {\n    return this._dialogService.open(component, config);\n  }\n\n  /**\n   * Wrapper function over the closeAll() method in MatDialog.\n   * Closes all of the currently-open dialogs.\n   */\n  public closeAll(): void {\n    this._dialogService.closeAll();\n  }\n\n  /**\n   * params:\n   * - config: IAlertConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     closeButton?: string;\n   * }\n   *\n   * Opens an alert dialog with the provided config.\n   * Returns an MatDialogRef<TdAlertDialogComponent> object.\n   */\n  public openAlert(config: IAlertConfig): MatDialogRef<TdAlertDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdAlertDialogComponent> =\n      this._dialogService.open(TdAlertDialogComponent, dialogConfig);\n    let alertDialogComponent: TdAlertDialogComponent = dialogRef.componentInstance;\n    alertDialogComponent.title = config.title;\n    alertDialogComponent.message = config.message;\n    if (config.closeButton) {\n      alertDialogComponent.closeButton = config.closeButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IConfirmConfig {\n   *     message: string;\n   *     title?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a confirm dialog with the provided config.\n   * Returns an MatDialogRef<TdConfirmDialogComponent> object.\n   */\n  public openConfirm(config: IConfirmConfig): MatDialogRef<TdConfirmDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdConfirmDialogComponent> =\n      this._dialogService.open(TdConfirmDialogComponent, dialogConfig);\n    let confirmDialogComponent: TdConfirmDialogComponent = dialogRef.componentInstance;\n    confirmDialogComponent.title = config.title;\n    confirmDialogComponent.message = config.message;\n    if (config.acceptButton) {\n      confirmDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      confirmDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  /**\n   * params:\n   * - config: IPromptConfig {\n   *     message: string;\n   *     title?: string;\n   *     value?: string;\n   *     viewContainerRef?: ViewContainerRef;\n   *     acceptButton?: string;\n   *     cancelButton?: string;\n   * }\n   *\n   * Opens a prompt dialog with the provided config.\n   * Returns an MatDialogRef<TdPromptDialogComponent> object.\n   */\n  public openPrompt(config: IPromptConfig): MatDialogRef<TdPromptDialogComponent> {\n    let dialogConfig: MatDialogConfig = this._createConfig(config);\n    let dialogRef: MatDialogRef<TdPromptDialogComponent> =\n      this._dialogService.open(TdPromptDialogComponent, dialogConfig);\n    let promptDialogComponent: TdPromptDialogComponent = dialogRef.componentInstance;\n    promptDialogComponent.title = config.title;\n    promptDialogComponent.message = config.message;\n    promptDialogComponent.value = config.value;\n    if (config.acceptButton) {\n      promptDialogComponent.acceptButton = config.acceptButton;\n    }\n    if (config.cancelButton) {\n      promptDialogComponent.cancelButton = config.cancelButton;\n    }\n    return dialogRef;\n  }\n\n  private _createConfig(config: IDialogConfig): MatDialogConfig {\n    let dialogConfig: MatDialogConfig = new MatDialogConfig();\n    dialogConfig.width = '400px';\n    Object.assign(dialogConfig, config);\n    return dialogConfig;\n  }\n\n}\n\nexport function DIALOG_PROVIDER_FACTORY(\n    parent: TdDialogService, dialog: MatDialog): TdDialogService {\n  return parent || new TdDialogService(dialog);\n}\n\nexport const DIALOG_PROVIDER: Provider = {\n  // If there is already service available, use that. Otherwise, provide a new one.\n  provide: TdDialogService,\n  deps: [[new Optional(), new SkipSelf(), TdDialogService], MatDialog],\n  useFactory: DIALOG_PROVIDER_FACTORY,\n};\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdDialogComponent, TdDialogTitleDirective,\n         TdDialogActionsDirective, TdDialogContentDirective } from './dialog.component';\nimport { TdAlertDialogComponent } from './alert-dialog/alert-dialog.component';\nimport { TdConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { TdPromptDialogComponent } from './prompt-dialog/prompt-dialog.component';\nimport { DIALOG_PROVIDER } from './services/dialog.service';\n\nconst TD_DIALOGS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n  TdDialogComponent,\n  TdDialogTitleDirective,\n  TdDialogActionsDirective,\n  TdDialogContentDirective,\n];\n\nconst TD_DIALOGS_ENTRY_COMPONENTS: Type<any>[] = [\n  TdAlertDialogComponent,\n  TdConfirmDialogComponent,\n  TdPromptDialogComponent,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TD_DIALOGS,\n  ],\n  exports: [\n    TD_DIALOGS,\n  ],\n  providers: [\n    DIALOG_PROVIDER,\n  ],\n  entryComponents: [\n    TD_DIALOGS_ENTRY_COMPONENTS,\n  ],\n})\nexport class CovalentDialogsModule {\n\n}\n","import { Component, Directive, Input, Output, TemplateRef, ViewContainerRef, ContentChild,\n         ElementRef, Renderer2 } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport {\n  tdCollapseAnimation,\n  ICanDisable,\n  mixinDisabled,\n  ICanDisableRipple,\n  mixinDisableRipple,\n  tdRotateAnimation,\n} from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-expansion-panel-header]ng-template',\n})\nexport class TdExpansionPanelHeaderDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-label]ng-template',\n})\nexport class TdExpansionPanelLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-expansion-panel-sublabel]ng-template',\n})\nexport class TdExpansionPanelSublabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Component({\n  selector: 'td-expansion-summary',\n  template: '<ng-content></ng-content>',\n})\nexport class TdExpansionPanelSummaryComponent {}\n\nexport class TdExpansionPanelBase {}\n\n/* tslint:disable-next-line */\nexport const _TdExpansionPanelMixinBase = mixinDisableRipple(mixinDisabled(TdExpansionPanelBase));\n\n@Component({\n  selector: 'td-expansion-panel',\n  styleUrls: ['./expansion-panel.component.scss' ],\n  templateUrl: './expansion-panel.component.html',\n  inputs: ['disabled', 'disableRipple'],\n  animations: [\n    tdCollapseAnimation,\n    tdRotateAnimation,\n  ],\n})\nexport class TdExpansionPanelComponent extends _TdExpansionPanelMixinBase implements ICanDisable, ICanDisableRipple {\n\n  private _expand: boolean = false;\n\n  @ContentChild(TdExpansionPanelHeaderDirective) expansionPanelHeader: TdExpansionPanelHeaderDirective;\n  @ContentChild(TdExpansionPanelLabelDirective) expansionPanelLabel: TdExpansionPanelLabelDirective;\n  @ContentChild(TdExpansionPanelSublabelDirective) expansionPanelSublabel: TdExpansionPanelSublabelDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdExpansionPanelComponent] header.\n   * Defaults to 'Click to expand'\n   */\n  @Input() label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdExpansionPanelComponent] header.\n   */\n  @Input() sublabel: string;\n\n  /**\n   * expand?: boolean\n   * Toggles [TdExpansionPanelComponent] between expand/collapse.\n   */\n  @Input('expand')\n  set expand(expand: boolean) {\n    this._setExpand(coerceBooleanProperty(expand));\n  }\n  get expand(): boolean {\n    return this._expand;\n  }\n\n  /**\n   * expanded?: function\n   * Event emitted when [TdExpansionPanelComponent] is expanded.\n   */\n  @Output() expanded: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * collapsed?: function\n   * Event emitted when [TdExpansionPanelComponent] is collapsed.\n   */\n  @Output() collapsed: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel');\n  }\n\n  /**\n   * Method executed when [TdExpansionPanelComponent] is clicked.\n   */\n  clickEvent(): void {\n    this._setExpand(!this._expand);\n  }\n\n  /**\n   * Toggle expand state of [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setExpand(!this._expand);\n  }\n\n  /**\n   * Opens [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setExpand(true);\n  }\n\n  /**\n   * Closes [TdExpansionPanelComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setExpand(false);\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._expand) {\n      this._expand = false;\n      this._onCollapsed();\n    }\n  }\n\n  /**\n   * Method to change expand state internally and emit the [onExpanded] event if 'true' or [onCollapsed]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   */\n  private _setExpand(newExpand: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._expand !== newExpand) {\n      this._expand = newExpand;\n      if (newExpand) {\n        this._renderer.addClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onExpanded();\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, 'td-expanded');\n        this._onCollapsed();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onExpanded(): void {\n    this.expanded.emit(undefined);\n  }\n\n  private _onCollapsed(): void {\n    this.collapsed.emit(undefined);\n  }\n}\n","import { Component, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'td-expansion-panel-group',\n  styleUrls: ['./expansion-panel-group.component.scss' ],\n  templateUrl: './expansion-panel-group.component.html',\n})\nexport class TdExpansionPanelGroupComponent {\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-expansion-panel-group');\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdExpansionPanelComponent, TdExpansionPanelHeaderDirective, TdExpansionPanelLabelDirective,\n         TdExpansionPanelSublabelDirective, TdExpansionPanelSummaryComponent } from './expansion-panel.component';\nimport { TdExpansionPanelGroupComponent } from './expansion-panel-group.component';\n\nconst TD_EXPANSION_PANEL: Type<any>[] = [\n  TdExpansionPanelGroupComponent,\n  TdExpansionPanelComponent,\n  TdExpansionPanelHeaderDirective,\n  TdExpansionPanelLabelDirective,\n  TdExpansionPanelSublabelDirective,\n  TdExpansionPanelSummaryComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRippleModule,\n    MatIconModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_EXPANSION_PANEL,\n  ],\n  exports: [\n    TD_EXPANSION_PANEL,\n  ],\n})\nexport class CovalentExpansionPanelModule {\n\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n  selector: '[tdFileSelect]',\n})\nexport class TdFileSelectDirective {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileSelect?: function\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\n   * Emits a [FileList | File] object.\n   * Alternative to not use [(ngModel)].\n   */\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  constructor(@Optional() @Host() private model: NgModel) {\n  }\n\n  /**\n   * Listens to 'change' host event to get [HTMLInputElement] files.\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\n   */\n  @HostListener('change', ['$event'])\n  onChange(event: Event): void {\n    if (event.target instanceof HTMLInputElement) {\n      let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);\n      let files: FileList = fileInputEl.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\n      }\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nexport class TdFileDropBase {}\n\n/* tslint:disable-next-line */\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\n\n@Directive({\n  selector: '[tdFileDrop]',\n  inputs: ['disabled'],\n})\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /**\n   * multiple?: boolean\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\n   * Can also be 'multiple' native attribute.\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n\n  /**\n   * fileDrop?: function\n   * Event emitted when a file or files are dropped in host element after being validated.\n   * Emits a [FileList | File] object.\n   */\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\n\n  /**\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\n   */\n  @HostBinding('attr.multiple')\n  get multipleBinding(): string {\n    return this._multiple ? '' : undefined;\n  }\n\n  /**\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\n   */\n  @HostBinding('attr.disabled')\n  get disabledBinding(): string {\n    return this.disabled ? '' : undefined;\n  }\n\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\n    super();\n  }\n\n  /**\n   * Listens to 'drop' host event to get validated transfer items.\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\n   * Stops event propagation and default action from browser for 'drop' event.\n   */\n  @HostListener('drop', ['$event'])\n  onDrop(event: Event): void {\n    if (!this.disabled) {\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n      let files: FileList = transfer.files;\n      if (files.length) {\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\n        this.onFileDrop.emit(value);\n      }\n    }\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragover' host event to validate transfer items.\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\n   * Stops event propagation and default action from browser for 'dragover' event.\n   */\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: Event): void {\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\n    transfer.dropEffect = this._typeCheck(transfer.types);\n    if (this.disabled || (!this._multiple &&\n      ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {\n      transfer.dropEffect = 'none';\n    } else {\n      transfer.dropEffect = 'copy';\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\n   * Stops event propagation and default action from browser for 'dragenter' event.\n   */\n  @HostListener('dragenter', ['$event'])\n  onDragEnter(event: Event): void {\n    if (!this.disabled) {\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\n    }\n    this._stopEvent(event);\n  }\n\n  /**\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\n   * Stops event propagation and default action from browser for 'dragleave' event.\n   */\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: Event): void {\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\n    this._stopEvent(event);\n  }\n\n  /**\n   * Validates if the transfer item types are 'Files'.\n   */\n  private _typeCheck(types: ReadonlyArray<string> | DOMStringList): string {\n    let dropEffect: string = 'none';\n    if (types) {\n      if (((<any>types).contains && (<any>types).contains('Files'))\n      || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {\n        dropEffect = 'copy';\n      }\n    }\n    return dropEffect;\n  }\n\n  private _stopEvent(event: Event): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild,\n         ElementRef, Renderer2, TemplateRef, ViewContainerRef, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-file-input-label]ng-template',\n})\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdFileInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileInputComponent),\n    multi: true,\n  }],\n  selector: 'td-file-input',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-input.component.scss'],\n  templateUrl: './file-input.component.html',\n})\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n\n  /** The native `<input type=\"file\"> element */\n  @ViewChild('fileInput') _inputElement: ElementRef;\n  get inputElement(): HTMLInputElement {\n    return this._inputElement.nativeElement;\n  }\n\n  /**\n   * color?: string\n   * Sets button color. Uses same color palette accepted as [MatButton].\n   */\n  @Input('color') color: string;\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted a file is selected\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(files: File | FileList): void {\n    this.writeValue(files);\n    this.onSelect.emit(files);\n  }\n\n  /**\n   * Used to clear the selected files from the [TdFileInputComponent].\n   */\n  clear(): void {\n    this.writeValue(undefined);\n    this._renderer.setProperty(this.inputElement, 'value', '');\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.clear();\n    }\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef,\n  forwardRef } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport class TdFileUploadBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdFileUploadComponent),\n    multi: true,\n  }],\n  selector: 'td-file-upload',\n  inputs: ['disabled', 'value'],\n  styleUrls: ['./file-upload.component.scss'],\n  templateUrl: './file-upload.component.html',\n})\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\n\n  private _multiple: boolean = false;\n  private _required: boolean = false;\n\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\n\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\n\n  /**\n   * defaultColor?: string\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\n   */\n  @Input('defaultColor') defaultColor: string = 'primary';\n\n  /**\n   * activeColor?: string\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\n   */\n  @Input('activeColor') activeColor: string = 'accent';\n\n  /**\n   * cancelColor?: string\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\n   */\n  @Input('cancelColor') cancelColor: string = 'warn';\n\n  /**\n   * multiple?: boolean\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\n   */\n  @Input('multiple')\n  set multiple(multiple: boolean) {\n    this._multiple = coerceBooleanProperty(multiple);\n  }\n  get multiple(): boolean {\n    return this._multiple;\n  }\n\n  /**\n   * required?: boolean\n   * Forces at least one file upload.\n   * Defaults to 'false'\n   */\n  @Input('required')\n  set required(required: boolean) {\n    this._required = coerceBooleanProperty(required);\n  }\n  get required(): boolean {\n    return this._required;\n  }\n\n  /**\n   * accept?: string\n   * Sets files accepted when opening the file browser dialog.\n   * Same as 'accept' attribute in <input/> element.\n   */\n  @Input('accept') accept: string;\n\n  /**\n   * select?: function\n   * Event emitted when a file is selected.\n   * Emits a [File | FileList] object.\n   */\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * upload?: function\n   * Event emitted when upload button is clicked.\n   * Emits a [File | FileList] object.\n   */\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\n\n  /**\n   * cancel?: function\n   * Event emitted when cancel button is clicked.\n   */\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when upload button is clicked.\n   */\n  uploadPressed(): void {\n    if (this.value) {\n      this.onUpload.emit(this.value);\n    }\n  }\n\n  /**\n   * Method executed when a file is selected.\n   */\n  handleSelect(value: File | FileList): void {\n    this.value = value;\n    this.onSelect.emit(value);\n  }\n\n  /**\n   * Methods executed when cancel button is clicked.\n   * Clears files.\n   */\n  cancel(): void {\n    this.value = undefined;\n    this.onCancel.emit(undefined);\n    // check if the file input is rendered before clearing it\n    if (this.fileInput) {\n      this.fileInput.clear();\n    }\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v) {\n      this.cancel();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscriber } from 'rxjs';\n\nexport interface IUploadOptions {\n  url: string;\n  method: 'post' | 'put';\n  file?: File;\n  headers?: {[key: string]: string};\n  formData?: FormData;\n}\n\n@Injectable()\nexport class TdFileService {\n\n  private _progressSubject: Subject<number> = new Subject<number>();\n  private _progressObservable: Observable<number>;\n\n  /**\n   * Gets progress observable to keep track of the files being uploaded.\n   * Needs to be supported by backend.\n   */\n  get progress(): Observable<number> {\n    return this._progressObservable;\n  }\n\n  constructor() {\n    this._progressObservable = this._progressSubject.asObservable();\n  }\n\n  /**\n   * params:\n   * - options: IUploadOptions {\n   *     url: string,\n   *     method: 'post' | 'put',\n   *     file?: File,\n   *     headers?: {[key: string]: string},\n   *     formData?: FormData\n   * }\n   *\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\n   * Will be depricated when Angular fixes [Http] to allow [FormData] as body.\n   */\n  upload(options: IUploadOptions): Observable<any> {\n    return new Observable<any>((subscriber: Subscriber<any>) => {\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      let formData: FormData = new FormData();\n\n      if (options.file !== undefined) {\n        formData.append('file', options.file);\n      } else if (options.formData !== undefined) {\n        formData = options.formData;\n      } else {\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\n      }\n\n      xhr.upload.onprogress = (event: ProgressEvent) => {\n        let progress: number = 0;\n        if (event.lengthComputable) {\n          progress = Math.round(event.loaded / event.total * 100);\n        }\n        this._progressSubject.next(progress);\n      };\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            subscriber.next(xhr.response);\n            subscriber.complete();\n          } else {\n            subscriber.error(xhr.response);\n          }\n        }\n      };\n\n      xhr.open(options.method, options.url, true);\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      if (options.headers) {\n        for (let key in options.headers) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        }\n      }\n\n      xhr.send(formData);\n    });\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdFileSelectDirective } from './directives/file-select.directive';\nimport { TdFileDropDirective } from './directives/file-drop.directive';\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\nimport { TdFileService } from './services/file.service';\n\nconst TD_FILE: Type<any>[] = [\n  TdFileSelectDirective,\n  TdFileDropDirective,\n  TdFileUploadComponent,\n  TdFileInputComponent,\n  TdFileInputLabelDirective,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_FILE,\n  ],\n  exports: [\n    TD_FILE,\n  ],\n  providers: [\n    TdFileService,\n  ],\n})\nexport class CovalentFileModule {\n\n}\n","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, Optional } from '@angular/core';\nimport { Dir } from '@angular/cdk/bidi';\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'td-json-formatter',\n  styleUrls: ['./json-formatter.component.scss' ],\n  templateUrl: './json-formatter.component.html',\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdJsonFormatterComponent {\n\n  /**\n   * Max length for property names. Any names bigger than this get trunctated.\n   */\n  private static KEY_MAX_LENGTH: number = 30;\n\n  /**\n   * Max length for preview string. Any names bigger than this get trunctated.\n   */\n  private static PREVIEW_STRING_MAX_LENGTH: number = 80;\n\n  /**\n   * Max tooltip preview elements.\n   */\n  private static PREVIEW_LIMIT: number = 5;\n\n  private _key: string;\n  private _data: any;\n  private _children: string[];\n  private _open: boolean = false;\n  private _levelsOpen: number = 0;\n\n  /**\n   * levelsOpen?: number\n   * Levels opened by default when JS object is formatted and rendered.\n   */\n  @Input('levelsOpen')\n  set levelsOpen(levelsOpen: number) {\n    if (!Number.isInteger(levelsOpen)) {\n      throw new Error('[levelsOpen] needs to be an integer.');\n    }\n    this._levelsOpen = levelsOpen;\n    this._open = levelsOpen > 0;\n  }\n  get levelsOpen(): number {\n    return this._levelsOpen;\n  }\n\n  get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * key?: string\n   * Tag to be displayed next to formatted object.\n   */\n  @Input('key')\n  set key(key: string) {\n    this._key = key;\n  }\n  get key(): string {\n    let elipsis: string = this._key && this._key.length > TdJsonFormatterComponent.KEY_MAX_LENGTH ? 'â¦' : '';\n    return this._key ? this._key.substring(0, TdJsonFormatterComponent.KEY_MAX_LENGTH) + elipsis : this._key;\n  }\n\n  /**\n   * data: any\n   * JS object to be formatted.\n   */\n  @Input('data')\n  set data(data: any) {\n    this._data = data;\n    this.parseChildren();\n  }\n  get data(): any {\n    return this._data;\n  }\n\n  get children(): string[] {\n    return this._children;\n  }\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Dir) {\n  }\n\n  /**\n   * Refreshes json-formatter and rerenders [data]\n   */\n  refresh(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Toggles collapse/expanded state of component.\n   */\n  toggle(): void {\n    this._open = !this._open;\n  }\n\n  isObject(): boolean {\n    return this.getType(this._data) === 'object';\n  }\n\n  isArray(): boolean {\n    return Array.isArray(this._data);\n  }\n\n  hasChildren(): boolean {\n    return this._children && this._children.length > 0;\n  }\n\n  /**\n   * Gets parsed value depending on value type.\n   */\n  getValue(value: any): string {\n    let type: string = this.getType(value);\n    if (type === 'undefined' || (type === 'null')) {\n      return type;\n    } else if (type === 'date') {\n      value = new Date(value).toString();\n    } else if (type === 'string') {\n      value = '\"' + value + '\"';\n    } else if (type === 'function') {\n      // Remove content of the function\n      return value.toString()\n          .replace(/[\\r\\n]/g, '')\n          .replace(/\\{.*\\}/, '') + '{â¦}';\n    } else if (Array.isArray(value)) {\n      return this.getObjectName() + ' [' + value.length + ']';\n    }\n    return value;\n  }\n\n  /**\n   * Gets type of object.\n   * returns 'null' if object is null and 'date' if value is object and can be parsed to a date.\n   */\n  getType(object: any): string {\n    if (typeof object === 'object') {\n      if (!object) {\n        return 'null';\n      }\n      if (Array.isArray(object)) {\n        return 'object';\n      }\n      let date: Date = new Date(object);\n      if (Object.prototype.toString.call(date) === '[object Date]') {\n        if (!Number.isNaN(date.getTime())) {\n          return 'date';\n        }\n      }\n    }\n    return typeof object;\n  }\n\n  /**\n   * Generates string representation depending if its an object or function.\n   * see: http://stackoverflow.com/a/332429\n   */\n  getObjectName(): string {\n    let object: any = this._data;\n    if (this.isObject() && !object.constructor) {\n        return 'Object';\n    }\n    let funcNameRegex: RegExp = /function (.{1,})\\(/;\n    let results: RegExpExecArray = (funcNameRegex).exec((object).constructor.toString());\n    if (results && results.length > 1) {\n      return results[1];\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Creates preview of nodes children to render in tooltip depending if its an array or an object.\n   */\n  getPreview(): string {\n    let previewData: string[];\n    let startChar: string = '{ ';\n    let endChar: string = ' }';\n    if (this.isArray()) {\n      let previewArray: any[] = this._data.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewArray.map((obj: any) => {\n        return this.getValue(obj);\n      });\n      startChar = '[';\n      endChar = ']';\n    } else {\n      let previewKeys: string[] = this._children.slice(0, TdJsonFormatterComponent.PREVIEW_LIMIT);\n      previewData = previewKeys.map((key: string) => {\n        return key + ': ' + this.getValue(this._data[key]);\n      });\n    }\n    let previewString: string =  previewData.join(', ');\n    let ellipsis: string = previewData.length >= TdJsonFormatterComponent.PREVIEW_LIMIT ||\n                           previewString.length > TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH ? 'â¦' : '';\n    return startChar + previewString.substring(0, TdJsonFormatterComponent.PREVIEW_STRING_MAX_LENGTH) +\n           ellipsis + endChar;\n  }\n\n  private parseChildren(): void {\n    if (this.isObject()) {\n      this._children = [];\n      for (let key in this._data) {\n        this._children.push(key);\n      }\n    }\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdJsonFormatterComponent } from './json-formatter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdJsonFormatterComponent,\n  ],\n  exports: [\n    TdJsonFormatterComponent,\n  ],\n})\nexport class CovalentJsonFormatterModule {\n\n}\n","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss' ],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase { }\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable,\n              private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutToggle') \n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutClose') \n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutOpen') \n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss' ],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss' ],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input('toolbarTitle') toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n  \n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListToggle') \n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutNavListClose') \n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutNavListOpen') \n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss' ],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input('cardTitle') cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input('cardSubtitle') cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input('cardWidth') cardWidth: number = 70;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input('color') color: string = 'primary';\n\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss' ],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('mode') mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('opened') opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input('sidenavWidth') sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   * \n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input('containerAutosize') containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListToggle') \n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  \n  @Input('tdLayoutManageListClose') \n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n\n  @Input('tdLayoutManageListOpen') \n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(@Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n              renderer: Renderer2,\n              elementRef: ElementRef) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss' ],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: string\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n\n}\n","import { Component, Directive, Input, ContentChildren, OnInit, OnDestroy, forwardRef, Inject,\n         QueryList, SecurityContext, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {\n\n}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {\n\n}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss' ],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [ tdCollapseAnimation ],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective) _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective) _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input('sidenavTitle') sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input('icon') icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input('logo') logo: string;\n\n  /**\n   * color?: string\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input('color') color: string;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input('navigationRoute') navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      let sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input('name') name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input('email') email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n              @Optional() private _router: Router,\n              private _sanitize: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective, TdLayoutNavListCloseDirective, TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective, TdLayoutManageListCloseDirective, TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent, TdNavigationDrawerMenuDirective, TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollDispatchModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [\n    TD_LAYOUTS,\n  ],\n  exports: [\n    TD_LAYOUTS,\n  ],\n})\nexport class CovalentLayoutModule {\n\n}\n","import { Component, ViewChild, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy, ElementRef, DoCheck } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Observable, Subject } from 'rxjs';\n\nexport enum LoadingType {\n  Circular = 'circular',\n  Linear = 'linear',\n}\n\nexport enum LoadingMode {\n  Determinate = 'determinate',\n  Indeterminate = 'indeterminate',\n}\n\nexport enum LoadingStrategy {\n  Overlay = 'overlay',\n  Replace = 'replace',\n}\n\nexport enum LoadingStyle {\n  FullScreen = 'fullscreen',\n  Overlay = 'overlay',\n  None = 'none',\n}\n\nimport { tdFadeInOutAnimation } from '@covalent/core/common';\n\nexport const TD_CIRCLE_DIAMETER: number = 100;\n\n@Component({\n  selector: 'td-loading',\n  styleUrls: ['./loading.component.scss' ],\n  templateUrl: './loading.component.html',\n  animations: [\n    tdFadeInOutAnimation,\n  ],\n})\nexport class TdLoadingComponent implements DoCheck {\n\n  private _animationIn: Subject<any> = new Subject<any>();\n  private _animationOut: Subject<any> = new Subject<any>();\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\n  private _value: number = 0;\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\n\n  /**\n   * Flag for animation\n   */\n  animation: boolean = false;\n\n  /**\n   * Content injected into loading component.\n   */\n  content: TemplatePortal<any>;\n\n  /**\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\n   */\n  set mode(mode: LoadingMode) {\n    this._defaultMode = mode;\n  }\n  get mode(): LoadingMode {\n    return this._mode;\n  }\n\n  /**\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\n   */\n  set value(value: number) {\n    this._value = value;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  style: LoadingStyle = LoadingStyle.None;\n\n  /**\n   * height: number\n   * Sets height of [TdLoadingComponent].\n   */\n  height: number;\n\n  /**\n   * type: LoadingType\n   * Sets type of [TdLoadingComponent] rendered.\n   */\n  type: LoadingType = LoadingType.Circular;\n\n  /**\n   * color: primary' | 'accent' | 'warn'\n   * Sets theme color of [TdLoadingComponent] rendered.\n   */\n  color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngDoCheck(): void {\n    // When overlay is used and the host width has a value greater than 1px\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\n    if (this.isOverlay() && this._hostHeight() > 1) {\n      if (this.animation) {\n        this._setCircleDiameter();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  getHeight(): string {\n    // Ignore height if style is `overlay` or `fullscreen`.\n    // Add height if child elements have a height and style is `none`, else return default height.\n    if (this.isOverlay() || this.isFullScreen()) {\n      return undefined;\n    } else {\n      return this.height ? `${this.height}px` : '150px';\n    }\n  }\n\n  getCircleDiameter(): number {\n    return this._circleDiameter;\n  }\n\n  getCircleStrokeWidth(): number {\n    // we calculate the stroke width by setting it as 10% of its diameter\n    let strokeWidth: number = this.getCircleDiameter() / 10;\n    return Math.abs(strokeWidth);\n  }\n\n  isCircular(): boolean {\n    return this.type === LoadingType.Circular;\n  }\n\n  isLinear(): boolean {\n    return this.type === LoadingType.Linear;\n  }\n\n  isFullScreen(): boolean {\n    return this.style === LoadingStyle.FullScreen;\n  }\n\n  isOverlay(): boolean {\n    return this.style === LoadingStyle.Overlay;\n  }\n\n  animationComplete(event: AnimationEvent): void {\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\n    if (!event.fromState) {\n      this.inAnimationCompleted();\n    } else {\n      this.outAnimationCompleted();\n    }\n  }\n\n  inAnimationCompleted(): void {\n    this._animationIn.next(undefined);\n  }\n\n  outAnimationCompleted(): void {\n   /* little hack to reset the loader value and animation before removing it from DOM\n    * else, the loader will appear with prev value when its registered again\n    * and will do an animation going prev value to 0.\n    */\n    this.value = 0;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    this._animationOut.next(undefined);\n  }\n\n  /**\n   * Starts in animation and returns an observable for completition event.\n   */\n  startInAnimation(): Observable<any> {\n    /* need to switch back to the selected mode, so we have saved it in another variable\n    *  and then recover it. (issue with protractor)\n    */\n    this._mode = this._defaultMode;\n    // Set values before the animations starts\n    this._setCircleDiameter();\n    // Check for changes for `OnPush` change detection\n    this.animation = true;\n    this._changeDetectorRef.markForCheck();\n    return this._animationIn.asObservable();\n  }\n\n  /**\n   * Starts out animation and returns an observable for completition event.\n   */\n  startOutAnimation(): Observable<any> {\n    this.animation = false;\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\n    * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\n    */\n    this._mode = LoadingMode.Determinate;\n    // Check for changes for `OnPush` change detection\n    this._changeDetectorRef.markForCheck();\n    return this._animationOut.asObservable();\n  }\n\n  /**\n   * Calculate the proper diameter for the circle and set it\n   */\n  private _setCircleDiameter(): void {\n    // we set a default diameter of 100 since this is the default in material\n    let diameter: number = TD_CIRCLE_DIAMETER;\n    // if height is provided, then we take that as diameter\n    if (this.height) {\n      diameter = this.height;\n      // else if its not provided, then we take the host height\n    } else if (this.height === undefined) {\n      diameter = this._hostHeight();\n    }\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\n      this._circleDiameter = Math.floor(diameter);\n    } else {\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\n    }\n  }\n\n  /**\n   * Returns the host height of the loading component\n   */\n  private _hostHeight(): number {\n    if (<HTMLElement>this._elementRef.nativeElement) {\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\n    }\n    return 0;\n  }\n}\n","import { Injectable, ComponentFactoryResolver, ChangeDetectorRef, Provider, SkipSelf, Optional, EmbeddedViewRef } from '@angular/core';\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingStyle } from '../loading.component';\nimport { ITdLoadingConfig } from './loading.service';\n\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\n  height?: number;\n  style?: LoadingStyle;\n}\n\nexport interface ILoadingRef {\n  observable: Observable<any>;\n  componentRef: ComponentRef<any>;\n  subject?: Subject<any>;\n  times?: number;\n}\n\n/**\n * NOTE: @internal usage only.\n */\n@Injectable()\nexport class TdLoadingFactory {\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _overlay: Overlay,\n              private _injector: Injector) {\n  }\n\n  /**\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\n   * into it. Leveraging the state and configuration from it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\n    let loadingRef: ILoadingRef = this._initializeContext();\n    let loading: boolean = false;\n    let overlayRef: OverlayRef;\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        overlayRef = this._createOverlay();\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\n        this._mapOptions(options, loadingRef.componentRef.instance);\n        loadingRef.componentRef.instance.startInAnimation();\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          loadingRef.componentRef.destroy();\n          overlayRef.detach();\n          overlayRef.dispose();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\n   * perfectly when overlaying it.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createOverlayComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\n                                templateRef: TemplateRef<Object>): ILoadingRef {\n    (<IInternalLoadingOptions>options).height = undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\n    viewContainerRef.clear();\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        loadingRef.componentRef.instance.startOutAnimation();\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\n   * Replaces the template with the loading component depending if it was registered or resolved.\n   *\n   * Saves a reference in context to be called when registering/resolving the loading element.\n   */\n  public createReplaceComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\n                                templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\n    let nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling ?\n      nativeElement.nextElementSibling.scrollHeight : undefined;\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\n    let loadingRef: ILoadingRef = this._createComponent(options);\n    let loading: boolean = false;\n    // passing context so when the template is attached, we can keep the reference of the variables\n    let contentRef: EmbeddedViewRef<Object> = viewContainerRef.createEmbeddedView(templateRef, context);\n    loadingRef.observable.pipe(\n      distinctUntilChanged(),\n    ).subscribe((registered: number) => {\n      if (registered > 0 && !loading) {\n        loading = true;\n        // detach the content and attach the loader if loader is there\n        let index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\n        if (index < 0) {\n          viewContainerRef.detach(viewContainerRef.indexOf(contentRef));\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\n        }\n        loadingRef.componentRef.instance.startInAnimation();\n      } else if (registered <= 0 && loading) {\n        loading = false;\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\n          subs.unsubscribe();\n          // detach loader and attach the content if content is there\n          let index: number = viewContainerRef.indexOf(contentRef);\n          if (index < 0) {\n            viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\n            viewContainerRef.insert(contentRef, 0);\n          }\n          /**\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\n           * with \"OnPush\" change detection\n           */\n          contentRef.detectChanges();\n          contentRef.markForCheck();\n        });\n      }\n    });\n    return loadingRef;\n  }\n\n  /**\n   * Creates a fullscreen overlay for the loading usage.\n   */\n  private _createOverlay(): OverlayRef {\n    let state: OverlayConfig = new OverlayConfig();\n    state.hasBackdrop = false;\n    state.positionStrategy = this._overlay.position().global().centerHorizontally().centerVertically();\n    return this._overlay.create(state);\n  }\n\n  /**\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\n   */\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\n    let compRef: ILoadingRef = this._initializeContext();\n    compRef.componentRef = this._componentFactoryResolver\n    .resolveComponentFactory(TdLoadingComponent).create(this._injector);\n    this._mapOptions(options, compRef.componentRef.instance);\n    return compRef;\n  }\n\n  /**\n   * Initialize context for loading component.\n   */\n  private _initializeContext(): ILoadingRef {\n    let subject: Subject<any> = new Subject<any>();\n    return {\n      observable: subject.asObservable(),\n      subject: subject,\n      componentRef: undefined,\n      times: 0,\n    };\n  }\n\n  /**\n   * Maps configuration to the loading component instance.\n   */\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\n    instance.style = options.style;\n    if (options.type !== undefined) {\n      instance.type = options.type;\n    }\n    if (options.height !== undefined) {\n      instance.height = options.height;\n    }\n    if (options.mode !== undefined) {\n      instance.mode = options.mode;\n    }\n    if (options.color !== undefined) {\n      instance.color = options.color;\n    }\n  }\n}\n\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\n    parent: TdLoadingFactory, componentFactoryResolver: ComponentFactoryResolver, overlay: Overlay, injector: Injector): TdLoadingFactory {\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\n}\n\nexport const LOADING_FACTORY_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingFactory,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\n};\n","import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { TdLoadingContext } from '../directives/loading.directive';\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\n\nexport interface ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n}\n\nexport class TdLoadingConfig implements ITdLoadingConfig {\n  name: string;\n  type?: LoadingType;\n  mode?: LoadingMode;\n  color?: 'primary' | 'accent' | 'warn';\n\n  constructor(config: ITdLoadingConfig) {\n    this.name = config.name;\n    if (!this.name) {\n      throw Error('Name is required for [TdLoading] configuration.');\n    }\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\n    this.type = config.type ? config.type : LoadingType.Circular;\n    this.color = config.color ? config.color : 'primary';\n  }\n}\n\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\n  strategy?: LoadingStrategy;\n}\n\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\n  name: string;\n  type: LoadingType;\n  mode: LoadingMode;\n  strategy: LoadingStrategy;\n\n  constructor(config: ITdLoadingDirectiveConfig) {\n    super(config);\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\n  }\n}\n\n@Injectable()\nexport class TdLoadingService {\n\n  private _context: {[key: string]: ILoadingRef} = {};\n  private _timeouts: {[key: string]: any} = {};\n\n  constructor(private _loadingFactory: TdLoadingFactory) {\n    this.create({\n      name: 'td-loading-main',\n    });\n  }\n\n  /**\n   * params:\n   * - config: ILoadingDirectiveConfig\n   * - viewContainerRef: ViewContainerRef\n   * - templateRef: TemplateRef<Object>\n   *\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\n   * Replaces the templateRef with the mask when a request is registered on it.\n   *\n   * NOTE: @internal usage only.\n   */\n  createComponent(config: ITdLoadingDirectiveConfig, viewContainerRef: ViewContainerRef,\n                  templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\n    let directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\n    if (this._context[directiveConfig.name]) {\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\n    }\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(directiveConfig, viewContainerRef, templateRef);\n    } else {\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(directiveConfig, viewContainerRef, templateRef, context);\n    }\n    return this._context[directiveConfig.name];\n  }\n\n  /**\n   * params:\n   * - config: ITdLoadingConfig\n   *\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\n   * Only displayed when the mask has a request registered on it.\n   */\n  public create(config: ITdLoadingConfig): void {\n    let fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\n    this.removeComponent(fullscreenConfig.name);\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\n  }\n\n  /**\n   * params:\n   * - name: string\n   *\n   * Removes `loading` component from service context.\n   */\n  public removeComponent(name: string): void {\n    if (this._context[name]) {\n      this._context[name].subject.unsubscribe();\n      if (this._context[name].componentRef) {\n        this._context[name].componentRef.destroy();\n      }\n      this._context[name] = undefined;\n      delete this._context[name];\n    }\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - registers?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass registers argument to set a number of register calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.register()\n   */\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\n    // try registering into the service if the loading component has been instanciated or if it exists.\n    if (this._context[name]) {\n      registers = registers < 1 ? 1 : registers;\n      this._context[name].times += registers;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    } else {\n      // if it doesnt exist, set a timeout so its registered after change detection happens\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\n      if (!this._timeouts[name]) {\n        this._timeouts[name] = setTimeout(() => {\n          this.register(name, registers);\n        });\n      } else {\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\n        this._clearTimeout(name);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - resolves?: number\n   * returns: true if successful\n   *\n   * Resolves a request for the loading mask referenced by the name parameter.\n   * Can optionally pass resolves argument to set a number of resolve calls.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolve()\n   */\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      resolves = resolves < 1 ? 1 : resolves;\n      if (this._context[name].times > 0) {\n        let times: number = this._context[name].times;\n        times -= resolves;\n        this._context[name].times = times < 0 ? 0 : times;\n      }\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * returns: true if successful\n   *\n   * Resolves all request for the loading mask referenced by the name parameter.\n   *\n   * If no paramemeters are used, then default main mask will be used.\n   *\n   * e.g. loadingService.resolveAll()\n   */\n  public resolveAll(name: string = 'td-loading-main'): boolean {\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\n    this._clearTimeout(name);\n    if (this._context[name]) {\n      this._context[name].times = 0;\n      this._context[name].subject.next(this._context[name].times);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * params:\n   * - name: string\n   * - value: number\n   * returns: true if successful\n   *\n   * Set value on a loading mask referenced by the name parameter.\n   * Usage only available if its mode is 'determinate' and if loading is showing.\n   */\n  public setValue(name: string, value: number): boolean {\n    if (this._context[name]) {\n      let instance: TdLoadingComponent = this._context[name].componentRef.instance;\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\n        instance.value = value;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Clears timeout linked to the name.\n   * @param name Name of the loading component to be cleared\n   */\n  private _clearTimeout(name: string): void {\n    clearTimeout(this._timeouts[name]);\n    delete this._timeouts[name];\n  }\n}\n\nexport function LOADING_PROVIDER_FACTORY(\n    parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\n  return parent || new TdLoadingService(loadingFactory);\n}\n\nexport const LOADING_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdLoadingService,\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\n  useFactory: LOADING_PROVIDER_FACTORY,\n};\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\n\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\nimport { TdLoadingService } from '../services/loading.service';\nimport { ILoadingRef } from '../services/loading.factory';\n\n/**\n * Context class for variable reference\n */\nexport class TdLoadingContext {\n  public $implicit: any = undefined;\n  public tdLoading: any = undefined;\n}\n\n// Constant for generation of the id for the next component\nlet TD_LOADING_NEXT_ID: number = 0;\n\n@Directive({\n  selector: '[tdLoading]',\n})\nexport class TdLoadingDirective implements OnInit, OnDestroy {\n\n  private _context: TdLoadingContext = new TdLoadingContext();\n  private _type: LoadingType;\n  private _mode: LoadingMode;\n  private _strategy: LoadingStrategy;\n  private _name: string;\n  private _loadingRef: ILoadingRef;\n\n  /**\n   * tdLoading: string\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\n   */\n  @Input('tdLoading')\n  set name(name: string) {\n    if (!this._name) {\n      if (name) {\n        this._name = name;\n      }\n    }\n  }\n\n  /**\n   * tdLoadingUntil?: any\n   * If its null, undefined or false it will be used to register requests to the mask.\n   * Else if its any value that can be resolved as true, it will resolve the mask.\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\n   */\n  @Input('tdLoadingUntil')\n  set until(until: any) {\n    if (!this._name) {\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\n    }\n    this._context.$implicit = this._context.tdLoading = until;\n    if (!until) {\n      this._loadingService.register(this._name);\n    } else {\n      this._loadingService.resolveAll(this._name);\n    }\n  }\n\n  /**\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\n   * Sets the type of loading mask depending on value.\n   * Defaults to [LoadingType.Circular | 'circular'].\n   */\n  @Input('tdLoadingType')\n  set type(type: LoadingType) {\n    switch (type) {\n      case LoadingType.Linear:\n        this._type = LoadingType.Linear;\n        break;\n      default:\n        this._type = LoadingType.Circular;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\n   * Sets the mode of loading mask depending on value.\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\n   */\n  @Input('tdLoadingMode')\n  set mode(mode: LoadingMode) {\n    switch (mode) {\n      case LoadingMode.Determinate:\n        this._mode = LoadingMode.Determinate;\n        break;\n      default:\n        this._mode = LoadingMode.Indeterminate;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\n   * Sets the strategy of loading mask depending on value.\n   * Defaults to [LoadingMode.Replace | 'replace'].\n   */\n  @Input('tdLoadingStrategy')\n  set strategy(stategy: LoadingStrategy) {\n    switch (stategy) {\n      case LoadingStrategy.Overlay:\n        this._strategy = LoadingStrategy.Overlay;\n        break;\n      default:\n        this._strategy = LoadingStrategy.Replace;\n        break;\n    }\n  }\n\n  /**\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\n   * Sets the theme color of the loading component. Defaults to \"primary\"\n   */\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\n\n  constructor(private _viewContainerRef: ViewContainerRef,\n              private _templateRef: TemplateRef<TdLoadingContext>,\n              private _loadingService: TdLoadingService) {}\n\n  /**\n   * Registers component in the DOM, so it will be available when calling resolve/register.\n   */\n  ngOnInit(): void {\n    this._registerComponent();\n  }\n\n  /**\n   * Remove component when directive is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._loadingService.removeComponent(this._name);\n    this._loadingRef = undefined;\n  }\n\n  /**\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\n   */\n  private _registerComponent(): void {\n    if (!this._name) {\n      throw new Error('Name is needed to register loading directive');\n    }\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\n    if (!this._loadingRef) {\n      this._loadingRef = this._loadingService.createComponent({\n        name: this._name,\n        type: this._type,\n        mode: this._mode,\n        color: this.color,\n        strategy: this._strategy,\n      }, this._viewContainerRef, this._templateRef, this._context);\n    }\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\nimport { TdLoadingDirective } from './directives/loading.directive';\nimport { TdLoadingComponent } from './loading.component';\n\nconst TD_LOADING: Type<any>[] = [\n  TdLoadingComponent,\n  TdLoadingDirective,\n];\n\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [\n  TdLoadingComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    OverlayModule,\n    PortalModule,\n  ],\n  declarations: [\n    TD_LOADING,\n  ],\n  exports: [\n    TD_LOADING,\n  ],\n  providers: [\n    LOADING_FACTORY_PROVIDER,\n    LOADING_PROVIDER,\n  ],\n  entryComponents: [\n    TD_LOADING_ENTRY_COMPONENTS,\n  ],\n})\nexport class CovalentLoadingModule {\n\n}\n","import { Injectable, NgZone, SkipSelf, Optional, Provider } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\n\n@Injectable()\nexport class TdMediaService {\n\n  private _resizing: boolean = false;\n  private _globalSubscription: Subscription;\n  private _queryMap: Map<string, string> = new Map<string, string>();\n  private _querySources: { [key: string]: BehaviorSubject<boolean>} = {};\n  private _queryObservables: {[key: string]: Observable<boolean>} = {};\n\n  constructor(private _ngZone: NgZone) {\n    this._queryMap.set('xs', '(max-width: 599px)');\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\n    this._queryMap.set('xl', '(min-width: 1920px)');\n    this._queryMap.set('landscape', '(orientation: landscape)');\n    this._queryMap.set('portrait', '(orientation: portrait)');\n    this._queryMap.set('print', 'print');\n\n    this._resizing = false;\n    // we make sure that the resize checking happend outside of Angular since it happens often\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n      return fromEvent(window, 'resize').subscribe(() => {\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\n        if (!this._resizing) {\n          this._resizing = true;\n          setTimeout(() => {\n            this._onResize();\n            this._resizing = false;\n          }, 100);\n        }\n      });\n    });\n  }\n\n  /**\n   * Deregisters a query so its stops being notified or used.\n   */\n  deregisterQuery(query: string): void {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    this._querySources[query].unsubscribe();\n    delete this._querySources[query];\n    delete this._queryObservables[query];\n  }\n\n  /**\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\n   */\n  public query(query: string): boolean {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    return this._ngZone.run(() => {\n      return matchMedia(query).matches;\n    });\n  }\n\n  /**\n   * Registers a media query and returns an [Observable] that will re-evaluate and\n   * return if the given media query matches on window resize.\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\n   */\n  public registerQuery(query: string): Observable<boolean> {\n    if (this._queryMap.get(query.toLowerCase())) {\n      query = this._queryMap.get(query.toLowerCase());\n    }\n    if (!this._querySources[query]) {\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\n      this._queryObservables[query] = this._querySources[query].asObservable();\n    }\n    return this._queryObservables[query];\n  }\n\n  /**\n   * Trigger a match media event on all subscribed observables.\n   */\n  public broadcast(): void {\n    this._onResize();\n  }\n\n  private _onResize(): void {\n    for (let query in this._querySources) {\n      this._ngZone.run(() => {\n        this._matchMediaTrigger(query);\n      });\n    }\n  }\n\n  private _matchMediaTrigger(query: string): void {\n    this._querySources[query].next(matchMedia(query).matches);\n  }\n}\n\nexport function MEDIA_PROVIDER_FACTORY(\n    parent: TdMediaService, ngZone: NgZone): TdMediaService {\n  return parent || new TdMediaService(ngZone);\n}\n\nexport const MEDIA_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdMediaService,\n  deps: [[new Optional(), new SkipSelf(), TdMediaService], NgZone],\n  useFactory: MEDIA_PROVIDER_FACTORY,\n};\n","import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdMediaService } from '../services/media.service';\n\n@Directive({\n  selector: '[tdMediaToggle]',\n})\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\n\n  private _subscription: Subscription;\n\n  private _query: string;\n  private _matches: boolean = false;\n  private _attributes: {[key: string]: string} = {};\n  private _styles: {[key: string]: string} = {};\n  private _classes: string[] = [];\n\n  /**\n   * tdMediaToggle: string\n   * Media query used to evaluate screen/window size.\n   * Toggles attributes, classes and styles if media query is matched.\n   */\n  @Input('tdMediaToggle')\n  set query(query: string) {\n    if (!query) {\n      throw new Error('Query needed for [tdMediaToggle] directive.');\n    }\n    this._query = query;\n  }\n\n  /**\n   * mediaAttributes: {[key: string]: string}\n   * Attributes to be toggled when media query matches.\n   */\n  @Input('mediaAttributes')\n  set attributes(attributes: any) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * mediaClasses: string[]\n   * CSS Classes to be toggled when media query matches.\n   */\n  @Input('mediaClasses')\n  set classes(classes: string[]) {\n    this._classes = classes;\n  }\n\n  /**\n   * mediaStyles: {[key: string]: string}\n   * CSS Styles to be toggled when media query matches.\n   */\n  @Input('mediaStyles')\n  set styles(styles: any) {\n    this._styles = styles;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) { }\n\n  ngOnInit(): void {\n    this._mediaChange(this._mediaService.query(this._query));\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\n      this._mediaChange(matches);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _mediaChange(matches: boolean): void {\n    this._matches = matches;\n    this._changeAttributes();\n    this._changeClasses();\n    this._changeStyles();\n  }\n\n  private _changeAttributes(): void {\n    for (let attr in this._attributes) {\n      if (this._matches) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\n      }\n    }\n  }\n\n  private _changeClasses(): void {\n    this._classes.forEach((className: string) => {\n      if (this._matches) {\n        this._renderer.addClass(this._elementRef.nativeElement, className);\n      } else {\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\n      }\n    });\n  }\n\n  private _changeStyles(): void {\n    for (let style in this._styles) {\n      if (this._matches) {\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\n      } else {\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\n      }\n    }\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { MEDIA_PROVIDER } from './services/media.service';\nimport { TdMediaToggleDirective } from './directives/media-toggle.directive';\n\nconst TD_MEDIA: Type<any>[] = [\n  TdMediaToggleDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TD_MEDIA,\n  ],\n  exports: [\n    TD_MEDIA,\n  ],\n  providers: [\n    MEDIA_PROVIDER,\n  ],\n})\nexport class CovalentMediaModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'td-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class TdMenuComponent {\n\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdMenuComponent } from './menu.component';\n\nconst TD_MENU: Type<any>[] = [\n  TdMenuComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatMenuModule,\n    MatDividerModule,\n  ],\n  declarations: [\n    TD_MENU,\n  ],\n  exports: [\n    TD_MENU,\n  ],\n})\nexport class CovalentMenuModule {\n\n}\n","import { Component, ViewChild, OnInit, Input, Output, EventEmitter, Optional,\n         ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Dir } from '@angular/cdk/bidi';\nimport { MatInput } from '@angular/material/input';\n\nimport { debounceTime, skip } from 'rxjs/operators';\n\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchInputBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) { }\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchInputMixinBase = mixinControlValueAccessor(TdSearchInputBase);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdSearchInputComponent),\n    multi: true,\n  }],\n  selector: 'td-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('searchState', [\n      state('hide-left', style({\n        transform: 'translateX(-150%)',\n        display: 'none',\n      })),\n      state('hide-right', style({\n        transform: 'translateX(150%)',\n        display: 'none',\n      })),\n      state('show',  style({\n        transform: 'translateX(0%)',\n        display: 'block',\n      })),\n      transition('* => show', animate('200ms ease-in')),\n      transition('show => *', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchInputComponent extends _TdSearchInputMixinBase implements IControlValueAccessor, OnInit {\n\n  @ViewChild(MatInput) _input: MatInput;\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * blur: function()\n   * Event emitted after the blur event has been called in underlying input.\n   */\n  @Output('blur') onBlur: EventEmitter<void> = new EventEmitter<void>();\n\n  get isRTL(): boolean {\n    if (this._dir) {\n      return this._dir.dir === 'rtl';\n    }\n    return false;\n  }\n\n  constructor(@Optional() private _dir: Dir,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._input.ngControl.valueChanges.pipe(\n      debounceTime(this.debounce),\n      skip(1), // skip first change when value is set to undefined\n    ).subscribe((value: string) => {\n      this._searchTermChanged(value);\n    });\n  }\n\n  /**\n   * Method to focus to underlying input.\n   */\n  focus(): void {\n    this._input.focus();\n  }\n\n  handleBlur(): void {\n    this.onBlur.emit(undefined);\n  }\n\n  stopPropagation(event: Event): void {\n    event.stopPropagation();\n  }\n\n  handleSearch(event: Event): void {\n    this.stopPropagation(event);\n    this.onSearch.emit(this.value);\n  }\n\n  /**\n   * Method to clear the underlying input.\n   */\n  clearSearch(): void {\n    this.value = '';\n    this._changeDetectorRef.markForCheck();\n    this.onClear.emit(undefined);\n  }\n\n  private _searchTermChanged(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n}\n","import { Component, ViewChild, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { trigger, state, style, transition, animate, AUTO_STYLE } from '@angular/animations';\n\nimport { TdSearchInputComponent } from '../search-input/search-input.component';\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\n\nexport class TdSearchBoxBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) { }\n}\n\n/* tslint:disable-next-line */\nexport const _TdSearchBoxMixinBase = mixinControlValueAccessor(TdSearchBoxBase);\n\n@Component({\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdSearchBoxComponent),\n    multi: true,\n  }],\n  selector: 'td-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss' ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['value'],\n  animations: [\n    trigger('inputState', [\n      state('0', style({\n        width: '0%',\n        margin: '0px',\n      })),\n      state('1',  style({\n        width: '100%',\n        margin: AUTO_STYLE,\n      })),\n      transition('0 => 1', animate('200ms ease-in')),\n      transition('1 => 0', animate('200ms ease-out')),\n    ]),\n  ],\n})\nexport class TdSearchBoxComponent extends _TdSearchBoxMixinBase implements IControlValueAccessor {\n\n  private _searchVisible: boolean = false;\n  @ViewChild(TdSearchInputComponent) _searchInput: TdSearchInputComponent;\n\n  get searchVisible(): boolean {\n    return this._searchVisible;\n  }\n\n  /**\n   * backIcon?: string\n   * The icon used to close the search toggle, only shown when [alwaysVisible] is false.\n   * Defaults to 'search' icon.\n   */\n  @Input('backIcon') backIcon: string = 'search';\n\n  /**\n   * searchIcon?: string\n   * The icon used to open/focus the search toggle.\n   * Defaults to 'search' icon.\n   */\n  @Input('searchIcon') searchIcon: string = 'search';\n\n  /**\n   * clearIcon?: string\n   * The icon used to clear the search input.\n   * Defaults to 'cancel' icon.\n   */\n  @Input('clearIcon') clearIcon: string = 'cancel';\n\n  /**\n   * showUnderline?: boolean\n   * Sets if the input underline should be visible. Defaults to 'false'.\n   */\n  @Input('showUnderline') showUnderline: boolean = false;\n\n  /**\n   * debounce?: number\n   * Debounce timeout between keypresses. Defaults to 400.\n   */\n  @Input('debounce') debounce: number = 400;\n\n  /**\n   * alwaysVisible?: boolean\n   * Sets if the input should always be visible. Defaults to 'false'.\n   */\n  @Input('alwaysVisible') alwaysVisible: boolean = false;\n\n  /**\n   * placeholder?: string\n   * Placeholder for the underlying input component.\n   */\n  @Input('placeholder') placeholder: string;\n\n  /**\n   * searchDebounce: function($event)\n   * Event emitted after the [debounce] timeout.\n   */\n  @Output('searchDebounce') onSearchDebounce: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * search: function($event)\n   * Event emitted after the key enter has been pressed.\n   */\n  @Output('search') onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n  /**\n   * clear: function()\n   * Event emitted after the clear icon has been clicked.\n   */\n  @Output('clear') onClear: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  /**\n   * Method executed when the search icon is clicked.\n   */\n  searchClicked(): void {\n    if (!this.alwaysVisible && this._searchVisible) {\n      this.value = '';\n      this.handleClear();\n    } else if (this.alwaysVisible || !this._searchVisible) {\n      this._searchInput.focus();\n    }\n    this.toggleVisibility();\n  }\n\n  toggleVisibility(): void {\n    this._searchVisible = !this._searchVisible;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  handleSearchDebounce(value: string): void {\n    this.onSearchDebounce.emit(value);\n  }\n\n  handleSearch(value: string): void {\n    this.onSearch.emit(value);\n  }\n\n  handleClear(): void {\n    this.onClear.emit(undefined);\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TdSearchInputComponent } from './search-input/search-input.component';\nimport { TdSearchBoxComponent } from './search-box/search-box.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdSearchInputComponent,\n    TdSearchBoxComponent,\n  ],\n  exports: [\n    TdSearchInputComponent,\n    TdSearchBoxComponent,\n  ],\n})\nexport class CovalentSearchModule {\n\n}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  separatorIcon: string = 'chevron_right';\n  // Should show the right chevron or not before the label\n  _displayIcon: boolean = true;\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport {\n  Subscription,\n  Subject,\n  fromEvent,\n  merge,\n} from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n} from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _resizing: boolean = false;\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input('separatorIcon') separatorIcon: string = 'chevron_right';\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(\n        debounceTime(10),\n      ),\n      this._widthSubject.asObservable().pipe(\n        distinctUntilChanged(),\n      ),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.setCrumbIcons();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n  }\n\n  /*\n  * Current width of the element container\n  */\n  get nativeElementWidth(): number {\n    let element: HTMLElement = (<HTMLElement>this._elementRef.nativeElement);\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    let style: CSSStyleDeclaration = window.getComputedStyle(element);\n    let borderLeft: number = parseInt(style.borderLeft, 10);\n    let borderRight: number = parseInt(style.borderRight, 10);\n    let marginLeft: number = parseInt(style.marginLeft, 10);\n    let marginRight: number = parseInt(style.marginRight, 10);\n    let paddingLeft: number = parseInt(style.paddingLeft, 10);\n    let paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return element.getBoundingClientRect().width - borderLeft - borderRight - marginLeft - marginRight - paddingLeft - paddingRight;\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    let breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    if (breadcrumbArray.length > 0) {\n      // don't show the icon on the last breadcrumb\n      breadcrumbArray[breadcrumbArray.length - 1]._displayIcon = false;\n    }\n    breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent) => {\n      breadcrumb.separatorIcon = this.separatorIcon;\n    });\n  }\n\n  private _calculateVisibility(): void {\n    let crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    let hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      let breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if ((crumbWidthSum + breadcrumb.width) > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n  ],\n  declarations: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n  exports: [\n    TdBreadcrumbsComponent,\n    TdBreadcrumbComponent,\n  ],\n})\nexport class CovalentBreadcrumbsModule {\n\n}\n","import { Component, Directive, Input, Output, TemplateRef, ViewChild,\n         ViewContainerRef, ContentChild, OnInit } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\nimport { TemplatePortalDirective, TemplatePortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nexport enum StepState {\n  None = 'none',\n  Required = 'required',\n  Complete = 'complete',\n}\n\n@Directive({\n  selector: '[td-step-label]ng-template',\n})\nexport class TdStepLabelDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-actions]ng-template',\n})\nexport class TdStepActionsDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[td-step-summary]ng-template',\n})\nexport class TdStepSummaryDirective extends TemplatePortalDirective {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\nexport class TdStepBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepMixinBase = mixinDisableRipple(mixinDisabled(TdStepBase));\n\n@Component({\n  selector: 'td-step',\n  inputs: ['disabled', 'disableRipple'],\n  templateUrl: './step.component.html',\n})\nexport class TdStepComponent extends _TdStepMixinBase implements OnInit, ICanDisable, ICanDisableRipple {\n\n  private _active: boolean = false;\n  private _state: StepState = StepState.None;\n\n  private _contentPortal: TemplatePortal<any>;\n  get stepContent(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n  @ContentChild(TdStepLabelDirective) stepLabel: TdStepLabelDirective;\n  @ContentChild(TdStepActionsDirective) stepActions: TdStepActionsDirective;\n  @ContentChild(TdStepSummaryDirective) stepSummary: TdStepSummaryDirective;\n\n  /**\n   * label?: string\n   * Sets label of [TdStepComponent] header.\n   * Defaults to 'Step #'\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   * Sets sublabel of [TdStepComponent] header.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * active?: boolean\n   * Toggles [TdStepComponent] between active/deactive.\n   */\n  @Input('active')\n  set active(active: boolean) {\n    this._setActive(coerceBooleanProperty(active));\n  }\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets state of [TdStepComponent] depending on value.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state')\n  set state(state: StepState) {\n    switch (state) {\n      case StepState.Complete:\n        this._state = StepState.Complete;\n        break;\n      case StepState.Required:\n        this._state = StepState.Required;\n        break;\n      default:\n        this._state = StepState.None;\n        break;\n    }\n  }\n  get state(): StepState {\n    return this._state;\n  }\n\n  /**\n   * activated?: function\n   * Event emitted when [TdStepComponent] is activated.\n   */\n  @Output('activated') onActivated: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * deactivated?: function\n   * Event emitted when [TdStepComponent] is deactivated.\n   */\n  @Output('deactivated') onDeactivated: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n  /**\n   * Toggle active state of [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  toggle(): boolean {\n    return this._setActive(!this._active);\n  }\n\n  /**\n   * Opens [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  open(): boolean {\n    return this._setActive(true);\n  }\n\n  /**\n   * Closes [TdStepComponent]\n   * retuns 'true' if successful, else 'false'.\n   */\n  close(): boolean {\n    return this._setActive(false);\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this._state === StepState.Complete;\n  }\n\n  /** Method executed when the disabled value changes */\n  onDisabledChange(v: boolean): void {\n    if (v && this._active) {\n      this._active = false;\n      this._onDeactivated();\n    }\n  }\n\n  /**\n   * Method to change active state internally and emit the [onActivated] event if 'true' or [onDeactivated]\n   * event if 'false'. (Blocked if [disabled] is 'true')\n   * returns true if successfully changed state\n   */\n  private _setActive(newActive: boolean): boolean {\n    if (this.disabled) {\n      return false;\n    }\n    if (this._active !== newActive) {\n      this._active = newActive;\n      if (newActive) {\n        this._onActivated();\n      } else {\n        this._onDeactivated();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  private _onActivated(): void {\n    this.onActivated.emit(undefined);\n  }\n\n  private _onDeactivated(): void {\n    this.onDeactivated.emit(undefined);\n  }\n}\n","import { Component, Input, Output } from '@angular/core';\nimport { OnDestroy, AfterContentInit } from '@angular/core';\nimport { EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TdStepComponent } from './step.component';\n\nexport interface IStepChangeEvent {\n  newStep: TdStepComponent;\n  prevStep: TdStepComponent;\n}\n\nexport enum StepMode {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\n@Component({\n  selector: 'td-steps',\n  styleUrls: ['./steps.component.scss' ],\n  templateUrl: './steps.component.html',\n})\nexport class TdStepsComponent implements OnDestroy, AfterContentInit {\n\n  private _subcriptions: Subscription[];\n  private _mode: StepMode = StepMode.Vertical;\n  private _steps: QueryList<TdStepComponent>;\n\n  @ContentChildren(TdStepComponent)\n  set stepsContent(steps: QueryList<TdStepComponent>) {\n    if (steps) {\n      this._steps = steps;\n      this._registerSteps();\n    }\n  }\n\n  get steps(): TdStepComponent[] {\n    return this._steps.toArray();\n  }\n  prevStep: TdStepComponent;\n\n  /**\n   * mode?: StepMode or [\"vertical\" | \"horizontal\"]\n   * Defines if the mode of the [TdStepsComponent].  Defaults to [StepMode.Vertical | \"vertical\"]\n   */\n  @Input('mode')\n  set mode(mode: StepMode) {\n    switch (mode) {\n      case StepMode.Horizontal:\n        this._mode = StepMode.Horizontal;\n        break;\n      default:\n        this._mode = StepMode.Vertical;\n    }\n  }\n  get mode(): StepMode {\n    return this._mode;\n  }\n\n  /**\n   * stepChange?: function\n   * Method to be executed when [onStepChange] event is emitted.\n   * Emits an [IStepChangeEvent] implemented object.\n   */\n  @Output('stepChange') onStepChange: EventEmitter<IStepChangeEvent> = new EventEmitter<IStepChangeEvent>();\n\n  /**\n   * Executed after content is initialized, loops through any [TdStepComponent] children elements,\n   * assigns them a number and subscribes as an observer to their [onActivated] event.\n   */\n  ngAfterContentInit(): void {\n    this._registerSteps();\n  }\n\n  /**\n   * Unsubscribes from [TdStepComponent] children elements when component is destroyed.\n   */\n  ngOnDestroy(): void {\n    this._deregisterSteps();\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Horizontal | 'horizontal'], else 'false'.\n   */\n  isHorizontal(): boolean {\n    return this._mode === StepMode.Horizontal;\n  }\n\n  /**\n   * Returns 'true' if [mode] equals to [StepMode.Vertical | 'vertical'], else 'false'.\n   */\n  isVertical(): boolean {\n    return this._mode === StepMode.Vertical;\n  }\n\n  areStepsActive(): boolean {\n    return this._steps.filter((step: TdStepComponent) => {\n      return step.active;\n    }).length > 0;\n  }\n\n  /**\n   * Wraps previous and new [TdStepComponent] numbers in an object that implements [IStepChangeEvent]\n   * and emits [onStepChange] event.\n   */\n  private _onStepSelection(step: TdStepComponent): void {\n    if (this.prevStep !== step) {\n      let prevStep: TdStepComponent = this.prevStep;\n      this.prevStep = step;\n      let event: IStepChangeEvent = {\n        newStep: step,\n        prevStep: prevStep,\n      };\n      this._deactivateAllBut(step);\n      this.onStepChange.emit(event);\n    }\n  }\n\n  /**\n   * Loops through [TdStepComponent] children elements and deactivates them ignoring the one passed as an argument.\n   */\n  private _deactivateAllBut(activeStep: TdStepComponent): void {\n    this._steps.filter((step: TdStepComponent) => step !== activeStep)\n    .forEach((step: TdStepComponent) => {\n      step.active = false;\n    });\n  }\n\n  private _registerSteps(): void {\n    this._subcriptions = [];\n    this._steps.toArray().forEach((step: TdStepComponent) => {\n      let subscription: Subscription = step.onActivated.asObservable().subscribe(() => {\n        this._onStepSelection(step);\n      });\n      this._subcriptions.push(subscription);\n    });\n  }\n\n  private _deregisterSteps(): void {\n    if (this._subcriptions) {\n      this._subcriptions.forEach((subs: Subscription) => {\n        subs.unsubscribe();\n      });\n      this._subcriptions = undefined;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '@covalent/core/common';\n\nimport { StepState } from '../step.component';\n\nexport class TdStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdStepHeaderBase));\n\n@Component({\n  selector: 'td-step-header',\n  inputs: ['disabled', 'disableRipple'],\n  styleUrls: ['./step-header.component.scss' ],\n  templateUrl: './step-header.component.html',\n})\nexport class TdStepHeaderComponent extends _TdStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n\n  /**\n   * Number assigned to [TdStepHeaderComponent].\n   */\n  @Input('number') number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\n\nimport { StepState } from '../step.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Component({\n  selector: 'td-step-body',\n  styleUrls: ['./step-body.component.scss' ],\n  templateUrl: './step-body.component.html',\n  animations: [\n    tdCollapseAnimation,\n  ],\n})\nexport class TdStepBodyComponent {\n\n  @ViewChild('contentRef', { read: ElementRef }) contentRef: ElementRef;\n\n  get hasContent(): boolean {\n    return this.contentRef &&\n          (this.contentRef.nativeElement.children.length > 0 || !!this.contentRef.nativeElement.textContent.trim());\n  }\n\n  @ViewChild('actionsRef', { read: ElementRef }) actionsRef: ElementRef;\n\n  get hasActions(): boolean {\n    return this.actionsRef &&\n          (this.actionsRef.nativeElement.children.length > 0 || !!this.actionsRef.nativeElement.textContent.trim());\n  }\n\n  @ViewChild('summaryRef', { read: ElementRef }) summaryRef: ElementRef;\n\n  get hasSummary(): boolean {\n    return this.summaryRef &&\n          (this.summaryRef.nativeElement.children.length > 0 || !!this.summaryRef.nativeElement.textContent.trim());\n  }\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on body.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of body.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\n\n// Steps\nimport { TdStepsComponent } from './steps.component';\nimport { TdStepHeaderComponent } from './step-header/step-header.component';\nimport { TdStepBodyComponent } from './step-body/step-body.component';\nimport { TdStepComponent, TdStepLabelDirective, TdStepActionsDirective,\n         TdStepSummaryDirective } from './step.component';\n\nconst TD_STEPS: Type<any>[] = [\n  TdStepsComponent,\n  TdStepComponent,\n  TdStepHeaderComponent,\n  TdStepBodyComponent,\n  TdStepLabelDirective,\n  TdStepActionsDirective,\n  TdStepSummaryDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatRippleModule,\n    PortalModule,\n    ScrollDispatchModule,\n    CovalentCommonModule,\n  ],\n  declarations: [\n    TD_STEPS,\n  ],\n  exports: [\n    TD_STEPS,\n  ],\n})\nexport class CovalentStepsModule {\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  TemplateRef,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { mixinDisabled, ICanDisable } from '@covalent/core/common';\n\nexport class TdTabOptionBase {\n  constructor(public _viewContainerRef: ViewContainerRef,\n              public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabOptionMixinBase = mixinDisabled(TdTabOptionBase);\n\n@Component({\n  selector: 'td-tab-option',\n  templateUrl: './tab-option.component.html',\n  styleUrls: ['./tab-option.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  /* tslint:disable-next-line */\n  inputs: ['disabled'],\n})\nexport class TdTabOptionComponent extends _TdTabOptionMixinBase implements ICanDisable, OnInit {\n\n  private _contentPortal: TemplatePortal<any>;\n  get content(): TemplatePortal<any> {\n    return this._contentPortal;\n  }\n\n  @ViewChild(TemplateRef) _content: TemplateRef<any>;\n\n  /**\n   * Value to which the option will be binded to.\n   */\n  @Input('value') value: any;\n\n  constructor(_viewContainerRef: ViewContainerRef,\n              _changeDetectorRef: ChangeDetectorRef) {\n    super(_viewContainerRef, _changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\n\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  AfterContentInit,\n  forwardRef,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { ICanDisable,\n          mixinDisabled,\n          IControlValueAccessor,\n          mixinControlValueAccessor,\n          ICanDisableRipple,\n          mixinDisableRipple,\n} from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdTabOptionComponent } from './tab-option.component';\n\nexport class TdTabSelectBase {\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\n}\n\n/* tslint:disable-next-line */\nexport const _TdTabSelectMixinBase = mixinControlValueAccessor(mixinDisabled(mixinDisableRipple(TdTabSelectBase)));\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TdTabSelectComponent),\n    multi: true,\n  }],\n  selector: 'td-tab-select',\n  templateUrl: './tab-select.component.html',\n  styleUrls: ['./tab-select.component.scss'],\n  /* tslint:disable-next-line */\n  inputs: ['value', 'disabled', 'disableRipple'],\n})\nexport class TdTabSelectComponent extends _TdTabSelectMixinBase\n                                  implements IControlValueAccessor, ICanDisable, ICanDisableRipple, OnInit, AfterContentInit, OnDestroy {\n\n  private _subs: Subscription[] = [];\n\n  private _values: any[] = [];\n  private _selectedIndex: number = 0;\n  private _stretchTabs: boolean = false;\n\n  get selectedIndex(): number {\n    return this._selectedIndex;\n  }\n\n  /**\n   * Gets all tab option children\n   */\n  @ContentChildren(TdTabOptionComponent) readonly _tabOptions: QueryList<TdTabOptionComponent>;\n\n  get tabOptions(): TdTabOptionComponent[] {\n    return this._tabOptions ? this._tabOptions.toArray() : undefined;\n  }\n\n  /**\n   * Makes the tabs stretch to fit the parent container.\n   */\n  @Input('stretchTabs')\n  set stretchTabs(stretchTabs: boolean) {\n    this._stretchTabs = coerceBooleanProperty(stretchTabs);\n  }\n  get stretchTabs(): boolean {\n    return this._stretchTabs;\n  }\n\n  /**\n   * Color of the tab group.\n   */\n  @Input('color') color: ThemePalette;\n\n  /**\n   * Background color of the tab group.\n   */\n  @Input('backgroundColor') backgroundColor: ThemePalette;\n\n  /**\n   * Event that emits whenever the raw value of the select changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\n    super(_changeDetectorRef);\n  }\n\n  ngOnInit(): void {\n    // subscribe to check if value changes and update the selectedIndex internally.\n    this._subs.push(\n      this.valueChanges.subscribe((value: any) => {\n        this._setValue(value);\n      }),\n    );\n  }\n\n  ngAfterContentInit(): void {\n    // subscribe to listen to any tab changes.\n    this._refreshValues();\n    this._subs.push(\n      this._tabOptions.changes.subscribe(() => {\n        this._refreshValues();\n      }),\n    );\n    // initialize value\n    Promise.resolve().then(() => {\n      this._setValue(this.value);\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._subs && this._subs.length) {\n      this._subs.forEach((sub: Subscription) => {\n        sub.unsubscribe();\n      });\n    }\n  }\n\n  /**\n   * Method executed when user selects a different tab\n   * This updates the new selectedIndex and infers what value should be mapped to.\n   */\n  selectedIndexChange(selectedIndex: number): void {\n    this._selectedIndex = selectedIndex;\n    let value: any = this._values[selectedIndex];\n    this.value = value;\n    this.valueChange.emit(value);\n    this.onChange(value);\n  }\n\n  /**\n   * Refresh the values array whenever the number of tabs gets updated\n   */\n  private _refreshValues(): void {\n    this._values = this.tabOptions.map((tabOption: TdTabOptionComponent) => {\n      return tabOption.value;\n    });\n  }\n\n  /**\n   * Try to set value depending if its part of our options\n   * else set the value of the first tab.\n   */\n  private _setValue(value: any): void {\n    let index: number = this._values.indexOf(value);\n    if (index > -1) {\n      this._selectedIndex = index;\n    } else {\n      this.value = this._values.length ? this._values[0] : undefined;\n      this._selectedIndex = 0;\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { TdTabSelectComponent } from './tab-select.component';\nimport { TdTabOptionComponent } from './tab-option.component';\n\n@NgModule({\n  declarations: [\n    TdTabSelectComponent,\n    TdTabOptionComponent,\n  ], // directives, components, and pipes owned by this NgModule\n  imports: [\n    /** Angular Modules */\n    CommonModule,\n    FormsModule,\n    /** Material Modules */\n    PortalModule,\n    MatTabsModule,\n  ], // modules needed to run this module\n  exports: [\n    TdTabSelectComponent,\n    TdTabOptionComponent,\n  ],\n})\nexport class CovalentTabSelectModule {}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisable {\n  disabled: boolean;\n  onDisabledChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<ICanDisable> & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disabled(): boolean {\n      return this._disabled;\n    }\n    set disabled(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disabled !== newValue) {\n        this._disabled = newValue;\n        this.onDisabledChange(this._disabled);\n      }\n    }\n\n    onDisabledChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\ntype Constructor<T> = new (...args: any[]) => T;\n\n/** Interface to implement when applying the disabled mixin */\nexport interface ICanDisableRipple {\n  disableRipple: boolean;\n  onDisableRippleChange(v: boolean): void;\n}\n\n/** Mixin to augment a component or directive with a `disabled` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): Constructor<ICanDisableRipple> & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n\n    get disableRipple(): boolean {\n      return this._disableRipple;\n    }\n    set disableRipple(value: boolean) {\n      let newValue: boolean = coerceBooleanProperty(value);\n      if (this._disableRipple !== newValue) {\n        this._disableRipple = newValue;\n        this.onDisableRippleChange(this._disableRipple);\n      }\n    }\n\n    onDisableRippleChange(v: boolean): void {\n      /** NOT IMPLEMENTED, this needs to be overriden by subclasses if needed */\n    }\n  };\n}\n"]}