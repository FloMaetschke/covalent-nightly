!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/common"),require("@angular/forms"),require("@angular/material/input"),require("@angular/material/button"),require("@angular/core"),require("@angular/material/dialog")):"function"==typeof define&&define.amd?define("@covalent/core/dialogs",["exports","@angular/common","@angular/forms","@angular/material/input","@angular/material/button","@angular/core","@angular/material/dialog"],o):o((t.covalent=t.covalent||{},t.covalent.core=t.covalent.core||{},t.covalent.core.dialogs={}),t.ng.common,t.ng.forms,t.ng.material.input,t.ng.material.button,t.ng.core,t.ng.material.dialog)}(this,function(t,o,e,n,a,i,l){"use strict";var r=(c.decorators=[{type:i.Directive,args:[{selector:"td-dialog-title"}]}],c);function c(){}var d=(s.decorators=[{type:i.Directive,args:[{selector:"td-dialog-content"}]}],s);function s(){}var g=(p.decorators=[{type:i.Directive,args:[{selector:"td-dialog-actions"}]}],p);function p(){}var u=(f.prototype.ngAfterContentInit=function(){if(1<this.dialogTitle.length)throw new Error("Duplicate td-dialog-title component at in td-dialog.");if(1<this.dialogContent.length)throw new Error("Duplicate td-dialog-content component at in td-dialog.");if(1<this.dialogActions.length)throw new Error("Duplicate td-dialog-actions component at in td-dialog.")},f.decorators=[{type:i.Component,args:[{selector:"td-dialog",template:'<div class="td-dialog-wrapper">\n  <h3 class="td-dialog-title" *ngIf="dialogTitle.length > 0">\n    <ng-content select="td-dialog-title"></ng-content>\n  </h3>\n  <div class="td-dialog-content" *ngIf="dialogContent.length > 0">\n    <ng-content select="td-dialog-content"></ng-content>\n  </div>\n  <div class="td-dialog-actions" *ngIf="dialogActions.length > 0">\n    <span class="td-dialog-spacer"></span>\n    <ng-content select="td-dialog-actions"></ng-content>\n  </div>\n</div>',styles:[".td-dialog-title{margin-top:0;margin-bottom:20px}.td-dialog-content{margin-bottom:16px}.td-dialog-actions{position:relative;top:16px;left:16px}::ng-deep [dir=rtl] .td-dialog-actions{right:16px;left:auto}:host{display:block}:host .td-dialog-actions{-ms-flex-direction:row;flex-direction:row;box-sizing:border-box;display:-ms-flexbox;display:flex}:host .td-dialog-actions .td-dialog-spacer{-ms-flex:1;flex:1}:host .td-dialog-actions ::ng-deep button{text-transform:uppercase;margin-left:8px;padding-left:8px;padding-right:8px;min-width:64px}[dir=rtl] :host .td-dialog-actions ::ng-deep button{margin-right:8px;margin-left:inherit}"]}]}],f.propDecorators={dialogTitle:[{type:i.ContentChildren,args:[r]}],dialogContent:[{type:i.ContentChildren,args:[d]}],dialogActions:[{type:i.ContentChildren,args:[g]}]},f);function f(){}var m=(h.prototype.close=function(){this._dialogRef.close()},h.decorators=[{type:i.Component,args:[{selector:"td-alert-dialog",template:'<td-dialog>\n  <td-dialog-title *ngIf="title">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class="td-dialog-message">{{message}}</span>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button color="accent" (click)="close()">{{closeButton}}</button>\n  </td-dialog-actions>\n</td-dialog>',styles:[".td-dialog-message{word-break:break-word}"]}]}],h.ctorParameters=function(){return[{type:l.MatDialogRef}]},h);function h(t){this._dialogRef=t,this.closeButton="CLOSE"}var v=(y.prototype.cancel=function(){this._dialogRef.close(!1)},y.prototype.accept=function(){this._dialogRef.close(!0)},y.decorators=[{type:i.Component,args:[{selector:"td-confirm-dialog",template:'<td-dialog>\n  <td-dialog-title *ngIf="title">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class="td-dialog-message">{{message}}</span>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button\n            #closeBtn \n            (keydown.arrowright)="acceptBtn.focus()"\n            (click)="cancel()">{{cancelButton}}</button>\n    <button mat-button\n            color="accent"\n            #acceptBtn\n            (keydown.arrowleft)="closeBtn.focus()"\n            (click)="accept()">{{acceptButton}}</button>\n  </td-dialog-actions>\n</td-dialog>',styles:[".td-dialog-message{word-break:break-word}"]}]}],y.ctorParameters=function(){return[{type:l.MatDialogRef}]},y);function y(t){this._dialogRef=t,this.cancelButton="CANCEL",this.acceptButton="ACCEPT"}var b=(C.prototype.ngAfterViewInit=function(){var t=this;Promise.resolve().then(function(){t._input.nativeElement.focus()})},C.prototype.handleInputFocus=function(){this._input.nativeElement.select()},C.prototype.cancel=function(){this._dialogRef.close(undefined)},C.prototype.accept=function(){this._dialogRef.close(this.value)},C.decorators=[{type:i.Component,args:[{selector:"td-prompt-dialog",template:'<td-dialog>\n  <td-dialog-title *ngIf="title">\n    {{title}}\n  </td-dialog-title>\n  <td-dialog-content>\n    <span class="td-dialog-message">{{message}}</span>\n    <form #form="ngForm" novalidate>\n      <div class="td-dialog-input-wrapper">\n        <mat-form-field class="td-dialog-input">\n          <input matInput\n                #input\n                (focus)="handleInputFocus()"\n                (keydown.enter)="$event.preventDefault(); form.valid && accept()"\n                [(ngModel)]="value"\n                name="value"\n                required/>\n        </mat-form-field>\n      </div>\n    </form>\n  </td-dialog-content>\n  <td-dialog-actions>\n    <button mat-button\n            #closeBtn \n            (keydown.arrowright)="acceptBtn.focus()"\n            (click)="cancel()">{{cancelButton}}</button>\n    <button mat-button\n            color="accent"\n            #acceptBtn\n            (keydown.arrowleft)="closeBtn.focus()"\n            [disabled]="!form.valid"\n            (click)="accept()">{{acceptButton}}</button>\n  </td-dialog-actions>\n</td-dialog>',styles:[".td-dialog-input-wrapper{-ms-flex-direction:row;flex-direction:row;box-sizing:border-box;display:-ms-flexbox;display:flex}.td-dialog-input-wrapper .td-dialog-input{-ms-flex:1;flex:1;box-sizing:border-box}.td-dialog-message{word-break:break-word}"]}]}],C.ctorParameters=function(){return[{type:l.MatDialogRef}]},C.propDecorators={_input:[{type:i.ViewChild,args:["input"]}]},C);function C(t){this._dialogRef=t,this.cancelButton="CANCEL",this.acceptButton="ACCEPT"}var x=(w.prototype.open=function(t,o){return this._dialogService.open(t,o)},w.prototype.closeAll=function(){this._dialogService.closeAll()},w.prototype.openAlert=function(t){var o=this._createConfig(t),e=this._dialogService.open(m,o),n=e.componentInstance;return n.title=t.title,n.message=t.message,t.closeButton&&(n.closeButton=t.closeButton),e},w.prototype.openConfirm=function(t){var o=this._createConfig(t),e=this._dialogService.open(v,o),n=e.componentInstance;return n.title=t.title,n.message=t.message,t.acceptButton&&(n.acceptButton=t.acceptButton),t.cancelButton&&(n.cancelButton=t.cancelButton),e},w.prototype.openPrompt=function(t){var o=this._createConfig(t),e=this._dialogService.open(b,o),n=e.componentInstance;return n.title=t.title,n.message=t.message,n.value=t.value,t.acceptButton&&(n.acceptButton=t.acceptButton),t.cancelButton&&(n.cancelButton=t.cancelButton),e},w.prototype._createConfig=function(t){var o=new l.MatDialogConfig;return o.width="400px",Object.assign(o,t),o},w.decorators=[{type:i.Injectable}],w.ctorParameters=function(){return[{type:l.MatDialog}]},w);function w(t){this._dialogService=t}var B=[m,v,b,u,r,g,d],D=[m,v,b],_=(k.decorators=[{type:i.NgModule,args:[{imports:[e.FormsModule,o.CommonModule,l.MatDialogModule,n.MatInputModule,a.MatButtonModule],declarations:[B],exports:[B],providers:[x],entryComponents:[D]}]}],k);function k(){}t.CovalentDialogsModule=_,t.TdDialogTitleDirective=r,t.TdDialogContentDirective=d,t.TdDialogActionsDirective=g,t.TdDialogComponent=u,t.TdAlertDialogComponent=m,t.TdConfirmDialogComponent=v,t.TdPromptDialogComponent=b,t.TdDialogService=x,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=covalent-core-dialogs.umd.min.js.map